#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by cairo $as_me 1.10.2, which was
generated by GNU Autoconf 2.67.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" src/cairo.pc cairo-uninstalled.pc:src/cairo-uninstalled.pc.in src/cairo-ft.pc:src/cairo-features.pc.in cairo-ft-uninstalled.pc:src/cairo-features-uninstalled.pc.in src/cairo-fc.pc:src/cairo-features.pc.in cairo-fc-uninstalled.pc:src/cairo-features-uninstalled.pc.in Makefile boilerplate/Makefile src/Makefile test/Makefile test/pdiff/Makefile perf/Makefile util/Makefile util/cairo-fdr/Makefile util/cairo-gobject/Makefile util/cairo-script/Makefile util/cairo-script/examples/Makefile util/cairo-sphinx/Makefile util/cairo-trace/Makefile util/cairo-trace/cairo-trace doc/Makefile doc/public/Makefile"
config_headers=" config.h"
config_commands=" depfiles libtool ./build/Makefile.win32.features ./src/Makefile.am.features ./src/Makefile.win32.features ./boilerplate/Makefile.am.features ./boilerplate/Makefile.win32.features src/cairo-features.h src/cairo-supported-features.h ./build/Makefile.win32.features-h"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <http://bugs.freedesktop.org/enter_bug.cgi?product=cairo>."

ac_cs_config="'--target=arm-buildroot-linux-gnueabi' '--host=arm-buildroot-linux-gnueabi' '--build=i686-pc-linux-gnu' '--prefix=/usr' '--exec-prefix=/usr' '--sysconfdir=/etc' '--program-prefix=' '--disable-gtk-doc' '--enable-ipv6' '--enable-static' '--enable-shared' '--enable-trace=no' '--enable-interpreter=no' '--disable-directfb' '--disable-xlib' '--without-x' '--disable-ps' '--disable-pdf' '--disable-png' '--disable-svg' '--disable-tee' 'build_alias=i686-pc-linux-gnu' 'host_alias=arm-buildroot-linux-gnueabi' 'target_alias=arm-buildroot-linux-gnueabi' 'CC=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc' 'CFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 ' 'LDFLAGS=' 'CPPFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64' 'CPP=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp' 'PKG_CONFIG=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config' 'CXX=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++' 'CXXFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 '"
ac_cs_version="\
cairo config.status 1.10.2
configured by ./configure, generated by GNU Autoconf 2.67,
  with options \"$ac_cs_config\"

Copyright (C) 2010 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/bin/mkdir -p'
AWK='gawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X '/bin/sh' './configure'  '--target=arm-buildroot-linux-gnueabi' '--host=arm-buildroot-linux-gnueabi' '--build=i686-pc-linux-gnu' '--prefix=/usr' '--exec-prefix=/usr' '--sysconfdir=/etc' '--program-prefix=' '--disable-gtk-doc' '--enable-ipv6' '--enable-static' '--enable-shared' '--enable-trace=no' '--enable-interpreter=no' '--disable-directfb' '--disable-xlib' '--without-x' '--disable-ps' '--disable-pdf' '--disable-png' '--disable-svg' '--disable-tee' 'build_alias=i686-pc-linux-gnu' 'host_alias=arm-buildroot-linux-gnueabi' 'target_alias=arm-buildroot-linux-gnueabi' 'CC=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc' 'CFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 ' 'LDFLAGS=' 'CPPFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64' 'CPP=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp' 'PKG_CONFIG=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config' 'CXX=/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++' 'CXXFLAGS=-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 ' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="build"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
AS='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-as'
DLLTOOL='dlltool'
OBJDUMP='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-objdump'
macro_version='2.2.6b'
macro_revision='1.3017'
enable_shared='yes'
enable_static='yes'
pic_mode='default'
enable_fast_install='yes'
host_alias='arm-buildroot-linux-gnueabi'
host='arm-buildroot-linux-gnueabi'
host_os='linux-gnueabi'
build_alias='i686-pc-linux-gnu'
build='i686-pc-linux-gnu'
build_os='linux-gnu'
SED='/bin/sed'
Xsed='/bin/sed -e 1s/^X//'
GREP='/bin/grep'
EGREP='/bin/grep -E'
FGREP='/bin/grep -F'
LD='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld'
NM='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-nm'
LN_S='ln -s'
max_cmd_len='805306365'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
AR='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar'
AR_FLAGS='cru'
STRIP='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip'
RANLIB='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $oldlib'
CC='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc'
CFLAGS='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 '
compiler='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
objdir='.libs'
SHELL='/bin/sh'
ECHO='echo'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_static='-static'
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='${wl}--export-dynamic'
whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
	    echo "local: *; };" >> $output_objdir/$libname.ver~
	    $CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
hardcode_libdir_flag_spec_ld=''
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='no'
fix_srcfile_path=''
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='no'
libname_spec='lib$name'
library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
soname_spec='${libname}${release}${shared_ext}$major'
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec=''
sys_lib_dlsearch_path_spec='/lib /usr/lib /usr/lib/nvidia-current /lib/i386-linux-gnu /usr/lib/i386-linux-gnu /lib/i686-linux-gnu /usr/lib/i686-linux-gnu /usr/local/lib /usr/lib/nvidia-settings '
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip --strip-debug'
striplib='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip --strip-unneeded'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $oldlib'
compiler_CXX='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++'
GCC_CXX='yes'
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_pic_CXX=' -fPIC -DPIC'
lt_prog_compiler_static_CXX='-static'
lt_cv_prog_compiler_c_o_CXX='yes'
archive_cmds_need_lc_CXX='no'
enable_shared_with_static_runtimes_CXX='no'
export_dynamic_flag_spec_CXX='${wl}--export-dynamic'
whole_archive_flag_spec_CXX='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object_CXX='no'
old_archive_from_new_cmds_CXX=''
old_archive_from_expsyms_cmds_CXX=''
archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
module_cmds_CXX=''
module_expsym_cmds_CXX=''
with_gnu_ld_CXX='yes'
allow_undefined_flag_CXX=''
no_undefined_flag_CXX=''
hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'
hardcode_libdir_flag_spec_ld_CXX=''
hardcode_libdir_separator_CXX=''
hardcode_direct_CXX='no'
hardcode_direct_absolute_CXX='no'
hardcode_minus_L_CXX='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_automatic_CXX='no'
inherit_rpath_CXX='no'
link_all_deplibs_CXX='no'
fix_srcfile_path_CXX=''
always_export_symbols_CXX='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
prelink_cmds_CXX=''
file_list_spec_CXX=''
hardcode_action_CXX='immediate'
compiler_lib_search_dirs_CXX='/opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1 /opt/arm-2007q3/bin/../lib/gcc /opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1/../../../../arm-none-linux-gnueabi/lib /home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/lib /home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib'
predep_objects_CXX='/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/crti.o /opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1/crtbeginS.o'
postdep_objects_CXX='/opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1/crtendS.o /home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/crtn.o'
predeps_CXX=''
postdeps_CXX='-lstdc++ -lm -lgcc_s -lc -lgcc_s'
compiler_lib_search_path_CXX='-L/opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1 -L/opt/arm-2007q3/bin/../lib/gcc -L/opt/arm-2007q3/bin/../lib/gcc/arm-none-linux-gnueabi/4.2.1/../../../../arm-none-linux-gnueabi/lib -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/lib -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib'

LTCC='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc'
LTCFLAGS='-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 '
compiler='/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc'

# Quote evaled strings.
for var in SED GREP EGREP FGREP LD NM LN_S lt_SP2NL lt_NL2SP reload_flag deplibs_check_method file_magic_cmd AR AR_FLAGS STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix SHELL ECHO lt_prog_compiler_no_builtin_flag lt_prog_compiler_wl lt_prog_compiler_pic lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_flag_spec_ld hardcode_libdir_separator fix_srcfile_path exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX compiler_CXX lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_wl_CXX lt_prog_compiler_pic_CXX lt_prog_compiler_static_CXX lt_cv_prog_compiler_c_o_CXX export_dynamic_flag_spec_CXX whole_archive_flag_spec_CXX compiler_needs_object_CXX with_gnu_ld_CXX allow_undefined_flag_CXX no_undefined_flag_CXX hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_ld_CXX hardcode_libdir_separator_CXX fix_srcfile_path_CXX exclude_expsyms_CXX include_expsyms_CXX file_list_spec_CXX compiler_lib_search_dirs_CXX predep_objects_CXX postdep_objects_CXX predeps_CXX postdeps_CXX compiler_lib_search_path_CXX; do
    case `eval \\$ECHO "X\\$$var"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"X\$$var\" | \$Xsed -e \"\$sed_quote_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec old_archive_cmds_CXX old_archive_from_new_cmds_CXX old_archive_from_expsyms_cmds_CXX archive_cmds_CXX archive_expsym_cmds_CXX module_cmds_CXX module_expsym_cmds_CXX export_symbols_cmds_CXX prelink_cmds_CXX; do
    case `eval \\$ECHO "X\\$$var"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"X\$$var\" | \$Xsed -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Fix-up fallback echo if it was mangled by the above quoting rules.
case $lt_ECHO in
*'\$0 --fallback-echo"')  lt_ECHO=`$ECHO "X$lt_ECHO" | $Xsed -e 's/\\\\\\\$0 --fallback-echo"$/$0 --fallback-echo"/'`
  ;;
esac

ac_aux_dir='build'
xsi_shell='yes'
lt_shell_append='yes'

# See if we are running on zsh, and set the options which allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}" ; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='cairo'
    VERSION='1.10.2'
    TIMESTAMP=''
    RM='rm -f'
    ofile='libtool'





CAIRO_MAKEFILE___WIN32='# Generated by configure.  Modify to customize.

CAIRO_HAS_XLIB_SURFACE=0
CAIRO_HAS_XLIB_XRENDER_SURFACE=0
CAIRO_HAS_XCB_SURFACE=0
CAIRO_HAS_XLIB_XCB_FUNCTIONS=0
CAIRO_HAS_XCB_SHM_FUNCTIONS=0
CAIRO_HAS_QT_SURFACE=0
CAIRO_HAS_QUARTZ_SURFACE=0
CAIRO_HAS_QUARTZ_FONT=0
CAIRO_HAS_QUARTZ_IMAGE_SURFACE=0
CAIRO_HAS_WIN32_SURFACE=1
CAIRO_HAS_WIN32_FONT=1
CAIRO_HAS_SKIA_SURFACE=0
CAIRO_HAS_OS2_SURFACE=0
CAIRO_HAS_BEOS_SURFACE=0
CAIRO_HAS_DRM_SURFACE=0
CAIRO_HAS_DRM_XR_FUNCTIONS=0
CAIRO_HAS_GALLIUM_SURFACE=0
CAIRO_HAS_XCB_DRM_FUNCTIONS=0
CAIRO_HAS_PNG_FUNCTIONS=1
CAIRO_HAS_GL_SURFACE=0
CAIRO_HAS_DIRECTFB_SURFACE=0
CAIRO_HAS_VG_SURFACE=0
CAIRO_HAS_EGL_FUNCTIONS=0
CAIRO_HAS_GLX_FUNCTIONS=0
CAIRO_HAS_WGL_FUNCTIONS=0
CAIRO_HAS_SCRIPT_SURFACE=0
CAIRO_HAS_FT_FONT=0
CAIRO_HAS_FC_FONT=0
CAIRO_HAS_PS_SURFACE=1
CAIRO_HAS_PDF_SURFACE=1
CAIRO_HAS_SVG_SURFACE=1
CAIRO_HAS_TEST_SURFACES=0
CAIRO_HAS_TEE_SURFACE=0
CAIRO_HAS_XML_SURFACE=0
CAIRO_HAS_PTHREAD=0
CAIRO_HAS_GOBJECT_FUNCTIONS=0
CAIRO_HAS_TRACE=0
CAIRO_HAS_INTERPRETER=1
CAIRO_HAS_SYMBOL_LOOKUP=0'
CAIRO_MAKEFILE_cairo_AMAKE='# Generated by configure.  Do not edit.

include $(top_srcdir)/src/Makefile.sources

supported_cairo_headers = $(cairo_headers)
unsupported_cairo_headers =
all_cairo_headers = $(cairo_headers)
all_cairo_private = $(cairo_private)
all_cairo_cxx_sources = $(cairo_cxx_sources)
all_cairo_sources = $(cairo_sources)

enabled_cairo_headers = $(cairo_headers)
enabled_cairo_private = $(cairo_private)
enabled_cairo_cxx_sources = $(cairo_cxx_sources)
enabled_cairo_sources = $(cairo_sources)

all_cairo_pkgconf = cairo.pc
enabled_cairo_pkgconf = cairo.pc

supported_cairo_headers += $(cairo_xlib_headers)
all_cairo_headers += $(cairo_xlib_headers)
all_cairo_private += $(cairo_xlib_private)
all_cairo_cxx_sources += $(cairo_xlib_cxx_sources)
all_cairo_sources += $(cairo_xlib_sources)
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_headers += $(cairo_xlib_headers)
enabled_cairo_private += $(cairo_xlib_private)
enabled_cairo_cxx_sources += $(cairo_xlib_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_sources)
endif
all_cairo_pkgconf += cairo-xlib.pc
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_pkgconf += cairo-xlib.pc
endif

supported_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_private += $(cairo_xlib_xrender_private)
all_cairo_cxx_sources += $(cairo_xlib_xrender_cxx_sources)
all_cairo_sources += $(cairo_xlib_xrender_sources)
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_headers += $(cairo_xlib_xrender_headers)
enabled_cairo_private += $(cairo_xlib_xrender_private)
enabled_cairo_cxx_sources += $(cairo_xlib_xrender_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_xrender_sources)
endif
all_cairo_pkgconf += cairo-xlib-xrender.pc
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_pkgconf += cairo-xlib-xrender.pc
endif

unsupported_cairo_headers += $(cairo_xcb_headers)
all_cairo_headers += $(cairo_xcb_headers)
all_cairo_private += $(cairo_xcb_private)
all_cairo_cxx_sources += $(cairo_xcb_cxx_sources)
all_cairo_sources += $(cairo_xcb_sources)
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_headers += $(cairo_xcb_headers)
enabled_cairo_private += $(cairo_xcb_private)
enabled_cairo_cxx_sources += $(cairo_xcb_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_sources)
endif
all_cairo_pkgconf += cairo-xcb.pc
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_pkgconf += cairo-xcb.pc
endif

unsupported_cairo_headers += $(cairo_xlib_xcb_headers)
all_cairo_headers += $(cairo_xlib_xcb_headers)
all_cairo_private += $(cairo_xlib_xcb_private)
all_cairo_cxx_sources += $(cairo_xlib_xcb_cxx_sources)
all_cairo_sources += $(cairo_xlib_xcb_sources)
if CAIRO_HAS_XLIB_XCB_FUNCTIONS
enabled_cairo_headers += $(cairo_xlib_xcb_headers)
enabled_cairo_private += $(cairo_xlib_xcb_private)
enabled_cairo_cxx_sources += $(cairo_xlib_xcb_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_xcb_sources)
endif
all_cairo_pkgconf += cairo-xlib-xcb.pc
if CAIRO_HAS_XLIB_XCB_FUNCTIONS
enabled_cairo_pkgconf += cairo-xlib-xcb.pc
endif

supported_cairo_headers += $(cairo_xcb_shm_headers)
all_cairo_headers += $(cairo_xcb_shm_headers)
all_cairo_private += $(cairo_xcb_shm_private)
all_cairo_cxx_sources += $(cairo_xcb_shm_cxx_sources)
all_cairo_sources += $(cairo_xcb_shm_sources)
if CAIRO_HAS_XCB_SHM_FUNCTIONS
enabled_cairo_headers += $(cairo_xcb_shm_headers)
enabled_cairo_private += $(cairo_xcb_shm_private)
enabled_cairo_cxx_sources += $(cairo_xcb_shm_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_shm_sources)
endif
all_cairo_pkgconf += cairo-xcb-shm.pc
if CAIRO_HAS_XCB_SHM_FUNCTIONS
enabled_cairo_pkgconf += cairo-xcb-shm.pc
endif

unsupported_cairo_headers += $(cairo_qt_headers)
all_cairo_headers += $(cairo_qt_headers)
all_cairo_private += $(cairo_qt_private)
all_cairo_cxx_sources += $(cairo_qt_cxx_sources)
all_cairo_sources += $(cairo_qt_sources)
if CAIRO_HAS_QT_SURFACE
enabled_cairo_headers += $(cairo_qt_headers)
enabled_cairo_private += $(cairo_qt_private)
enabled_cairo_cxx_sources += $(cairo_qt_cxx_sources)
enabled_cairo_sources += $(cairo_qt_sources)
endif
all_cairo_pkgconf += cairo-qt.pc
if CAIRO_HAS_QT_SURFACE
enabled_cairo_pkgconf += cairo-qt.pc
endif

supported_cairo_headers += $(cairo_quartz_headers)
all_cairo_headers += $(cairo_quartz_headers)
all_cairo_private += $(cairo_quartz_private)
all_cairo_cxx_sources += $(cairo_quartz_cxx_sources)
all_cairo_sources += $(cairo_quartz_sources)
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_headers += $(cairo_quartz_headers)
enabled_cairo_private += $(cairo_quartz_private)
enabled_cairo_cxx_sources += $(cairo_quartz_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_sources)
endif
all_cairo_pkgconf += cairo-quartz.pc
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_pkgconf += cairo-quartz.pc
endif

supported_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_private += $(cairo_quartz_font_private)
all_cairo_cxx_sources += $(cairo_quartz_font_cxx_sources)
all_cairo_sources += $(cairo_quartz_font_sources)
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_headers += $(cairo_quartz_font_headers)
enabled_cairo_private += $(cairo_quartz_font_private)
enabled_cairo_cxx_sources += $(cairo_quartz_font_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_font_sources)
endif
all_cairo_pkgconf += cairo-quartz-font.pc
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_pkgconf += cairo-quartz-font.pc
endif

unsupported_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_private += $(cairo_quartz_image_private)
all_cairo_cxx_sources += $(cairo_quartz_image_cxx_sources)
all_cairo_sources += $(cairo_quartz_image_sources)
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_headers += $(cairo_quartz_image_headers)
enabled_cairo_private += $(cairo_quartz_image_private)
enabled_cairo_cxx_sources += $(cairo_quartz_image_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_image_sources)
endif
all_cairo_pkgconf += cairo-quartz-image.pc
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_pkgconf += cairo-quartz-image.pc
endif

supported_cairo_headers += $(cairo_win32_headers)
all_cairo_headers += $(cairo_win32_headers)
all_cairo_private += $(cairo_win32_private)
all_cairo_cxx_sources += $(cairo_win32_cxx_sources)
all_cairo_sources += $(cairo_win32_sources)
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_headers += $(cairo_win32_headers)
enabled_cairo_private += $(cairo_win32_private)
enabled_cairo_cxx_sources += $(cairo_win32_cxx_sources)
enabled_cairo_sources += $(cairo_win32_sources)
endif
all_cairo_pkgconf += cairo-win32.pc
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_pkgconf += cairo-win32.pc
endif

supported_cairo_headers += $(cairo_win32_font_headers)
all_cairo_headers += $(cairo_win32_font_headers)
all_cairo_private += $(cairo_win32_font_private)
all_cairo_cxx_sources += $(cairo_win32_font_cxx_sources)
all_cairo_sources += $(cairo_win32_font_sources)
if CAIRO_HAS_WIN32_FONT
enabled_cairo_headers += $(cairo_win32_font_headers)
enabled_cairo_private += $(cairo_win32_font_private)
enabled_cairo_cxx_sources += $(cairo_win32_font_cxx_sources)
enabled_cairo_sources += $(cairo_win32_font_sources)
endif
all_cairo_pkgconf += cairo-win32-font.pc
if CAIRO_HAS_WIN32_FONT
enabled_cairo_pkgconf += cairo-win32-font.pc
endif

unsupported_cairo_headers += $(cairo_skia_headers)
all_cairo_headers += $(cairo_skia_headers)
all_cairo_private += $(cairo_skia_private)
all_cairo_cxx_sources += $(cairo_skia_cxx_sources)
all_cairo_sources += $(cairo_skia_sources)
if CAIRO_HAS_SKIA_SURFACE
enabled_cairo_headers += $(cairo_skia_headers)
enabled_cairo_private += $(cairo_skia_private)
enabled_cairo_cxx_sources += $(cairo_skia_cxx_sources)
enabled_cairo_sources += $(cairo_skia_sources)
endif
all_cairo_pkgconf += cairo-skia.pc
if CAIRO_HAS_SKIA_SURFACE
enabled_cairo_pkgconf += cairo-skia.pc
endif

unsupported_cairo_headers += $(cairo_os2_headers)
all_cairo_headers += $(cairo_os2_headers)
all_cairo_private += $(cairo_os2_private)
all_cairo_cxx_sources += $(cairo_os2_cxx_sources)
all_cairo_sources += $(cairo_os2_sources)
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_headers += $(cairo_os2_headers)
enabled_cairo_private += $(cairo_os2_private)
enabled_cairo_cxx_sources += $(cairo_os2_cxx_sources)
enabled_cairo_sources += $(cairo_os2_sources)
endif
all_cairo_pkgconf += cairo-os2.pc
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_pkgconf += cairo-os2.pc
endif

unsupported_cairo_headers += $(cairo_beos_headers)
all_cairo_headers += $(cairo_beos_headers)
all_cairo_private += $(cairo_beos_private)
all_cairo_cxx_sources += $(cairo_beos_cxx_sources)
all_cairo_sources += $(cairo_beos_sources)
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_headers += $(cairo_beos_headers)
enabled_cairo_private += $(cairo_beos_private)
enabled_cairo_cxx_sources += $(cairo_beos_cxx_sources)
enabled_cairo_sources += $(cairo_beos_sources)
endif
all_cairo_pkgconf += cairo-beos.pc
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_pkgconf += cairo-beos.pc
endif

unsupported_cairo_headers += $(cairo_drm_headers)
all_cairo_headers += $(cairo_drm_headers)
all_cairo_private += $(cairo_drm_private)
all_cairo_cxx_sources += $(cairo_drm_cxx_sources)
all_cairo_sources += $(cairo_drm_sources)
if CAIRO_HAS_DRM_SURFACE
enabled_cairo_headers += $(cairo_drm_headers)
enabled_cairo_private += $(cairo_drm_private)
enabled_cairo_cxx_sources += $(cairo_drm_cxx_sources)
enabled_cairo_sources += $(cairo_drm_sources)
endif
all_cairo_pkgconf += cairo-drm.pc
if CAIRO_HAS_DRM_SURFACE
enabled_cairo_pkgconf += cairo-drm.pc
endif

unsupported_cairo_headers += $(cairo_drm_xr_headers)
all_cairo_headers += $(cairo_drm_xr_headers)
all_cairo_private += $(cairo_drm_xr_private)
all_cairo_cxx_sources += $(cairo_drm_xr_cxx_sources)
all_cairo_sources += $(cairo_drm_xr_sources)
if CAIRO_HAS_DRM_XR_FUNCTIONS
enabled_cairo_headers += $(cairo_drm_xr_headers)
enabled_cairo_private += $(cairo_drm_xr_private)
enabled_cairo_cxx_sources += $(cairo_drm_xr_cxx_sources)
enabled_cairo_sources += $(cairo_drm_xr_sources)
endif
all_cairo_pkgconf += cairo-drm-xr.pc
if CAIRO_HAS_DRM_XR_FUNCTIONS
enabled_cairo_pkgconf += cairo-drm-xr.pc
endif

unsupported_cairo_headers += $(cairo_gallium_headers)
all_cairo_headers += $(cairo_gallium_headers)
all_cairo_private += $(cairo_gallium_private)
all_cairo_cxx_sources += $(cairo_gallium_cxx_sources)
all_cairo_sources += $(cairo_gallium_sources)
if CAIRO_HAS_GALLIUM_SURFACE
enabled_cairo_headers += $(cairo_gallium_headers)
enabled_cairo_private += $(cairo_gallium_private)
enabled_cairo_cxx_sources += $(cairo_gallium_cxx_sources)
enabled_cairo_sources += $(cairo_gallium_sources)
endif
all_cairo_pkgconf += cairo-gallium.pc
if CAIRO_HAS_GALLIUM_SURFACE
enabled_cairo_pkgconf += cairo-gallium.pc
endif

unsupported_cairo_headers += $(cairo_xcb_drm_headers)
all_cairo_headers += $(cairo_xcb_drm_headers)
all_cairo_private += $(cairo_xcb_drm_private)
all_cairo_cxx_sources += $(cairo_xcb_drm_cxx_sources)
all_cairo_sources += $(cairo_xcb_drm_sources)
if CAIRO_HAS_XCB_DRM_FUNCTIONS
enabled_cairo_headers += $(cairo_xcb_drm_headers)
enabled_cairo_private += $(cairo_xcb_drm_private)
enabled_cairo_cxx_sources += $(cairo_xcb_drm_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_drm_sources)
endif
all_cairo_pkgconf += cairo-xcb-drm.pc
if CAIRO_HAS_XCB_DRM_FUNCTIONS
enabled_cairo_pkgconf += cairo-xcb-drm.pc
endif

supported_cairo_headers += $(cairo_png_headers)
all_cairo_headers += $(cairo_png_headers)
all_cairo_private += $(cairo_png_private)
all_cairo_cxx_sources += $(cairo_png_cxx_sources)
all_cairo_sources += $(cairo_png_sources)
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_headers += $(cairo_png_headers)
enabled_cairo_private += $(cairo_png_private)
enabled_cairo_cxx_sources += $(cairo_png_cxx_sources)
enabled_cairo_sources += $(cairo_png_sources)
endif
all_cairo_pkgconf += cairo-png.pc
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_pkgconf += cairo-png.pc
endif

unsupported_cairo_headers += $(cairo_gl_headers)
all_cairo_headers += $(cairo_gl_headers)
all_cairo_private += $(cairo_gl_private)
all_cairo_cxx_sources += $(cairo_gl_cxx_sources)
all_cairo_sources += $(cairo_gl_sources)
if CAIRO_HAS_GL_SURFACE
enabled_cairo_headers += $(cairo_gl_headers)
enabled_cairo_private += $(cairo_gl_private)
enabled_cairo_cxx_sources += $(cairo_gl_cxx_sources)
enabled_cairo_sources += $(cairo_gl_sources)
endif
all_cairo_pkgconf += cairo-gl.pc
if CAIRO_HAS_GL_SURFACE
enabled_cairo_pkgconf += cairo-gl.pc
endif

unsupported_cairo_headers += $(cairo_directfb_headers)
all_cairo_headers += $(cairo_directfb_headers)
all_cairo_private += $(cairo_directfb_private)
all_cairo_cxx_sources += $(cairo_directfb_cxx_sources)
all_cairo_sources += $(cairo_directfb_sources)
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_headers += $(cairo_directfb_headers)
enabled_cairo_private += $(cairo_directfb_private)
enabled_cairo_cxx_sources += $(cairo_directfb_cxx_sources)
enabled_cairo_sources += $(cairo_directfb_sources)
endif
all_cairo_pkgconf += cairo-directfb.pc
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_pkgconf += cairo-directfb.pc
endif

unsupported_cairo_headers += $(cairo_vg_headers)
all_cairo_headers += $(cairo_vg_headers)
all_cairo_private += $(cairo_vg_private)
all_cairo_cxx_sources += $(cairo_vg_cxx_sources)
all_cairo_sources += $(cairo_vg_sources)
if CAIRO_HAS_VG_SURFACE
enabled_cairo_headers += $(cairo_vg_headers)
enabled_cairo_private += $(cairo_vg_private)
enabled_cairo_cxx_sources += $(cairo_vg_cxx_sources)
enabled_cairo_sources += $(cairo_vg_sources)
endif
all_cairo_pkgconf += cairo-vg.pc
if CAIRO_HAS_VG_SURFACE
enabled_cairo_pkgconf += cairo-vg.pc
endif

supported_cairo_headers += $(cairo_egl_headers)
all_cairo_headers += $(cairo_egl_headers)
all_cairo_private += $(cairo_egl_private)
all_cairo_cxx_sources += $(cairo_egl_cxx_sources)
all_cairo_sources += $(cairo_egl_sources)
if CAIRO_HAS_EGL_FUNCTIONS
enabled_cairo_headers += $(cairo_egl_headers)
enabled_cairo_private += $(cairo_egl_private)
enabled_cairo_cxx_sources += $(cairo_egl_cxx_sources)
enabled_cairo_sources += $(cairo_egl_sources)
endif
all_cairo_pkgconf += cairo-egl.pc
if CAIRO_HAS_EGL_FUNCTIONS
enabled_cairo_pkgconf += cairo-egl.pc
endif

supported_cairo_headers += $(cairo_glx_headers)
all_cairo_headers += $(cairo_glx_headers)
all_cairo_private += $(cairo_glx_private)
all_cairo_cxx_sources += $(cairo_glx_cxx_sources)
all_cairo_sources += $(cairo_glx_sources)
if CAIRO_HAS_GLX_FUNCTIONS
enabled_cairo_headers += $(cairo_glx_headers)
enabled_cairo_private += $(cairo_glx_private)
enabled_cairo_cxx_sources += $(cairo_glx_cxx_sources)
enabled_cairo_sources += $(cairo_glx_sources)
endif
all_cairo_pkgconf += cairo-glx.pc
if CAIRO_HAS_GLX_FUNCTIONS
enabled_cairo_pkgconf += cairo-glx.pc
endif

supported_cairo_headers += $(cairo_wgl_headers)
all_cairo_headers += $(cairo_wgl_headers)
all_cairo_private += $(cairo_wgl_private)
all_cairo_cxx_sources += $(cairo_wgl_cxx_sources)
all_cairo_sources += $(cairo_wgl_sources)
if CAIRO_HAS_WGL_FUNCTIONS
enabled_cairo_headers += $(cairo_wgl_headers)
enabled_cairo_private += $(cairo_wgl_private)
enabled_cairo_cxx_sources += $(cairo_wgl_cxx_sources)
enabled_cairo_sources += $(cairo_wgl_sources)
endif
all_cairo_pkgconf += cairo-wgl.pc
if CAIRO_HAS_WGL_FUNCTIONS
enabled_cairo_pkgconf += cairo-wgl.pc
endif

unsupported_cairo_headers += $(cairo_script_headers)
all_cairo_headers += $(cairo_script_headers)
all_cairo_private += $(cairo_script_private)
all_cairo_cxx_sources += $(cairo_script_cxx_sources)
all_cairo_sources += $(cairo_script_sources)
if CAIRO_HAS_SCRIPT_SURFACE
enabled_cairo_headers += $(cairo_script_headers)
enabled_cairo_private += $(cairo_script_private)
enabled_cairo_cxx_sources += $(cairo_script_cxx_sources)
enabled_cairo_sources += $(cairo_script_sources)
endif
all_cairo_pkgconf += cairo-script.pc
if CAIRO_HAS_SCRIPT_SURFACE
enabled_cairo_pkgconf += cairo-script.pc
endif

supported_cairo_headers += $(cairo_ft_headers)
all_cairo_headers += $(cairo_ft_headers)
all_cairo_private += $(cairo_ft_private)
all_cairo_cxx_sources += $(cairo_ft_cxx_sources)
all_cairo_sources += $(cairo_ft_sources)
if CAIRO_HAS_FT_FONT
enabled_cairo_headers += $(cairo_ft_headers)
enabled_cairo_private += $(cairo_ft_private)
enabled_cairo_cxx_sources += $(cairo_ft_cxx_sources)
enabled_cairo_sources += $(cairo_ft_sources)
endif
all_cairo_pkgconf += cairo-ft.pc
if CAIRO_HAS_FT_FONT
enabled_cairo_pkgconf += cairo-ft.pc
endif

supported_cairo_headers += $(cairo_fc_headers)
all_cairo_headers += $(cairo_fc_headers)
all_cairo_private += $(cairo_fc_private)
all_cairo_cxx_sources += $(cairo_fc_cxx_sources)
all_cairo_sources += $(cairo_fc_sources)
if CAIRO_HAS_FC_FONT
enabled_cairo_headers += $(cairo_fc_headers)
enabled_cairo_private += $(cairo_fc_private)
enabled_cairo_cxx_sources += $(cairo_fc_cxx_sources)
enabled_cairo_sources += $(cairo_fc_sources)
endif
all_cairo_pkgconf += cairo-fc.pc
if CAIRO_HAS_FC_FONT
enabled_cairo_pkgconf += cairo-fc.pc
endif

supported_cairo_headers += $(cairo_ps_headers)
all_cairo_headers += $(cairo_ps_headers)
all_cairo_private += $(cairo_ps_private)
all_cairo_cxx_sources += $(cairo_ps_cxx_sources)
all_cairo_sources += $(cairo_ps_sources)
if CAIRO_HAS_PS_SURFACE
enabled_cairo_headers += $(cairo_ps_headers)
enabled_cairo_private += $(cairo_ps_private)
enabled_cairo_cxx_sources += $(cairo_ps_cxx_sources)
enabled_cairo_sources += $(cairo_ps_sources)
endif
all_cairo_pkgconf += cairo-ps.pc
if CAIRO_HAS_PS_SURFACE
enabled_cairo_pkgconf += cairo-ps.pc
endif

supported_cairo_headers += $(cairo_pdf_headers)
all_cairo_headers += $(cairo_pdf_headers)
all_cairo_private += $(cairo_pdf_private)
all_cairo_cxx_sources += $(cairo_pdf_cxx_sources)
all_cairo_sources += $(cairo_pdf_sources)
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_headers += $(cairo_pdf_headers)
enabled_cairo_private += $(cairo_pdf_private)
enabled_cairo_cxx_sources += $(cairo_pdf_cxx_sources)
enabled_cairo_sources += $(cairo_pdf_sources)
endif
all_cairo_pkgconf += cairo-pdf.pc
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_pkgconf += cairo-pdf.pc
endif

supported_cairo_headers += $(cairo_svg_headers)
all_cairo_headers += $(cairo_svg_headers)
all_cairo_private += $(cairo_svg_private)
all_cairo_cxx_sources += $(cairo_svg_cxx_sources)
all_cairo_sources += $(cairo_svg_sources)
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_headers += $(cairo_svg_headers)
enabled_cairo_private += $(cairo_svg_private)
enabled_cairo_cxx_sources += $(cairo_svg_cxx_sources)
enabled_cairo_sources += $(cairo_svg_sources)
endif
all_cairo_pkgconf += cairo-svg.pc
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_pkgconf += cairo-svg.pc
endif

all_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
all_cairo_cxx_sources += $(cairo_test_surfaces_cxx_sources)
all_cairo_sources += $(cairo_test_surfaces_sources)
if CAIRO_HAS_TEST_SURFACES
enabled_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
enabled_cairo_cxx_sources += $(cairo_test_surfaces_cxx_sources)
enabled_cairo_sources += $(cairo_test_surfaces_sources)
endif

supported_cairo_headers += $(cairo_image_headers)
all_cairo_headers += $(cairo_image_headers)
all_cairo_private += $(cairo_image_private)
all_cairo_cxx_sources += $(cairo_image_cxx_sources)
all_cairo_sources += $(cairo_image_sources)
enabled_cairo_headers += $(cairo_image_headers)
enabled_cairo_private += $(cairo_image_private)
enabled_cairo_cxx_sources += $(cairo_image_cxx_sources)
enabled_cairo_sources += $(cairo_image_sources)

supported_cairo_headers += $(cairo_recording_headers)
all_cairo_headers += $(cairo_recording_headers)
all_cairo_private += $(cairo_recording_private)
all_cairo_cxx_sources += $(cairo_recording_cxx_sources)
all_cairo_sources += $(cairo_recording_sources)
enabled_cairo_headers += $(cairo_recording_headers)
enabled_cairo_private += $(cairo_recording_private)
enabled_cairo_cxx_sources += $(cairo_recording_cxx_sources)
enabled_cairo_sources += $(cairo_recording_sources)

unsupported_cairo_headers += $(cairo_tee_headers)
all_cairo_headers += $(cairo_tee_headers)
all_cairo_private += $(cairo_tee_private)
all_cairo_cxx_sources += $(cairo_tee_cxx_sources)
all_cairo_sources += $(cairo_tee_sources)
if CAIRO_HAS_TEE_SURFACE
enabled_cairo_headers += $(cairo_tee_headers)
enabled_cairo_private += $(cairo_tee_private)
enabled_cairo_cxx_sources += $(cairo_tee_cxx_sources)
enabled_cairo_sources += $(cairo_tee_sources)
endif
all_cairo_pkgconf += cairo-tee.pc
if CAIRO_HAS_TEE_SURFACE
enabled_cairo_pkgconf += cairo-tee.pc
endif

unsupported_cairo_headers += $(cairo_xml_headers)
all_cairo_headers += $(cairo_xml_headers)
all_cairo_private += $(cairo_xml_private)
all_cairo_cxx_sources += $(cairo_xml_cxx_sources)
all_cairo_sources += $(cairo_xml_sources)
if CAIRO_HAS_XML_SURFACE
enabled_cairo_headers += $(cairo_xml_headers)
enabled_cairo_private += $(cairo_xml_private)
enabled_cairo_cxx_sources += $(cairo_xml_cxx_sources)
enabled_cairo_sources += $(cairo_xml_sources)
endif
all_cairo_pkgconf += cairo-xml.pc
if CAIRO_HAS_XML_SURFACE
enabled_cairo_pkgconf += cairo-xml.pc
endif

supported_cairo_headers += $(cairo_user_headers)
all_cairo_headers += $(cairo_user_headers)
all_cairo_private += $(cairo_user_private)
all_cairo_cxx_sources += $(cairo_user_cxx_sources)
all_cairo_sources += $(cairo_user_sources)
enabled_cairo_headers += $(cairo_user_headers)
enabled_cairo_private += $(cairo_user_private)
enabled_cairo_cxx_sources += $(cairo_user_cxx_sources)
enabled_cairo_sources += $(cairo_user_sources)

all_cairo_private += $(cairo_pthread_private) $(cairo_pthread_headers)
all_cairo_cxx_sources += $(cairo_pthread_cxx_sources)
all_cairo_sources += $(cairo_pthread_sources)
if CAIRO_HAS_PTHREAD
enabled_cairo_private += $(cairo_pthread_private) $(cairo_pthread_headers)
enabled_cairo_cxx_sources += $(cairo_pthread_cxx_sources)
enabled_cairo_sources += $(cairo_pthread_sources)
endif

supported_cairo_headers += $(cairo_gobject_headers)
all_cairo_headers += $(cairo_gobject_headers)
all_cairo_private += $(cairo_gobject_private)
all_cairo_cxx_sources += $(cairo_gobject_cxx_sources)
all_cairo_sources += $(cairo_gobject_sources)
if CAIRO_HAS_GOBJECT_FUNCTIONS
enabled_cairo_headers += $(cairo_gobject_headers)
enabled_cairo_private += $(cairo_gobject_private)
enabled_cairo_cxx_sources += $(cairo_gobject_cxx_sources)
enabled_cairo_sources += $(cairo_gobject_sources)
endif
all_cairo_pkgconf += cairo-gobject.pc
if CAIRO_HAS_GOBJECT_FUNCTIONS
enabled_cairo_pkgconf += cairo-gobject.pc
endif

all_cairo_private += $(cairo_trace_private) $(cairo_trace_headers)
all_cairo_cxx_sources += $(cairo_trace_cxx_sources)
all_cairo_sources += $(cairo_trace_sources)
if CAIRO_HAS_TRACE
enabled_cairo_private += $(cairo_trace_private) $(cairo_trace_headers)
enabled_cairo_cxx_sources += $(cairo_trace_cxx_sources)
enabled_cairo_sources += $(cairo_trace_sources)
endif

all_cairo_private += $(cairo_interpreter_private) $(cairo_interpreter_headers)
all_cairo_cxx_sources += $(cairo_interpreter_cxx_sources)
all_cairo_sources += $(cairo_interpreter_sources)
if CAIRO_HAS_INTERPRETER
enabled_cairo_private += $(cairo_interpreter_private) $(cairo_interpreter_headers)
enabled_cairo_cxx_sources += $(cairo_interpreter_cxx_sources)
enabled_cairo_sources += $(cairo_interpreter_sources)
endif

all_cairo_private += $(cairo_symbol_lookup_private) $(cairo_symbol_lookup_headers)
all_cairo_cxx_sources += $(cairo_symbol_lookup_cxx_sources)
all_cairo_sources += $(cairo_symbol_lookup_sources)
if CAIRO_HAS_SYMBOL_LOOKUP
enabled_cairo_private += $(cairo_symbol_lookup_private) $(cairo_symbol_lookup_headers)
enabled_cairo_cxx_sources += $(cairo_symbol_lookup_cxx_sources)
enabled_cairo_sources += $(cairo_symbol_lookup_sources)
endif'
CAIRO_MAKEFILE_cairo_WIN32='# Generated by configure.  Do not edit.

ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/src/Makefile.sources
endif

supported_cairo_headers = $(cairo_headers)
unsupported_cairo_headers =
all_cairo_headers = $(cairo_headers)
all_cairo_private = $(cairo_private)
all_cairo_cxx_sources = $(cairo_cxx_sources)
all_cairo_sources = $(cairo_sources)

enabled_cairo_headers = $(cairo_headers)
enabled_cairo_private = $(cairo_private)
enabled_cairo_cxx_sources = $(cairo_cxx_sources)
enabled_cairo_sources = $(cairo_sources)

all_cairo_pkgconf = cairo.pc
enabled_cairo_pkgconf = cairo.pc

supported_cairo_headers += $(cairo_xlib_headers)
all_cairo_headers += $(cairo_xlib_headers)
all_cairo_private += $(cairo_xlib_private)
all_cairo_cxx_sources += $(cairo_xlib_cxx_sources)
all_cairo_sources += $(cairo_xlib_sources)
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_headers += $(cairo_xlib_headers)
enabled_cairo_private += $(cairo_xlib_private)
enabled_cairo_cxx_sources += $(cairo_xlib_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_sources)
endif
all_cairo_pkgconf += cairo-xlib.pc
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_pkgconf += cairo-xlib.pc
endif

supported_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_headers += $(cairo_xlib_xrender_headers)
all_cairo_private += $(cairo_xlib_xrender_private)
all_cairo_cxx_sources += $(cairo_xlib_xrender_cxx_sources)
all_cairo_sources += $(cairo_xlib_xrender_sources)
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_headers += $(cairo_xlib_xrender_headers)
enabled_cairo_private += $(cairo_xlib_xrender_private)
enabled_cairo_cxx_sources += $(cairo_xlib_xrender_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_xrender_sources)
endif
all_cairo_pkgconf += cairo-xlib-xrender.pc
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_pkgconf += cairo-xlib-xrender.pc
endif

unsupported_cairo_headers += $(cairo_xcb_headers)
all_cairo_headers += $(cairo_xcb_headers)
all_cairo_private += $(cairo_xcb_private)
all_cairo_cxx_sources += $(cairo_xcb_cxx_sources)
all_cairo_sources += $(cairo_xcb_sources)
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_headers += $(cairo_xcb_headers)
enabled_cairo_private += $(cairo_xcb_private)
enabled_cairo_cxx_sources += $(cairo_xcb_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_sources)
endif
all_cairo_pkgconf += cairo-xcb.pc
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_pkgconf += cairo-xcb.pc
endif

unsupported_cairo_headers += $(cairo_xlib_xcb_headers)
all_cairo_headers += $(cairo_xlib_xcb_headers)
all_cairo_private += $(cairo_xlib_xcb_private)
all_cairo_cxx_sources += $(cairo_xlib_xcb_cxx_sources)
all_cairo_sources += $(cairo_xlib_xcb_sources)
ifeq ($(CAIRO_HAS_XLIB_XCB_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_xlib_xcb_headers)
enabled_cairo_private += $(cairo_xlib_xcb_private)
enabled_cairo_cxx_sources += $(cairo_xlib_xcb_cxx_sources)
enabled_cairo_sources += $(cairo_xlib_xcb_sources)
endif
all_cairo_pkgconf += cairo-xlib-xcb.pc
ifeq ($(CAIRO_HAS_XLIB_XCB_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-xlib-xcb.pc
endif

supported_cairo_headers += $(cairo_xcb_shm_headers)
all_cairo_headers += $(cairo_xcb_shm_headers)
all_cairo_private += $(cairo_xcb_shm_private)
all_cairo_cxx_sources += $(cairo_xcb_shm_cxx_sources)
all_cairo_sources += $(cairo_xcb_shm_sources)
ifeq ($(CAIRO_HAS_XCB_SHM_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_xcb_shm_headers)
enabled_cairo_private += $(cairo_xcb_shm_private)
enabled_cairo_cxx_sources += $(cairo_xcb_shm_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_shm_sources)
endif
all_cairo_pkgconf += cairo-xcb-shm.pc
ifeq ($(CAIRO_HAS_XCB_SHM_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-xcb-shm.pc
endif

unsupported_cairo_headers += $(cairo_qt_headers)
all_cairo_headers += $(cairo_qt_headers)
all_cairo_private += $(cairo_qt_private)
all_cairo_cxx_sources += $(cairo_qt_cxx_sources)
all_cairo_sources += $(cairo_qt_sources)
ifeq ($(CAIRO_HAS_QT_SURFACE),1)
enabled_cairo_headers += $(cairo_qt_headers)
enabled_cairo_private += $(cairo_qt_private)
enabled_cairo_cxx_sources += $(cairo_qt_cxx_sources)
enabled_cairo_sources += $(cairo_qt_sources)
endif
all_cairo_pkgconf += cairo-qt.pc
ifeq ($(CAIRO_HAS_QT_SURFACE),1)
enabled_cairo_pkgconf += cairo-qt.pc
endif

supported_cairo_headers += $(cairo_quartz_headers)
all_cairo_headers += $(cairo_quartz_headers)
all_cairo_private += $(cairo_quartz_private)
all_cairo_cxx_sources += $(cairo_quartz_cxx_sources)
all_cairo_sources += $(cairo_quartz_sources)
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_headers += $(cairo_quartz_headers)
enabled_cairo_private += $(cairo_quartz_private)
enabled_cairo_cxx_sources += $(cairo_quartz_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_sources)
endif
all_cairo_pkgconf += cairo-quartz.pc
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_pkgconf += cairo-quartz.pc
endif

supported_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_headers += $(cairo_quartz_font_headers)
all_cairo_private += $(cairo_quartz_font_private)
all_cairo_cxx_sources += $(cairo_quartz_font_cxx_sources)
all_cairo_sources += $(cairo_quartz_font_sources)
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_headers += $(cairo_quartz_font_headers)
enabled_cairo_private += $(cairo_quartz_font_private)
enabled_cairo_cxx_sources += $(cairo_quartz_font_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_font_sources)
endif
all_cairo_pkgconf += cairo-quartz-font.pc
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_pkgconf += cairo-quartz-font.pc
endif

unsupported_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_headers += $(cairo_quartz_image_headers)
all_cairo_private += $(cairo_quartz_image_private)
all_cairo_cxx_sources += $(cairo_quartz_image_cxx_sources)
all_cairo_sources += $(cairo_quartz_image_sources)
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_headers += $(cairo_quartz_image_headers)
enabled_cairo_private += $(cairo_quartz_image_private)
enabled_cairo_cxx_sources += $(cairo_quartz_image_cxx_sources)
enabled_cairo_sources += $(cairo_quartz_image_sources)
endif
all_cairo_pkgconf += cairo-quartz-image.pc
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_pkgconf += cairo-quartz-image.pc
endif

supported_cairo_headers += $(cairo_win32_headers)
all_cairo_headers += $(cairo_win32_headers)
all_cairo_private += $(cairo_win32_private)
all_cairo_cxx_sources += $(cairo_win32_cxx_sources)
all_cairo_sources += $(cairo_win32_sources)
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_headers += $(cairo_win32_headers)
enabled_cairo_private += $(cairo_win32_private)
enabled_cairo_cxx_sources += $(cairo_win32_cxx_sources)
enabled_cairo_sources += $(cairo_win32_sources)
endif
all_cairo_pkgconf += cairo-win32.pc
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_pkgconf += cairo-win32.pc
endif

supported_cairo_headers += $(cairo_win32_font_headers)
all_cairo_headers += $(cairo_win32_font_headers)
all_cairo_private += $(cairo_win32_font_private)
all_cairo_cxx_sources += $(cairo_win32_font_cxx_sources)
all_cairo_sources += $(cairo_win32_font_sources)
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_headers += $(cairo_win32_font_headers)
enabled_cairo_private += $(cairo_win32_font_private)
enabled_cairo_cxx_sources += $(cairo_win32_font_cxx_sources)
enabled_cairo_sources += $(cairo_win32_font_sources)
endif
all_cairo_pkgconf += cairo-win32-font.pc
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_pkgconf += cairo-win32-font.pc
endif

unsupported_cairo_headers += $(cairo_skia_headers)
all_cairo_headers += $(cairo_skia_headers)
all_cairo_private += $(cairo_skia_private)
all_cairo_cxx_sources += $(cairo_skia_cxx_sources)
all_cairo_sources += $(cairo_skia_sources)
ifeq ($(CAIRO_HAS_SKIA_SURFACE),1)
enabled_cairo_headers += $(cairo_skia_headers)
enabled_cairo_private += $(cairo_skia_private)
enabled_cairo_cxx_sources += $(cairo_skia_cxx_sources)
enabled_cairo_sources += $(cairo_skia_sources)
endif
all_cairo_pkgconf += cairo-skia.pc
ifeq ($(CAIRO_HAS_SKIA_SURFACE),1)
enabled_cairo_pkgconf += cairo-skia.pc
endif

unsupported_cairo_headers += $(cairo_os2_headers)
all_cairo_headers += $(cairo_os2_headers)
all_cairo_private += $(cairo_os2_private)
all_cairo_cxx_sources += $(cairo_os2_cxx_sources)
all_cairo_sources += $(cairo_os2_sources)
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_headers += $(cairo_os2_headers)
enabled_cairo_private += $(cairo_os2_private)
enabled_cairo_cxx_sources += $(cairo_os2_cxx_sources)
enabled_cairo_sources += $(cairo_os2_sources)
endif
all_cairo_pkgconf += cairo-os2.pc
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_pkgconf += cairo-os2.pc
endif

unsupported_cairo_headers += $(cairo_beos_headers)
all_cairo_headers += $(cairo_beos_headers)
all_cairo_private += $(cairo_beos_private)
all_cairo_cxx_sources += $(cairo_beos_cxx_sources)
all_cairo_sources += $(cairo_beos_sources)
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_headers += $(cairo_beos_headers)
enabled_cairo_private += $(cairo_beos_private)
enabled_cairo_cxx_sources += $(cairo_beos_cxx_sources)
enabled_cairo_sources += $(cairo_beos_sources)
endif
all_cairo_pkgconf += cairo-beos.pc
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_pkgconf += cairo-beos.pc
endif

unsupported_cairo_headers += $(cairo_drm_headers)
all_cairo_headers += $(cairo_drm_headers)
all_cairo_private += $(cairo_drm_private)
all_cairo_cxx_sources += $(cairo_drm_cxx_sources)
all_cairo_sources += $(cairo_drm_sources)
ifeq ($(CAIRO_HAS_DRM_SURFACE),1)
enabled_cairo_headers += $(cairo_drm_headers)
enabled_cairo_private += $(cairo_drm_private)
enabled_cairo_cxx_sources += $(cairo_drm_cxx_sources)
enabled_cairo_sources += $(cairo_drm_sources)
endif
all_cairo_pkgconf += cairo-drm.pc
ifeq ($(CAIRO_HAS_DRM_SURFACE),1)
enabled_cairo_pkgconf += cairo-drm.pc
endif

unsupported_cairo_headers += $(cairo_drm_xr_headers)
all_cairo_headers += $(cairo_drm_xr_headers)
all_cairo_private += $(cairo_drm_xr_private)
all_cairo_cxx_sources += $(cairo_drm_xr_cxx_sources)
all_cairo_sources += $(cairo_drm_xr_sources)
ifeq ($(CAIRO_HAS_DRM_XR_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_drm_xr_headers)
enabled_cairo_private += $(cairo_drm_xr_private)
enabled_cairo_cxx_sources += $(cairo_drm_xr_cxx_sources)
enabled_cairo_sources += $(cairo_drm_xr_sources)
endif
all_cairo_pkgconf += cairo-drm-xr.pc
ifeq ($(CAIRO_HAS_DRM_XR_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-drm-xr.pc
endif

unsupported_cairo_headers += $(cairo_gallium_headers)
all_cairo_headers += $(cairo_gallium_headers)
all_cairo_private += $(cairo_gallium_private)
all_cairo_cxx_sources += $(cairo_gallium_cxx_sources)
all_cairo_sources += $(cairo_gallium_sources)
ifeq ($(CAIRO_HAS_GALLIUM_SURFACE),1)
enabled_cairo_headers += $(cairo_gallium_headers)
enabled_cairo_private += $(cairo_gallium_private)
enabled_cairo_cxx_sources += $(cairo_gallium_cxx_sources)
enabled_cairo_sources += $(cairo_gallium_sources)
endif
all_cairo_pkgconf += cairo-gallium.pc
ifeq ($(CAIRO_HAS_GALLIUM_SURFACE),1)
enabled_cairo_pkgconf += cairo-gallium.pc
endif

unsupported_cairo_headers += $(cairo_xcb_drm_headers)
all_cairo_headers += $(cairo_xcb_drm_headers)
all_cairo_private += $(cairo_xcb_drm_private)
all_cairo_cxx_sources += $(cairo_xcb_drm_cxx_sources)
all_cairo_sources += $(cairo_xcb_drm_sources)
ifeq ($(CAIRO_HAS_XCB_DRM_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_xcb_drm_headers)
enabled_cairo_private += $(cairo_xcb_drm_private)
enabled_cairo_cxx_sources += $(cairo_xcb_drm_cxx_sources)
enabled_cairo_sources += $(cairo_xcb_drm_sources)
endif
all_cairo_pkgconf += cairo-xcb-drm.pc
ifeq ($(CAIRO_HAS_XCB_DRM_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-xcb-drm.pc
endif

supported_cairo_headers += $(cairo_png_headers)
all_cairo_headers += $(cairo_png_headers)
all_cairo_private += $(cairo_png_private)
all_cairo_cxx_sources += $(cairo_png_cxx_sources)
all_cairo_sources += $(cairo_png_sources)
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_png_headers)
enabled_cairo_private += $(cairo_png_private)
enabled_cairo_cxx_sources += $(cairo_png_cxx_sources)
enabled_cairo_sources += $(cairo_png_sources)
endif
all_cairo_pkgconf += cairo-png.pc
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-png.pc
endif

unsupported_cairo_headers += $(cairo_gl_headers)
all_cairo_headers += $(cairo_gl_headers)
all_cairo_private += $(cairo_gl_private)
all_cairo_cxx_sources += $(cairo_gl_cxx_sources)
all_cairo_sources += $(cairo_gl_sources)
ifeq ($(CAIRO_HAS_GL_SURFACE),1)
enabled_cairo_headers += $(cairo_gl_headers)
enabled_cairo_private += $(cairo_gl_private)
enabled_cairo_cxx_sources += $(cairo_gl_cxx_sources)
enabled_cairo_sources += $(cairo_gl_sources)
endif
all_cairo_pkgconf += cairo-gl.pc
ifeq ($(CAIRO_HAS_GL_SURFACE),1)
enabled_cairo_pkgconf += cairo-gl.pc
endif

unsupported_cairo_headers += $(cairo_directfb_headers)
all_cairo_headers += $(cairo_directfb_headers)
all_cairo_private += $(cairo_directfb_private)
all_cairo_cxx_sources += $(cairo_directfb_cxx_sources)
all_cairo_sources += $(cairo_directfb_sources)
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_headers += $(cairo_directfb_headers)
enabled_cairo_private += $(cairo_directfb_private)
enabled_cairo_cxx_sources += $(cairo_directfb_cxx_sources)
enabled_cairo_sources += $(cairo_directfb_sources)
endif
all_cairo_pkgconf += cairo-directfb.pc
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_pkgconf += cairo-directfb.pc
endif

unsupported_cairo_headers += $(cairo_vg_headers)
all_cairo_headers += $(cairo_vg_headers)
all_cairo_private += $(cairo_vg_private)
all_cairo_cxx_sources += $(cairo_vg_cxx_sources)
all_cairo_sources += $(cairo_vg_sources)
ifeq ($(CAIRO_HAS_VG_SURFACE),1)
enabled_cairo_headers += $(cairo_vg_headers)
enabled_cairo_private += $(cairo_vg_private)
enabled_cairo_cxx_sources += $(cairo_vg_cxx_sources)
enabled_cairo_sources += $(cairo_vg_sources)
endif
all_cairo_pkgconf += cairo-vg.pc
ifeq ($(CAIRO_HAS_VG_SURFACE),1)
enabled_cairo_pkgconf += cairo-vg.pc
endif

supported_cairo_headers += $(cairo_egl_headers)
all_cairo_headers += $(cairo_egl_headers)
all_cairo_private += $(cairo_egl_private)
all_cairo_cxx_sources += $(cairo_egl_cxx_sources)
all_cairo_sources += $(cairo_egl_sources)
ifeq ($(CAIRO_HAS_EGL_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_egl_headers)
enabled_cairo_private += $(cairo_egl_private)
enabled_cairo_cxx_sources += $(cairo_egl_cxx_sources)
enabled_cairo_sources += $(cairo_egl_sources)
endif
all_cairo_pkgconf += cairo-egl.pc
ifeq ($(CAIRO_HAS_EGL_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-egl.pc
endif

supported_cairo_headers += $(cairo_glx_headers)
all_cairo_headers += $(cairo_glx_headers)
all_cairo_private += $(cairo_glx_private)
all_cairo_cxx_sources += $(cairo_glx_cxx_sources)
all_cairo_sources += $(cairo_glx_sources)
ifeq ($(CAIRO_HAS_GLX_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_glx_headers)
enabled_cairo_private += $(cairo_glx_private)
enabled_cairo_cxx_sources += $(cairo_glx_cxx_sources)
enabled_cairo_sources += $(cairo_glx_sources)
endif
all_cairo_pkgconf += cairo-glx.pc
ifeq ($(CAIRO_HAS_GLX_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-glx.pc
endif

supported_cairo_headers += $(cairo_wgl_headers)
all_cairo_headers += $(cairo_wgl_headers)
all_cairo_private += $(cairo_wgl_private)
all_cairo_cxx_sources += $(cairo_wgl_cxx_sources)
all_cairo_sources += $(cairo_wgl_sources)
ifeq ($(CAIRO_HAS_WGL_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_wgl_headers)
enabled_cairo_private += $(cairo_wgl_private)
enabled_cairo_cxx_sources += $(cairo_wgl_cxx_sources)
enabled_cairo_sources += $(cairo_wgl_sources)
endif
all_cairo_pkgconf += cairo-wgl.pc
ifeq ($(CAIRO_HAS_WGL_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-wgl.pc
endif

unsupported_cairo_headers += $(cairo_script_headers)
all_cairo_headers += $(cairo_script_headers)
all_cairo_private += $(cairo_script_private)
all_cairo_cxx_sources += $(cairo_script_cxx_sources)
all_cairo_sources += $(cairo_script_sources)
ifeq ($(CAIRO_HAS_SCRIPT_SURFACE),1)
enabled_cairo_headers += $(cairo_script_headers)
enabled_cairo_private += $(cairo_script_private)
enabled_cairo_cxx_sources += $(cairo_script_cxx_sources)
enabled_cairo_sources += $(cairo_script_sources)
endif
all_cairo_pkgconf += cairo-script.pc
ifeq ($(CAIRO_HAS_SCRIPT_SURFACE),1)
enabled_cairo_pkgconf += cairo-script.pc
endif

supported_cairo_headers += $(cairo_ft_headers)
all_cairo_headers += $(cairo_ft_headers)
all_cairo_private += $(cairo_ft_private)
all_cairo_cxx_sources += $(cairo_ft_cxx_sources)
all_cairo_sources += $(cairo_ft_sources)
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_headers += $(cairo_ft_headers)
enabled_cairo_private += $(cairo_ft_private)
enabled_cairo_cxx_sources += $(cairo_ft_cxx_sources)
enabled_cairo_sources += $(cairo_ft_sources)
endif
all_cairo_pkgconf += cairo-ft.pc
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_pkgconf += cairo-ft.pc
endif

supported_cairo_headers += $(cairo_fc_headers)
all_cairo_headers += $(cairo_fc_headers)
all_cairo_private += $(cairo_fc_private)
all_cairo_cxx_sources += $(cairo_fc_cxx_sources)
all_cairo_sources += $(cairo_fc_sources)
ifeq ($(CAIRO_HAS_FC_FONT),1)
enabled_cairo_headers += $(cairo_fc_headers)
enabled_cairo_private += $(cairo_fc_private)
enabled_cairo_cxx_sources += $(cairo_fc_cxx_sources)
enabled_cairo_sources += $(cairo_fc_sources)
endif
all_cairo_pkgconf += cairo-fc.pc
ifeq ($(CAIRO_HAS_FC_FONT),1)
enabled_cairo_pkgconf += cairo-fc.pc
endif

supported_cairo_headers += $(cairo_ps_headers)
all_cairo_headers += $(cairo_ps_headers)
all_cairo_private += $(cairo_ps_private)
all_cairo_cxx_sources += $(cairo_ps_cxx_sources)
all_cairo_sources += $(cairo_ps_sources)
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_headers += $(cairo_ps_headers)
enabled_cairo_private += $(cairo_ps_private)
enabled_cairo_cxx_sources += $(cairo_ps_cxx_sources)
enabled_cairo_sources += $(cairo_ps_sources)
endif
all_cairo_pkgconf += cairo-ps.pc
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_pkgconf += cairo-ps.pc
endif

supported_cairo_headers += $(cairo_pdf_headers)
all_cairo_headers += $(cairo_pdf_headers)
all_cairo_private += $(cairo_pdf_private)
all_cairo_cxx_sources += $(cairo_pdf_cxx_sources)
all_cairo_sources += $(cairo_pdf_sources)
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_headers += $(cairo_pdf_headers)
enabled_cairo_private += $(cairo_pdf_private)
enabled_cairo_cxx_sources += $(cairo_pdf_cxx_sources)
enabled_cairo_sources += $(cairo_pdf_sources)
endif
all_cairo_pkgconf += cairo-pdf.pc
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_pkgconf += cairo-pdf.pc
endif

supported_cairo_headers += $(cairo_svg_headers)
all_cairo_headers += $(cairo_svg_headers)
all_cairo_private += $(cairo_svg_private)
all_cairo_cxx_sources += $(cairo_svg_cxx_sources)
all_cairo_sources += $(cairo_svg_sources)
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_headers += $(cairo_svg_headers)
enabled_cairo_private += $(cairo_svg_private)
enabled_cairo_cxx_sources += $(cairo_svg_cxx_sources)
enabled_cairo_sources += $(cairo_svg_sources)
endif
all_cairo_pkgconf += cairo-svg.pc
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_pkgconf += cairo-svg.pc
endif

all_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
all_cairo_cxx_sources += $(cairo_test_surfaces_cxx_sources)
all_cairo_sources += $(cairo_test_surfaces_sources)
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
enabled_cairo_private += $(cairo_test_surfaces_private) $(cairo_test_surfaces_headers)
enabled_cairo_cxx_sources += $(cairo_test_surfaces_cxx_sources)
enabled_cairo_sources += $(cairo_test_surfaces_sources)
endif

supported_cairo_headers += $(cairo_image_headers)
all_cairo_headers += $(cairo_image_headers)
all_cairo_private += $(cairo_image_private)
all_cairo_cxx_sources += $(cairo_image_cxx_sources)
all_cairo_sources += $(cairo_image_sources)
enabled_cairo_headers += $(cairo_image_headers)
enabled_cairo_private += $(cairo_image_private)
enabled_cairo_cxx_sources += $(cairo_image_cxx_sources)
enabled_cairo_sources += $(cairo_image_sources)

supported_cairo_headers += $(cairo_recording_headers)
all_cairo_headers += $(cairo_recording_headers)
all_cairo_private += $(cairo_recording_private)
all_cairo_cxx_sources += $(cairo_recording_cxx_sources)
all_cairo_sources += $(cairo_recording_sources)
enabled_cairo_headers += $(cairo_recording_headers)
enabled_cairo_private += $(cairo_recording_private)
enabled_cairo_cxx_sources += $(cairo_recording_cxx_sources)
enabled_cairo_sources += $(cairo_recording_sources)

unsupported_cairo_headers += $(cairo_tee_headers)
all_cairo_headers += $(cairo_tee_headers)
all_cairo_private += $(cairo_tee_private)
all_cairo_cxx_sources += $(cairo_tee_cxx_sources)
all_cairo_sources += $(cairo_tee_sources)
ifeq ($(CAIRO_HAS_TEE_SURFACE),1)
enabled_cairo_headers += $(cairo_tee_headers)
enabled_cairo_private += $(cairo_tee_private)
enabled_cairo_cxx_sources += $(cairo_tee_cxx_sources)
enabled_cairo_sources += $(cairo_tee_sources)
endif
all_cairo_pkgconf += cairo-tee.pc
ifeq ($(CAIRO_HAS_TEE_SURFACE),1)
enabled_cairo_pkgconf += cairo-tee.pc
endif

unsupported_cairo_headers += $(cairo_xml_headers)
all_cairo_headers += $(cairo_xml_headers)
all_cairo_private += $(cairo_xml_private)
all_cairo_cxx_sources += $(cairo_xml_cxx_sources)
all_cairo_sources += $(cairo_xml_sources)
ifeq ($(CAIRO_HAS_XML_SURFACE),1)
enabled_cairo_headers += $(cairo_xml_headers)
enabled_cairo_private += $(cairo_xml_private)
enabled_cairo_cxx_sources += $(cairo_xml_cxx_sources)
enabled_cairo_sources += $(cairo_xml_sources)
endif
all_cairo_pkgconf += cairo-xml.pc
ifeq ($(CAIRO_HAS_XML_SURFACE),1)
enabled_cairo_pkgconf += cairo-xml.pc
endif

supported_cairo_headers += $(cairo_user_headers)
all_cairo_headers += $(cairo_user_headers)
all_cairo_private += $(cairo_user_private)
all_cairo_cxx_sources += $(cairo_user_cxx_sources)
all_cairo_sources += $(cairo_user_sources)
enabled_cairo_headers += $(cairo_user_headers)
enabled_cairo_private += $(cairo_user_private)
enabled_cairo_cxx_sources += $(cairo_user_cxx_sources)
enabled_cairo_sources += $(cairo_user_sources)

all_cairo_private += $(cairo_pthread_private) $(cairo_pthread_headers)
all_cairo_cxx_sources += $(cairo_pthread_cxx_sources)
all_cairo_sources += $(cairo_pthread_sources)
ifeq ($(CAIRO_HAS_PTHREAD),1)
enabled_cairo_private += $(cairo_pthread_private) $(cairo_pthread_headers)
enabled_cairo_cxx_sources += $(cairo_pthread_cxx_sources)
enabled_cairo_sources += $(cairo_pthread_sources)
endif

supported_cairo_headers += $(cairo_gobject_headers)
all_cairo_headers += $(cairo_gobject_headers)
all_cairo_private += $(cairo_gobject_private)
all_cairo_cxx_sources += $(cairo_gobject_cxx_sources)
all_cairo_sources += $(cairo_gobject_sources)
ifeq ($(CAIRO_HAS_GOBJECT_FUNCTIONS),1)
enabled_cairo_headers += $(cairo_gobject_headers)
enabled_cairo_private += $(cairo_gobject_private)
enabled_cairo_cxx_sources += $(cairo_gobject_cxx_sources)
enabled_cairo_sources += $(cairo_gobject_sources)
endif
all_cairo_pkgconf += cairo-gobject.pc
ifeq ($(CAIRO_HAS_GOBJECT_FUNCTIONS),1)
enabled_cairo_pkgconf += cairo-gobject.pc
endif

all_cairo_private += $(cairo_trace_private) $(cairo_trace_headers)
all_cairo_cxx_sources += $(cairo_trace_cxx_sources)
all_cairo_sources += $(cairo_trace_sources)
ifeq ($(CAIRO_HAS_TRACE),1)
enabled_cairo_private += $(cairo_trace_private) $(cairo_trace_headers)
enabled_cairo_cxx_sources += $(cairo_trace_cxx_sources)
enabled_cairo_sources += $(cairo_trace_sources)
endif

all_cairo_private += $(cairo_interpreter_private) $(cairo_interpreter_headers)
all_cairo_cxx_sources += $(cairo_interpreter_cxx_sources)
all_cairo_sources += $(cairo_interpreter_sources)
ifeq ($(CAIRO_HAS_INTERPRETER),1)
enabled_cairo_private += $(cairo_interpreter_private) $(cairo_interpreter_headers)
enabled_cairo_cxx_sources += $(cairo_interpreter_cxx_sources)
enabled_cairo_sources += $(cairo_interpreter_sources)
endif

all_cairo_private += $(cairo_symbol_lookup_private) $(cairo_symbol_lookup_headers)
all_cairo_cxx_sources += $(cairo_symbol_lookup_cxx_sources)
all_cairo_sources += $(cairo_symbol_lookup_sources)
ifeq ($(CAIRO_HAS_SYMBOL_LOOKUP),1)
enabled_cairo_private += $(cairo_symbol_lookup_private) $(cairo_symbol_lookup_headers)
enabled_cairo_cxx_sources += $(cairo_symbol_lookup_cxx_sources)
enabled_cairo_sources += $(cairo_symbol_lookup_sources)
endif'
CAIRO_MAKEFILE_cairo_boilerplate_AMAKE='# Generated by configure.  Do not edit.

include $(top_srcdir)/boilerplate/Makefile.sources

supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
unsupported_cairo_boilerplate_headers =
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private)
all_cairo_boilerplate_cxx_sources = $(cairo_boilerplate_cxx_sources)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources)

enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private)
enabled_cairo_boilerplate_cxx_sources = $(cairo_boilerplate_cxx_sources)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources)


supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
if CAIRO_HAS_XLIB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xrender_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
if CAIRO_HAS_XLIB_XRENDER_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xrender_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
if CAIRO_HAS_XCB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xcb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xcb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xcb_sources)
if CAIRO_HAS_XLIB_XCB_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xcb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xcb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xcb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_shm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_shm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_shm_sources)
if CAIRO_HAS_XCB_SHM_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_shm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_shm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_shm_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_qt_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_qt_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_qt_sources)
if CAIRO_HAS_QT_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_qt_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_qt_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_qt_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
if CAIRO_HAS_QUARTZ_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_font_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
if CAIRO_HAS_QUARTZ_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_font_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_image_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
if CAIRO_HAS_QUARTZ_IMAGE_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_image_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
if CAIRO_HAS_WIN32_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_font_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
if CAIRO_HAS_WIN32_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_font_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_skia_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_skia_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_skia_sources)
if CAIRO_HAS_SKIA_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_skia_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_skia_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_skia_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_os2_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
if CAIRO_HAS_OS2_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_os2_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_beos_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
if CAIRO_HAS_BEOS_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_beos_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_drm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_drm_sources)
if CAIRO_HAS_DRM_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_drm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_drm_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_drm_xr_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_xr_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_drm_xr_sources)
if CAIRO_HAS_DRM_XR_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_drm_xr_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_xr_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_drm_xr_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gallium_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gallium_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gallium_sources)
if CAIRO_HAS_GALLIUM_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gallium_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gallium_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gallium_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_drm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_drm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_drm_sources)
if CAIRO_HAS_XCB_DRM_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_drm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_drm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_drm_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_png_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
if CAIRO_HAS_PNG_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_png_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gl_sources)
if CAIRO_HAS_GL_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gl_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_directfb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
if CAIRO_HAS_DIRECTFB_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_directfb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_vg_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_vg_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_vg_sources)
if CAIRO_HAS_VG_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_vg_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_vg_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_vg_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_egl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_egl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_egl_sources)
if CAIRO_HAS_EGL_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_egl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_egl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_egl_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_glx_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_glx_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_glx_sources)
if CAIRO_HAS_GLX_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_glx_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_glx_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_glx_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_wgl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_wgl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_wgl_sources)
if CAIRO_HAS_WGL_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_wgl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_wgl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_wgl_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_script_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_script_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_script_sources)
if CAIRO_HAS_SCRIPT_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_script_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_script_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_script_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ft_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
if CAIRO_HAS_FT_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ft_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_fc_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_fc_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_fc_sources)
if CAIRO_HAS_FC_FONT
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_fc_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_fc_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_fc_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ps_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
if CAIRO_HAS_PS_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ps_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pdf_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
if CAIRO_HAS_PDF_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pdf_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_svg_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
if CAIRO_HAS_SVG_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_svg_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_test_surfaces_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
if CAIRO_HAS_TEST_SURFACES
enabled_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_test_surfaces_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_image_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_image_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)

supported_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_recording_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_recording_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_recording_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_recording_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_recording_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_recording_sources)

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_tee_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_tee_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_tee_sources)
if CAIRO_HAS_TEE_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_tee_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_tee_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_tee_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xml_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xml_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xml_sources)
if CAIRO_HAS_XML_SURFACE
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xml_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xml_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xml_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_user_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_user_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)

all_cairo_boilerplate_private += $(cairo_boilerplate_pthread_private) $(cairo_boilerplate_pthread_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pthread_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pthread_sources)
if CAIRO_HAS_PTHREAD
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pthread_private) $(cairo_boilerplate_pthread_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pthread_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pthread_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gobject_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gobject_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gobject_sources)
if CAIRO_HAS_GOBJECT_FUNCTIONS
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gobject_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gobject_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gobject_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_trace_private) $(cairo_boilerplate_trace_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_trace_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_trace_sources)
if CAIRO_HAS_TRACE
enabled_cairo_boilerplate_private += $(cairo_boilerplate_trace_private) $(cairo_boilerplate_trace_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_trace_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_trace_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_interpreter_private) $(cairo_boilerplate_interpreter_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_interpreter_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_interpreter_sources)
if CAIRO_HAS_INTERPRETER
enabled_cairo_boilerplate_private += $(cairo_boilerplate_interpreter_private) $(cairo_boilerplate_interpreter_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_interpreter_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_interpreter_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_symbol_lookup_private) $(cairo_boilerplate_symbol_lookup_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_symbol_lookup_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_symbol_lookup_sources)
if CAIRO_HAS_SYMBOL_LOOKUP
enabled_cairo_boilerplate_private += $(cairo_boilerplate_symbol_lookup_private) $(cairo_boilerplate_symbol_lookup_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_symbol_lookup_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_symbol_lookup_sources)
endif'
CAIRO_MAKEFILE_cairo_boilerplate_WIN32='# Generated by configure.  Do not edit.

ifeq ($(top_srcdir),)
include Makefile.sources
else
include $(top_srcdir)/boilerplate/Makefile.sources
endif

supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
unsupported_cairo_boilerplate_headers =
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private)
all_cairo_boilerplate_cxx_sources = $(cairo_boilerplate_cxx_sources)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources)

enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private)
enabled_cairo_boilerplate_cxx_sources = $(cairo_boilerplate_cxx_sources)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources)


supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xrender_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xrender_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xrender_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xrender_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xrender_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xcb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xcb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xcb_sources)
ifeq ($(CAIRO_HAS_XLIB_XCB_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xlib_xcb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xlib_xcb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xlib_xcb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xlib_xcb_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_shm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_shm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_shm_sources)
ifeq ($(CAIRO_HAS_XCB_SHM_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_shm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_shm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_shm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_shm_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_qt_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_qt_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_qt_sources)
ifeq ($(CAIRO_HAS_QT_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_qt_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_qt_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_qt_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_qt_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_font_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_font_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_font_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_image_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_quartz_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_quartz_image_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_quartz_image_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_quartz_image_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_font_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_win32_font_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_win32_font_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_win32_font_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_win32_font_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_skia_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_skia_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_skia_sources)
ifeq ($(CAIRO_HAS_SKIA_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_skia_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_skia_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_skia_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_skia_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_os2_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_os2_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_os2_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_os2_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_os2_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_beos_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_beos_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_beos_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_beos_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_beos_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_drm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_drm_sources)
ifeq ($(CAIRO_HAS_DRM_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_drm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_drm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_drm_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_drm_xr_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_xr_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_drm_xr_sources)
ifeq ($(CAIRO_HAS_DRM_XR_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_drm_xr_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_drm_xr_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_drm_xr_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_drm_xr_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gallium_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gallium_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gallium_sources)
ifeq ($(CAIRO_HAS_GALLIUM_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gallium_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gallium_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gallium_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gallium_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xcb_drm_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_drm_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_drm_sources)
ifeq ($(CAIRO_HAS_XCB_DRM_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xcb_drm_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xcb_drm_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xcb_drm_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xcb_drm_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_png_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_png_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_png_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_png_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_png_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gl_sources)
ifeq ($(CAIRO_HAS_GL_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gl_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_directfb_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_directfb_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_directfb_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_directfb_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_directfb_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_vg_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_vg_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_vg_sources)
ifeq ($(CAIRO_HAS_VG_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_vg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_vg_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_vg_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_vg_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_egl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_egl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_egl_sources)
ifeq ($(CAIRO_HAS_EGL_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_egl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_egl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_egl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_egl_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_glx_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_glx_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_glx_sources)
ifeq ($(CAIRO_HAS_GLX_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_glx_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_glx_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_glx_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_glx_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_wgl_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_wgl_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_wgl_sources)
ifeq ($(CAIRO_HAS_WGL_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_wgl_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_wgl_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_wgl_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_wgl_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_script_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_script_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_script_sources)
ifeq ($(CAIRO_HAS_SCRIPT_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_script_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_script_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_script_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_script_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ft_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
ifeq ($(CAIRO_HAS_FT_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ft_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ft_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ft_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ft_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_fc_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_fc_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_fc_sources)
ifeq ($(CAIRO_HAS_FC_FONT),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_fc_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_fc_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_fc_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_fc_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ps_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_ps_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_ps_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_ps_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_ps_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pdf_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_pdf_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pdf_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pdf_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pdf_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_svg_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_svg_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_svg_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_svg_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_svg_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_test_surfaces_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_test_surfaces_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_test_surfaces_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_image_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_image_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_image_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_image_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_image_sources)

supported_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_recording_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_recording_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_recording_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_recording_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_recording_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_recording_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_recording_sources)

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_tee_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_tee_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_tee_sources)
ifeq ($(CAIRO_HAS_TEE_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_tee_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_tee_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_tee_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_tee_sources)
endif

unsupported_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_xml_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xml_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_xml_sources)
ifeq ($(CAIRO_HAS_XML_SURFACE),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_xml_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_xml_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_xml_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_xml_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_user_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_user_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_user_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_user_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_user_sources)

all_cairo_boilerplate_private += $(cairo_boilerplate_pthread_private) $(cairo_boilerplate_pthread_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pthread_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_pthread_sources)
ifeq ($(CAIRO_HAS_PTHREAD),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_pthread_private) $(cairo_boilerplate_pthread_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_pthread_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_pthread_sources)
endif

supported_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
all_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
all_cairo_boilerplate_private += $(cairo_boilerplate_gobject_private)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gobject_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_gobject_sources)
ifeq ($(CAIRO_HAS_GOBJECT_FUNCTIONS),1)
enabled_cairo_boilerplate_headers += $(cairo_boilerplate_gobject_headers)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_gobject_private)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_gobject_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_gobject_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_trace_private) $(cairo_boilerplate_trace_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_trace_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_trace_sources)
ifeq ($(CAIRO_HAS_TRACE),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_trace_private) $(cairo_boilerplate_trace_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_trace_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_trace_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_interpreter_private) $(cairo_boilerplate_interpreter_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_interpreter_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_interpreter_sources)
ifeq ($(CAIRO_HAS_INTERPRETER),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_interpreter_private) $(cairo_boilerplate_interpreter_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_interpreter_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_interpreter_sources)
endif

all_cairo_boilerplate_private += $(cairo_boilerplate_symbol_lookup_private) $(cairo_boilerplate_symbol_lookup_headers)
all_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_symbol_lookup_cxx_sources)
all_cairo_boilerplate_sources += $(cairo_boilerplate_symbol_lookup_sources)
ifeq ($(CAIRO_HAS_SYMBOL_LOOKUP),1)
enabled_cairo_boilerplate_private += $(cairo_boilerplate_symbol_lookup_private) $(cairo_boilerplate_symbol_lookup_headers)
enabled_cairo_boilerplate_cxx_sources += $(cairo_boilerplate_symbol_lookup_cxx_sources)
enabled_cairo_boilerplate_sources += $(cairo_boilerplate_symbol_lookup_sources)
endif'
	CAIRO_FEATURES=' CAIRO_HAS_FT_FONT CAIRO_HAS_FC_FONT CAIRO_HAS_IMAGE_SURFACE CAIRO_HAS_RECORDING_SURFACE CAIRO_HAS_USER_FONT'
	CAIRO_NO_FEATURES=' CAIRO_HAS_XLIB_SURFACE CAIRO_HAS_XLIB_XRENDER_SURFACE CAIRO_HAS_XCB_SHM_FUNCTIONS CAIRO_HAS_QUARTZ_SURFACE CAIRO_HAS_QUARTZ_FONT CAIRO_HAS_WIN32_SURFACE CAIRO_HAS_WIN32_FONT CAIRO_HAS_PNG_FUNCTIONS CAIRO_HAS_EGL_FUNCTIONS CAIRO_HAS_GLX_FUNCTIONS CAIRO_HAS_WGL_FUNCTIONS CAIRO_HAS_PS_SURFACE CAIRO_HAS_PDF_SURFACE CAIRO_HAS_SVG_SURFACE CAIRO_HAS_GOBJECT_FUNCTIONS'

	CAIRO_SUPPORTED_FEATURES=' CAIRO_HAS_XLIB_SURFACE CAIRO_HAS_XLIB_XRENDER_SURFACE CAIRO_HAS_XCB_SHM_FUNCTIONS CAIRO_HAS_QUARTZ_SURFACE CAIRO_HAS_QUARTZ_FONT CAIRO_HAS_WIN32_SURFACE CAIRO_HAS_WIN32_FONT CAIRO_HAS_PNG_FUNCTIONS CAIRO_HAS_EGL_FUNCTIONS CAIRO_HAS_GLX_FUNCTIONS CAIRO_HAS_WGL_FUNCTIONS CAIRO_HAS_FT_FONT CAIRO_HAS_FC_FONT CAIRO_HAS_PS_SURFACE CAIRO_HAS_PDF_SURFACE CAIRO_HAS_SVG_SURFACE CAIRO_HAS_IMAGE_SURFACE CAIRO_HAS_RECORDING_SURFACE CAIRO_HAS_USER_FONT CAIRO_HAS_GOBJECT_FUNCTIONS'

CAIRO_MAKEFILE_win32_features_h_WIN32='# Generated by configure.  Do not edit.

src/cairo-features.h: build/Makefile.win32.features
	@echo "Generating src/cairo-features.h"
	@echo "/* Generated by Makefile.win32.  Do not edit. */" > src/cairo-features.h
	@echo "#ifndef CAIRO_FEATURES_H" >> src/cairo-features.h
	@echo "#define CAIRO_FEATURES_H 1" >> src/cairo-features.h
ifeq ($(CAIRO_HAS_XLIB_SURFACE),1)
	@echo "#define CAIRO_HAS_XLIB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XLIB_XRENDER_SURFACE),1)
	@echo "#define CAIRO_HAS_XLIB_XRENDER_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XCB_SURFACE),1)
	@echo "#define CAIRO_HAS_XCB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XLIB_XCB_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_XLIB_XCB_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XCB_SHM_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_XCB_SHM_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QT_SURFACE),1)
	@echo "#define CAIRO_HAS_QT_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_SURFACE),1)
	@echo "#define CAIRO_HAS_QUARTZ_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_FONT),1)
	@echo "#define CAIRO_HAS_QUARTZ_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_QUARTZ_IMAGE_SURFACE),1)
	@echo "#define CAIRO_HAS_QUARTZ_IMAGE_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_WIN32_SURFACE),1)
	@echo "#define CAIRO_HAS_WIN32_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_WIN32_FONT),1)
	@echo "#define CAIRO_HAS_WIN32_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_SKIA_SURFACE),1)
	@echo "#define CAIRO_HAS_SKIA_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_OS2_SURFACE),1)
	@echo "#define CAIRO_HAS_OS2_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_BEOS_SURFACE),1)
	@echo "#define CAIRO_HAS_BEOS_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_DRM_SURFACE),1)
	@echo "#define CAIRO_HAS_DRM_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_DRM_XR_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_DRM_XR_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_GALLIUM_SURFACE),1)
	@echo "#define CAIRO_HAS_GALLIUM_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XCB_DRM_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_XCB_DRM_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_PNG_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_GL_SURFACE),1)
	@echo "#define CAIRO_HAS_GL_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_DIRECTFB_SURFACE),1)
	@echo "#define CAIRO_HAS_DIRECTFB_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_VG_SURFACE),1)
	@echo "#define CAIRO_HAS_VG_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_EGL_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_EGL_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_GLX_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_GLX_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_WGL_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_WGL_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_SCRIPT_SURFACE),1)
	@echo "#define CAIRO_HAS_SCRIPT_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_FT_FONT),1)
	@echo "#define CAIRO_HAS_FT_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_FC_FONT),1)
	@echo "#define CAIRO_HAS_FC_FONT 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PS_SURFACE),1)
	@echo "#define CAIRO_HAS_PS_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_PDF_SURFACE),1)
	@echo "#define CAIRO_HAS_PDF_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_SVG_SURFACE),1)
	@echo "#define CAIRO_HAS_SVG_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_TEST_SURFACES),1)
	@echo "#define CAIRO_HAS_TEST_SURFACES 1" >> src/cairo-features.h
endif
	@echo "#define CAIRO_HAS_IMAGE_SURFACE 1" >> src/cairo-features.h
	@echo "#define CAIRO_HAS_RECORDING_SURFACE 1" >> src/cairo-features.h
ifeq ($(CAIRO_HAS_TEE_SURFACE),1)
	@echo "#define CAIRO_HAS_TEE_SURFACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_XML_SURFACE),1)
	@echo "#define CAIRO_HAS_XML_SURFACE 1" >> src/cairo-features.h
endif
	@echo "#define CAIRO_HAS_USER_FONT 1" >> src/cairo-features.h
ifeq ($(CAIRO_HAS_PTHREAD),1)
	@echo "#define CAIRO_HAS_PTHREAD 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_GOBJECT_FUNCTIONS),1)
	@echo "#define CAIRO_HAS_GOBJECT_FUNCTIONS 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_TRACE),1)
	@echo "#define CAIRO_HAS_TRACE 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_INTERPRETER),1)
	@echo "#define CAIRO_HAS_INTERPRETER 1" >> src/cairo-features.h
endif
ifeq ($(CAIRO_HAS_SYMBOL_LOOKUP),1)
	@echo "#define CAIRO_HAS_SYMBOL_LOOKUP 1" >> src/cairo-features.h
endif
	@echo "#endif" >>  src/cairo-features.h'
		SED='/bin/sed'
		xlib_BASE=''
		xlib_REQUIRES=''
		xlib_NONPKGCONFIG_LIBS=''
		xlib_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_BASE=''
		xlib_REQUIRES=''
		xlib_NONPKGCONFIG_LIBS=''
		xlib_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xrender_BASE='cairo'
		xlib_xrender_REQUIRES=''
		xlib_xrender_NONPKGCONFIG_LIBS=''
		xlib_xrender_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_xrender_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xrender_BASE='cairo'
		xlib_xrender_REQUIRES=''
		xlib_xrender_NONPKGCONFIG_LIBS=''
		xlib_xrender_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_xrender_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_BASE=''
		xcb_REQUIRES=''
		xcb_NONPKGCONFIG_LIBS=''
		xcb_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_BASE=''
		xcb_REQUIRES=''
		xcb_NONPKGCONFIG_LIBS=''
		xcb_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xcb_BASE=''
		xlib_xcb_REQUIRES=''
		xlib_xcb_NONPKGCONFIG_LIBS=''
		xlib_xcb_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xlib_xcb_BASE=''
		xlib_xcb_REQUIRES=''
		xlib_xcb_NONPKGCONFIG_LIBS=''
		xlib_xcb_NONPKGCONFIG_EXTRA_LIBS=''
		xlib_xcb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_shm_BASE='cairo'
		xcb_shm_REQUIRES=''
		xcb_shm_NONPKGCONFIG_LIBS=''
		xcb_shm_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_shm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_shm_BASE='cairo'
		xcb_shm_REQUIRES=''
		xcb_shm_NONPKGCONFIG_LIBS=''
		xcb_shm_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_shm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		qt_BASE=''
		qt_REQUIRES=''
		qt_NONPKGCONFIG_LIBS=''
		qt_NONPKGCONFIG_EXTRA_LIBS=''
		qt_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		qt_BASE=''
		qt_REQUIRES=''
		qt_NONPKGCONFIG_LIBS=''
		qt_NONPKGCONFIG_EXTRA_LIBS=''
		qt_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_BASE='cairo'
		quartz_REQUIRES=''
		quartz_NONPKGCONFIG_LIBS=''
		quartz_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_BASE='cairo'
		quartz_REQUIRES=''
		quartz_NONPKGCONFIG_LIBS=''
		quartz_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_font_BASE='cairo'
		quartz_font_REQUIRES=''
		quartz_font_NONPKGCONFIG_LIBS=''
		quartz_font_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_font_BASE='cairo'
		quartz_font_REQUIRES=''
		quartz_font_NONPKGCONFIG_LIBS=''
		quartz_font_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_image_BASE=''
		quartz_image_REQUIRES=''
		quartz_image_NONPKGCONFIG_LIBS=''
		quartz_image_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_image_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		quartz_image_BASE=''
		quartz_image_REQUIRES=''
		quartz_image_NONPKGCONFIG_LIBS=''
		quartz_image_NONPKGCONFIG_EXTRA_LIBS=''
		quartz_image_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_BASE='cairo'
		win32_REQUIRES=''
		win32_NONPKGCONFIG_LIBS=''
		win32_NONPKGCONFIG_EXTRA_LIBS=''
		win32_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_BASE='cairo'
		win32_REQUIRES=''
		win32_NONPKGCONFIG_LIBS=''
		win32_NONPKGCONFIG_EXTRA_LIBS=''
		win32_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_font_BASE='cairo'
		win32_font_REQUIRES=''
		win32_font_NONPKGCONFIG_LIBS=''
		win32_font_NONPKGCONFIG_EXTRA_LIBS=''
		win32_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		win32_font_BASE='cairo'
		win32_font_REQUIRES=''
		win32_font_NONPKGCONFIG_LIBS=''
		win32_font_NONPKGCONFIG_EXTRA_LIBS=''
		win32_font_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		skia_BASE=''
		skia_REQUIRES=''
		skia_NONPKGCONFIG_LIBS=''
		skia_NONPKGCONFIG_EXTRA_LIBS=''
		skia_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		skia_BASE=''
		skia_REQUIRES=''
		skia_NONPKGCONFIG_LIBS=''
		skia_NONPKGCONFIG_EXTRA_LIBS=''
		skia_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		os2_BASE=''
		os2_REQUIRES=''
		os2_NONPKGCONFIG_LIBS=''
		os2_NONPKGCONFIG_EXTRA_LIBS=''
		os2_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		os2_BASE=''
		os2_REQUIRES=''
		os2_NONPKGCONFIG_LIBS=''
		os2_NONPKGCONFIG_EXTRA_LIBS=''
		os2_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		beos_BASE=''
		beos_REQUIRES=''
		beos_NONPKGCONFIG_LIBS=''
		beos_NONPKGCONFIG_EXTRA_LIBS=''
		beos_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		beos_BASE=''
		beos_REQUIRES=''
		beos_NONPKGCONFIG_LIBS=''
		beos_NONPKGCONFIG_EXTRA_LIBS=''
		beos_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		drm_BASE=''
		drm_REQUIRES=''
		drm_NONPKGCONFIG_LIBS=''
		drm_NONPKGCONFIG_EXTRA_LIBS=''
		drm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		drm_BASE=''
		drm_REQUIRES=''
		drm_NONPKGCONFIG_LIBS=''
		drm_NONPKGCONFIG_EXTRA_LIBS=''
		drm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		drm_xr_BASE=''
		drm_xr_REQUIRES=''
		drm_xr_NONPKGCONFIG_LIBS=''
		drm_xr_NONPKGCONFIG_EXTRA_LIBS=''
		drm_xr_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		drm_xr_BASE=''
		drm_xr_REQUIRES=''
		drm_xr_NONPKGCONFIG_LIBS=''
		drm_xr_NONPKGCONFIG_EXTRA_LIBS=''
		drm_xr_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gallium_BASE=''
		gallium_REQUIRES=''
		gallium_NONPKGCONFIG_LIBS=''
		gallium_NONPKGCONFIG_EXTRA_LIBS=''
		gallium_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gallium_BASE=''
		gallium_REQUIRES=''
		gallium_NONPKGCONFIG_LIBS=''
		gallium_NONPKGCONFIG_EXTRA_LIBS=''
		gallium_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_drm_BASE=''
		xcb_drm_REQUIRES=''
		xcb_drm_NONPKGCONFIG_LIBS=''
		xcb_drm_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_drm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xcb_drm_BASE=''
		xcb_drm_REQUIRES=''
		xcb_drm_NONPKGCONFIG_LIBS=''
		xcb_drm_NONPKGCONFIG_EXTRA_LIBS=''
		xcb_drm_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		png_BASE=''
		png_REQUIRES=''
		png_NONPKGCONFIG_LIBS=''
		png_NONPKGCONFIG_EXTRA_LIBS=''
		png_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		png_BASE=''
		png_REQUIRES=''
		png_NONPKGCONFIG_LIBS=''
		png_NONPKGCONFIG_EXTRA_LIBS=''
		png_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gl_BASE=''
		gl_REQUIRES=''
		gl_NONPKGCONFIG_LIBS=''
		gl_NONPKGCONFIG_EXTRA_LIBS=''
		gl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gl_BASE=''
		gl_REQUIRES=''
		gl_NONPKGCONFIG_LIBS=''
		gl_NONPKGCONFIG_EXTRA_LIBS=''
		gl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		directfb_BASE=''
		directfb_REQUIRES=''
		directfb_NONPKGCONFIG_LIBS=''
		directfb_NONPKGCONFIG_EXTRA_LIBS=''
		directfb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		directfb_BASE=''
		directfb_REQUIRES=''
		directfb_NONPKGCONFIG_LIBS=''
		directfb_NONPKGCONFIG_EXTRA_LIBS=''
		directfb_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		vg_BASE=''
		vg_REQUIRES=''
		vg_NONPKGCONFIG_LIBS=''
		vg_NONPKGCONFIG_EXTRA_LIBS=''
		vg_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		vg_BASE=''
		vg_REQUIRES=''
		vg_NONPKGCONFIG_LIBS=''
		vg_NONPKGCONFIG_EXTRA_LIBS=''
		vg_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		egl_BASE='cairo'
		egl_REQUIRES=''
		egl_NONPKGCONFIG_LIBS=''
		egl_NONPKGCONFIG_EXTRA_LIBS=''
		egl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		egl_BASE='cairo'
		egl_REQUIRES=''
		egl_NONPKGCONFIG_LIBS=''
		egl_NONPKGCONFIG_EXTRA_LIBS=''
		egl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		glx_BASE='cairo'
		glx_REQUIRES=''
		glx_NONPKGCONFIG_LIBS=''
		glx_NONPKGCONFIG_EXTRA_LIBS=''
		glx_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		glx_BASE='cairo'
		glx_REQUIRES=''
		glx_NONPKGCONFIG_LIBS=''
		glx_NONPKGCONFIG_EXTRA_LIBS=''
		glx_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		wgl_BASE='cairo'
		wgl_REQUIRES=''
		wgl_NONPKGCONFIG_LIBS=''
		wgl_NONPKGCONFIG_EXTRA_LIBS=''
		wgl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		wgl_BASE='cairo'
		wgl_REQUIRES=''
		wgl_NONPKGCONFIG_LIBS=''
		wgl_NONPKGCONFIG_EXTRA_LIBS=''
		wgl_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		script_BASE=''
		script_REQUIRES=''
		script_NONPKGCONFIG_LIBS=''
		script_NONPKGCONFIG_EXTRA_LIBS=''
		script_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		script_BASE=''
		script_REQUIRES=''
		script_NONPKGCONFIG_LIBS=''
		script_NONPKGCONFIG_EXTRA_LIBS=''
		script_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ft_BASE='cairo'
		ft_REQUIRES='freetype2 >= 9.7.3 '
		ft_NONPKGCONFIG_LIBS=''
		ft_NONPKGCONFIG_EXTRA_LIBS=''
		ft_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ft_BASE='cairo'
		ft_REQUIRES='freetype2 >= 9.7.3 '
		ft_NONPKGCONFIG_LIBS=''
		ft_NONPKGCONFIG_EXTRA_LIBS=''
		ft_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		fc_BASE='cairo'
		fc_REQUIRES='fontconfig >= 2.2.95'
		fc_NONPKGCONFIG_LIBS=''
		fc_NONPKGCONFIG_EXTRA_LIBS=''
		fc_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		fc_BASE='cairo'
		fc_REQUIRES='fontconfig >= 2.2.95'
		fc_NONPKGCONFIG_LIBS=''
		fc_NONPKGCONFIG_EXTRA_LIBS=''
		fc_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ps_BASE=''
		ps_REQUIRES=''
		ps_NONPKGCONFIG_LIBS=''
		ps_NONPKGCONFIG_EXTRA_LIBS=''
		ps_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		ps_BASE=''
		ps_REQUIRES=''
		ps_NONPKGCONFIG_LIBS=''
		ps_NONPKGCONFIG_EXTRA_LIBS=''
		ps_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		pdf_BASE=''
		pdf_REQUIRES=''
		pdf_NONPKGCONFIG_LIBS=''
		pdf_NONPKGCONFIG_EXTRA_LIBS=''
		pdf_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		pdf_BASE=''
		pdf_REQUIRES=''
		pdf_NONPKGCONFIG_LIBS=''
		pdf_NONPKGCONFIG_EXTRA_LIBS=''
		pdf_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		svg_BASE=''
		svg_REQUIRES=''
		svg_NONPKGCONFIG_LIBS=''
		svg_NONPKGCONFIG_EXTRA_LIBS=''
		svg_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		svg_BASE=''
		svg_REQUIRES=''
		svg_NONPKGCONFIG_LIBS=''
		svg_NONPKGCONFIG_EXTRA_LIBS=''
		svg_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		tee_BASE=''
		tee_REQUIRES=''
		tee_NONPKGCONFIG_LIBS=''
		tee_NONPKGCONFIG_EXTRA_LIBS=''
		tee_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		tee_BASE=''
		tee_REQUIRES=''
		tee_NONPKGCONFIG_LIBS=''
		tee_NONPKGCONFIG_EXTRA_LIBS=''
		tee_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xml_BASE=''
		xml_REQUIRES=''
		xml_NONPKGCONFIG_LIBS=''
		xml_NONPKGCONFIG_EXTRA_LIBS=''
		xml_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		xml_BASE=''
		xml_REQUIRES=''
		xml_NONPKGCONFIG_LIBS=''
		xml_NONPKGCONFIG_EXTRA_LIBS=''
		xml_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gobject_BASE='cairo'
		gobject_REQUIRES='gobject-2.0 glib-2.0'
		gobject_NONPKGCONFIG_LIBS=''
		gobject_NONPKGCONFIG_EXTRA_LIBS='-L${libdir} -lcairo-gobject'
		gobject_NONPKGCONFIG_CFLAGS=''

		SED='/bin/sed'
		gobject_BASE='cairo'
		gobject_REQUIRES='gobject-2.0 glib-2.0'
		gobject_NONPKGCONFIG_LIBS=''
		gobject_NONPKGCONFIG_EXTRA_LIBS='-L${libdir} -lcairo-gobject'
		gobject_NONPKGCONFIG_CFLAGS=''



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "$srcdir/build/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/build/Makefile.win32.features" ;;
    "$srcdir/src/Makefile.am.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/src/Makefile.am.features" ;;
    "$srcdir/src/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/src/Makefile.win32.features" ;;
    "$srcdir/boilerplate/Makefile.am.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/boilerplate/Makefile.am.features" ;;
    "$srcdir/boilerplate/Makefile.win32.features") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/boilerplate/Makefile.win32.features" ;;
    "src/cairo.pc") CONFIG_FILES="$CONFIG_FILES src/cairo.pc" ;;
    "cairo-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-uninstalled.pc:src/cairo-uninstalled.pc.in" ;;
    "src/cairo-features.h") CONFIG_COMMANDS="$CONFIG_COMMANDS src/cairo-features.h" ;;
    "src/cairo-supported-features.h") CONFIG_COMMANDS="$CONFIG_COMMANDS src/cairo-supported-features.h" ;;
    "$srcdir/build/Makefile.win32.features-h") CONFIG_COMMANDS="$CONFIG_COMMANDS $srcdir/build/Makefile.win32.features-h" ;;
    "src/cairo-xlib.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xlib.pc:src/cairo-features.pc.in" ;;
    "cairo-xlib-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xlib-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xlib-xrender.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xlib-xrender.pc:src/cairo-features.pc.in" ;;
    "cairo-xlib-xrender-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xlib-xrender-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xcb.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xcb.pc:src/cairo-features.pc.in" ;;
    "cairo-xcb-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xcb-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xlib-xcb.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xlib-xcb.pc:src/cairo-features.pc.in" ;;
    "cairo-xlib-xcb-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xlib-xcb-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xcb-shm.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xcb-shm.pc:src/cairo-features.pc.in" ;;
    "cairo-xcb-shm-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xcb-shm-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-qt.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-qt.pc:src/cairo-features.pc.in" ;;
    "cairo-qt-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-qt-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz-font.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz-font.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-font-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-font-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-quartz-image.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-quartz-image.pc:src/cairo-features.pc.in" ;;
    "cairo-quartz-image-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-quartz-image-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-win32.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-win32.pc:src/cairo-features.pc.in" ;;
    "cairo-win32-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-win32-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-win32-font.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-win32-font.pc:src/cairo-features.pc.in" ;;
    "cairo-win32-font-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-win32-font-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-skia.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-skia.pc:src/cairo-features.pc.in" ;;
    "cairo-skia-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-skia-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-os2.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-os2.pc:src/cairo-features.pc.in" ;;
    "cairo-os2-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-os2-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-beos.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-beos.pc:src/cairo-features.pc.in" ;;
    "cairo-beos-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-beos-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-drm.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-drm.pc:src/cairo-features.pc.in" ;;
    "cairo-drm-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-drm-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-drm-xr.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-drm-xr.pc:src/cairo-features.pc.in" ;;
    "cairo-drm-xr-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-drm-xr-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-gallium.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-gallium.pc:src/cairo-features.pc.in" ;;
    "cairo-gallium-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-gallium-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xcb-drm.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xcb-drm.pc:src/cairo-features.pc.in" ;;
    "cairo-xcb-drm-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xcb-drm-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-png.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-png.pc:src/cairo-features.pc.in" ;;
    "cairo-png-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-png-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-gl.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-gl.pc:src/cairo-features.pc.in" ;;
    "cairo-gl-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-gl-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-directfb.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-directfb.pc:src/cairo-features.pc.in" ;;
    "cairo-directfb-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-directfb-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-vg.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-vg.pc:src/cairo-features.pc.in" ;;
    "cairo-vg-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-vg-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-egl.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-egl.pc:src/cairo-features.pc.in" ;;
    "cairo-egl-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-egl-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-glx.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-glx.pc:src/cairo-features.pc.in" ;;
    "cairo-glx-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-glx-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-wgl.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-wgl.pc:src/cairo-features.pc.in" ;;
    "cairo-wgl-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-wgl-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-script.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-script.pc:src/cairo-features.pc.in" ;;
    "cairo-script-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-script-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-ft.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-ft.pc:src/cairo-features.pc.in" ;;
    "cairo-ft-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-ft-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-fc.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-fc.pc:src/cairo-features.pc.in" ;;
    "cairo-fc-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-fc-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-ps.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-ps.pc:src/cairo-features.pc.in" ;;
    "cairo-ps-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-ps-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-pdf.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-pdf.pc:src/cairo-features.pc.in" ;;
    "cairo-pdf-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-pdf-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-svg.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-svg.pc:src/cairo-features.pc.in" ;;
    "cairo-svg-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-svg-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-tee.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-tee.pc:src/cairo-features.pc.in" ;;
    "cairo-tee-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-tee-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-xml.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-xml.pc:src/cairo-features.pc.in" ;;
    "cairo-xml-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-xml-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "src/cairo-gobject.pc") CONFIG_FILES="$CONFIG_FILES src/cairo-gobject.pc:src/cairo-features.pc.in" ;;
    "cairo-gobject-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES cairo-gobject-uninstalled.pc:src/cairo-features-uninstalled.pc.in" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "boilerplate/Makefile") CONFIG_FILES="$CONFIG_FILES boilerplate/Makefile" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/pdiff/Makefile") CONFIG_FILES="$CONFIG_FILES test/pdiff/Makefile" ;;
    "perf/Makefile") CONFIG_FILES="$CONFIG_FILES perf/Makefile" ;;
    "util/Makefile") CONFIG_FILES="$CONFIG_FILES util/Makefile" ;;
    "util/cairo-fdr/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-fdr/Makefile" ;;
    "util/cairo-gobject/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-gobject/Makefile" ;;
    "util/cairo-script/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-script/Makefile" ;;
    "util/cairo-script/examples/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-script/examples/Makefile" ;;
    "util/cairo-sphinx/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-sphinx/Makefile" ;;
    "util/cairo-trace/Makefile") CONFIG_FILES="$CONFIG_FILES util/cairo-trace/Makefile" ;;
    "util/cairo-trace/cairo-trace") CONFIG_FILES="$CONFIG_FILES util/cairo-trace/cairo-trace" ;;
    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
    "doc/public/Makefile") CONFIG_FILES="$CONFIG_FILES doc/public/Makefile" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5 ;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp=
  trap 'exit_status=$?
  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$tmp/subs1.awk" &&
cat >>"$tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["HAVE_GTK_FALSE"]=""
S["HAVE_GTK_TRUE"]="#"
S["gtk_LIBS"]=""
S["gtk_CFLAGS"]=""
S["BUILD_CXX_FALSE"]=""
S["BUILD_CXX_TRUE"]="#"
S["DISABLE_SOME_FLOATING_POINT_FALSE"]=""
S["DISABLE_SOME_FLOATING_POINT_TRUE"]="#"
S["shm_LIBS"]="-lrt"
S["BUILD_SPHINX_FALSE"]=""
S["BUILD_SPHINX_TRUE"]="#"
S["glib_LIBS"]=""
S["glib_CFLAGS"]=""
S["CAIRO_HAS_SYMBOL_LOOKUP_FALSE"]=""
S["CAIRO_HAS_SYMBOL_LOOKUP_TRUE"]="#"
S["BFD_LIBS"]=""
S["CAIRO_HAS_INTERPRETER_FALSE"]=""
S["CAIRO_HAS_INTERPRETER_TRUE"]="#"
S["CAIRO_HAS_TRACE_FALSE"]=""
S["CAIRO_HAS_TRACE_TRUE"]="#"
S["SHLIB_EXT"]="so"
S["BUILD_ANY2PPM_FALSE"]=""
S["BUILD_ANY2PPM_TRUE"]="#"
S["CAIRO_TEST_MODE"]=""
S["CAIRO_HAS_GOBJECT_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_GOBJECT_FUNCTIONS_TRUE"]="#"
S["GOBJECT_LIBS"]=""
S["GOBJECT_CFLAGS"]=""
S["real_pthread_LIBS"]="-lpthread"
S["real_pthread_CFLAGS"]="-D_REENTRANT"
S["pthread_LIBS"]="-lpthread"
S["pthread_CFLAGS"]="-D_REENTRANT"
S["HAVE_PTHREAD_FALSE"]="#"
S["HAVE_PTHREAD_TRUE"]=""
S["HAVE_REAL_PTHREAD_FALSE"]="#"
S["HAVE_REAL_PTHREAD_TRUE"]=""
S["CAIRO_HAS_PTHREAD_FALSE"]="#"
S["CAIRO_HAS_PTHREAD_TRUE"]=""
S["CAIRO_HAS_XML_SURFACE_FALSE"]=""
S["CAIRO_HAS_XML_SURFACE_TRUE"]="#"
S["CAIRO_HAS_TEE_SURFACE_FALSE"]=""
S["CAIRO_HAS_TEE_SURFACE_TRUE"]="#"
S["pixman_LIBS"]="-L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1  "
S["pixman_CFLAGS"]="-I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1  "
S["CAIRO_HAS_TEST_SURFACES_FALSE"]=""
S["CAIRO_HAS_TEST_SURFACES_TRUE"]="#"
S["CAIRO_CAN_TEST_SVG_SURFACE_FALSE"]=""
S["CAIRO_CAN_TEST_SVG_SURFACE_TRUE"]="#"
S["LIBRSVG_LIBS"]=""
S["LIBRSVG_CFLAGS"]=""
S["CAIRO_HAS_SVG_SURFACE_FALSE"]=""
S["CAIRO_HAS_SVG_SURFACE_TRUE"]="#"
S["CAIRO_HAS_MULTI_PAGE_SURFACES_FALSE"]=""
S["CAIRO_HAS_MULTI_PAGE_SURFACES_TRUE"]="#"
S["CAIRO_CAN_TEST_PDF_SURFACE_FALSE"]=""
S["CAIRO_CAN_TEST_PDF_SURFACE_TRUE"]="#"
S["POPPLER_LIBS"]=""
S["POPPLER_CFLAGS"]=""
S["CAIRO_HAS_PDF_SURFACE_FALSE"]=""
S["CAIRO_HAS_PDF_SURFACE_TRUE"]="#"
S["CAIRO_HAS_SPECTRE_FALSE"]=""
S["CAIRO_HAS_SPECTRE_TRUE"]="#"
S["CAIRO_CAN_TEST_PS_SURFACE_FALSE"]=""
S["CAIRO_CAN_TEST_PS_SURFACE_TRUE"]="#"
S["LIBSPECTRE_LIBS"]=""
S["LIBSPECTRE_CFLAGS"]=""
S["CAIRO_HAS_PS_SURFACE_FALSE"]=""
S["CAIRO_HAS_PS_SURFACE_TRUE"]="#"
S["CAIRO_HAS_FC_FONT_FALSE"]="#"
S["CAIRO_HAS_FC_FONT_TRUE"]=""
S["FONTCONFIG_LIBS"]="-L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig  "
S["FONTCONFIG_CFLAGS"]="-I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  "
S["CAIRO_HAS_FT_FONT_FALSE"]="#"
S["CAIRO_HAS_FT_FONT_TRUE"]=""
S["FREETYPE_CONFIG"]=""
S["FREETYPE_LIBS"]="-L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype  "
S["FREETYPE_CFLAGS"]="-I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-curr"\
"ent/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  "
S["CAIRO_HAS_SCRIPT_SURFACE_FALSE"]=""
S["CAIRO_HAS_SCRIPT_SURFACE_TRUE"]="#"
S["CAIRO_HAS_WGL_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_WGL_FUNCTIONS_TRUE"]="#"
S["CAIRO_HAS_GLX_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_GLX_FUNCTIONS_TRUE"]="#"
S["CAIRO_HAS_EGL_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_EGL_FUNCTIONS_TRUE"]="#"
S["egl_LIBS"]=""
S["egl_CFLAGS"]=""
S["CAIRO_HAS_VG_SURFACE_FALSE"]=""
S["CAIRO_HAS_VG_SURFACE_TRUE"]="#"
S["CAIRO_HAS_DIRECTFB_SURFACE_FALSE"]=""
S["CAIRO_HAS_DIRECTFB_SURFACE_TRUE"]="#"
S["directfb_LIBS"]=""
S["directfb_CFLAGS"]=""
S["BUILD_PRIVATE_GLEW_FALSE"]=""
S["BUILD_PRIVATE_GLEW_TRUE"]="#"
S["CAIRO_HAS_GL_SURFACE_FALSE"]=""
S["CAIRO_HAS_GL_SURFACE_TRUE"]="#"
S["gl_LIBS"]=""
S["gl_CFLAGS"]=""
S["CAIRO_HAS_PNG_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_PNG_FUNCTIONS_TRUE"]="#"
S["png_LIBS"]=""
S["png_CFLAGS"]=""
S["png_REQUIRES"]=""
S["CAIRO_HAS_XCB_DRM_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_XCB_DRM_FUNCTIONS_TRUE"]="#"
S["xcb_drm_LIBS"]=""
S["xcb_drm_CFLAGS"]=""
S["CAIRO_HAS_GALLIUM_SURFACE_FALSE"]=""
S["CAIRO_HAS_GALLIUM_SURFACE_TRUE"]="#"
S["gallium_DIR"]=""
S["mesa_DIR"]=""
S["BUILD_DRM_XR_FALSE"]=""
S["BUILD_DRM_XR_TRUE"]="#"
S["CAIRO_HAS_DRM_XR_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_DRM_XR_FUNCTIONS_TRUE"]="#"
S["drm_xr_LIBS"]=""
S["drm_xr_CFLAGS"]=""
S["CAIRO_HAS_DRM_SURFACE_FALSE"]=""
S["CAIRO_HAS_DRM_SURFACE_TRUE"]="#"
S["drm_LIBS"]=""
S["drm_CFLAGS"]=""
S["CAIRO_HAS_BEOS_SURFACE_FALSE"]=""
S["CAIRO_HAS_BEOS_SURFACE_TRUE"]="#"
S["CAIRO_HAS_OS2_SURFACE_FALSE"]=""
S["CAIRO_HAS_OS2_SURFACE_TRUE"]="#"
S["CAIRO_HAS_SKIA_SURFACE_FALSE"]=""
S["CAIRO_HAS_SKIA_SURFACE_TRUE"]="#"
S["skia_DIR"]=""
S["CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_FALSE"]=""
S["CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE_TRUE"]="#"
S["GS"]=""
S["CAIRO_HAS_WIN32_FONT_FALSE"]=""
S["CAIRO_HAS_WIN32_FONT_TRUE"]="#"
S["CAIRO_HAS_WIN32_SURFACE_FALSE"]=""
S["CAIRO_HAS_WIN32_SURFACE_TRUE"]="#"
S["CAIRO_HAS_QUARTZ_IMAGE_SURFACE_FALSE"]=""
S["CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE"]="#"
S["CAIRO_HAS_QUARTZ_FONT_FALSE"]=""
S["CAIRO_HAS_QUARTZ_FONT_TRUE"]="#"
S["CAIRO_HAS_QUARTZ_SURFACE_FALSE"]=""
S["CAIRO_HAS_QUARTZ_SURFACE_TRUE"]="#"
S["CAIRO_HAS_QT_SURFACE_FALSE"]=""
S["CAIRO_HAS_QT_SURFACE_TRUE"]="#"
S["qt_LIBS"]=""
S["qt_CFLAGS"]=""
S["BUILD_XCB_SHM_FALSE"]=""
S["BUILD_XCB_SHM_TRUE"]="#"
S["CAIRO_HAS_XCB_SHM_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_XCB_SHM_FUNCTIONS_TRUE"]="#"
S["xcb_shm_LIBS"]=""
S["xcb_shm_CFLAGS"]=""
S["BUILD_XLIB_XCB_FALSE"]=""
S["BUILD_XLIB_XCB_TRUE"]="#"
S["CAIRO_HAS_XLIB_XCB_FUNCTIONS_FALSE"]=""
S["CAIRO_HAS_XLIB_XCB_FUNCTIONS_TRUE"]="#"
S["xlib_xcb_LIBS"]=""
S["xlib_xcb_CFLAGS"]=""
S["CAIRO_HAS_XCB_SURFACE_FALSE"]=""
S["CAIRO_HAS_XCB_SURFACE_TRUE"]="#"
S["xcb_LIBS"]=""
S["xcb_CFLAGS"]=""
S["CAIRO_HAS_XLIB_XRENDER_SURFACE_FALSE"]=""
S["CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE"]="#"
S["xlib_xrender_LIBS"]=""
S["xlib_xrender_CFLAGS"]=""
S["CAIRO_HAS_XLIB_SURFACE_FALSE"]=""
S["CAIRO_HAS_XLIB_SURFACE_TRUE"]="#"
S["X_EXTRA_LIBS"]=""
S["X_LIBS"]=""
S["X_PRE_LIBS"]=""
S["X_CFLAGS"]=""
S["XMKMF"]=""
S["xlib_LIBS"]=""
S["xlib_CFLAGS"]=""
S["CAIRO_HAS_DL_FALSE"]="#"
S["CAIRO_HAS_DL_TRUE"]=""
S["VALGRIND_LIBS"]=""
S["VALGRIND_CFLAGS"]=""
S["CAIRO_HAS_LCOV_FALSE"]=""
S["CAIRO_HAS_LCOV_TRUE"]="#"
S["LTP_GENHTML"]=""
S["LTP"]=""
S["SHTOOL"]=""
S["CAIROBOILERPLATE_LIBS"]=""
S["SHM_LIBS"]="-lrt"
S["HAVE_SHM_FALSE"]="#"
S["HAVE_SHM_TRUE"]=""
S["CAIROPERF_LIBS"]="-lrt"
S["LIBM"]="-lm"
S["OS_WIN32_FALSE"]=""
S["OS_WIN32_TRUE"]="#"
S["CROSS_COMPILING_FALSE"]="#"
S["CROSS_COMPILING_TRUE"]=""
S["CAIRO_TEST_UNDEFINED_LDFLAGS"]="-Wl,--allow-shlib-undefined"
S["CAIRO_NONPKGCONFIG_LIBS"]="      "
S["CAIRO_LIBS"]="-lpthread   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1   -L/home/simon/GIT/buildr"\
"oot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm"\
"-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype          "
S["CAIRO_NONPKGCONFIG_CFLAGS"]="      "
S["CAIRO_LDFLAGS"]=""
S["CAIRO_CFLAGS"]="-D_REENTRANT   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1   -I/home/simon/GIT/b"\
"uildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-bui"\
"ldroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/in"\
"clude     -Wall -Wextra -Wold-style-definition -Wdeclaration-after-statement -Wmissing-declarations -Werror-implicit-function-declaration -Wnested-e"\
"xterns -Wpointer-arith -Wwrite-strings -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wb"\
"ad-function-cast -Wvolatile-register-var -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wno-missing-field-initializers -Wno-unused-par"\
"ameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2       "
S["CAIRO_REQUIRES"]="   pixman-1 >= 0.18.4 fontconfig >= 2.2.95 freetype2 >= 9.7.3  "
S["PKGCONFIG_REQUIRES"]="Requires.private"
S["CXXCPP"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++ -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 "
S["CXX"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++"
S["XARGS"]="/usr/bin/xargs"
S["FIND"]="/usr/bin/find"
S["CAIRO_LIBTOOL_VERSION_INFO"]="11002:2:11000"
S["CAIRO_RELEASE_STATUS"]="release"
S["CAIRO_VERSION_SONUM"]="2"
S["CAIRO_VERSION_MICRO"]="2"
S["CAIRO_VERSION_MINOR"]="10"
S["CAIRO_VERSION_MAJOR"]="1"
S["GTK_DOC_USE_LIBTOOL_FALSE"]="#"
S["GTK_DOC_USE_LIBTOOL_TRUE"]=""
S["ENABLE_GTK_DOC_FALSE"]=""
S["ENABLE_GTK_DOC_TRUE"]="#"
S["GTKDOC_CHECK"]=""
S["PKG_CONFIG"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config"
S["HTML_DIR"]="${datadir}/gtk-doc/html"
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["lt_ECHO"]="echo"
S["RANLIB"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib"
S["AR"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar"
S["LN_S"]="ln -s"
S["NM"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-nm"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["LD"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld"
S["FGREP"]="/bin/grep -F"
S["SED"]="/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["OBJDUMP"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-objdump"
S["DLLTOOL"]="dlltool"
S["AS"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-as"
S["host_os"]="linux-gnueabi"
S["host_vendor"]="buildroot"
S["host_cpu"]="arm"
S["host"]="arm-buildroot-linux-gnueabi"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="i686"
S["build"]="i686-pc-linux-gnu"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["am__untar"]="${AMTAR} xf -"
S["am__tar"]="${AMTAR} chof - \"$$tardir\""
S["AMTAR"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run tar"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="gawk"
S["mkdir_p"]="/bin/mkdir -p"
S["MKDIR_P"]="/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip"
S["install_sh"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/install-sh"
S["MAKEINFO"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run makeinfo"
S["AUTOHEADER"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoheader"
S["AUTOMAKE"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run automake-1.11"
S["AUTOCONF"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoconf"
S["ACLOCAL"]="${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run aclocal-1.11"
S["VERSION"]="1.10.2"
S["PACKAGE"]="cairo"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["EGREP"]="/bin/grep -E"
S["GREP"]="/bin/grep"
S["CPP"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]=""
S["CPPFLAGS"]="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
S["LDFLAGS"]=""
S["CFLAGS"]="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 "
S["CC"]="/home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc"
S["target_alias"]="arm-buildroot-linux-gnueabi"
S["host_alias"]="arm-buildroot-linux-gnueabi"
S["build_alias"]="i686-pc-linux-gnu"
S["LIBS"]=" -lm"
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s&^&&"
S["prefix"]="/usr"
S["exec_prefix"]="/usr"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="http://bugs.freedesktop.org/enter_bug.cgi?product=cairo"
S["PACKAGE_STRING"]="cairo 1.10.2"
S["PACKAGE_VERSION"]="1.10.2"
S["PACKAGE_TARNAME"]="cairo"
S["PACKAGE_NAME"]="cairo"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"cairo\""
D["PACKAGE_TARNAME"]=" \"cairo\""
D["PACKAGE_VERSION"]=" \"1.10.2\""
D["PACKAGE_STRING"]=" \"cairo 1.10.2\""
D["PACKAGE_BUGREPORT"]=" \"http://bugs.freedesktop.org/enter_bug.cgi?product=cairo\""
D["PACKAGE_URL"]=" \"\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["WARN_UNUSED_RESULT"]=" __attribute__((__warn_unused_result__))"
D["SIZEOF_VOID_P"]=" 4"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 4"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_SIZE_T"]=" 4"
D["HAVE_BUILTIN_RETURN_ADDRESS"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_UINT64_T"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_ALARM"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SCHED_GETAFFINITY"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_FEENABLEEXCEPT"]=" 1"
D["HAVE_FEDISABLEEXCEPT"]=" 1"
D["HAVE_FECLEAREXCEPT"]=" 1"
D["HAVE_LIBGEN_H"]=" 1"
D["HAVE_BYTESWAP_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_SETJMP_H"]=" 1"
D["HAVE_FENV_H"]=" 1"
D["HAVE_LINK"]=" 1"
D["HAVE_CTIME_R"]=" 1"
D["HAVE_DRAND48"]=" 1"
D["HAVE_FLOCKFILE"]=" 1"
D["HAVE_FFS"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_MKDIR"]=" 2"
D["HAVE_FORK"]=" 1"
D["HAVE_WAITPID"]=" 1"
D["HAVE_RAISE"]=" 1"
D["PACKAGE_VERSION"]=" USE_cairo_version_OR_cairo_version_string_INSTEAD"
D["PACKAGE_STRING"]=" USE_cairo_version_OR_cairo_version_string_INSTEAD"
D["PACKAGE_NAME"]=" USE_cairo_INSTEAD"
D["PACKAGE_TARNAME"]=" USE_cairo_INSTEAD"
D["HAVE_ZLIB"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["HAVE_FT_BITMAP_SIZE_Y_PPEM"]=" 1"
D["HAVE_FT_GLYPHSLOT_EMBOLDEN"]=" 1"
D["HAVE_FT_LOAD_SFNT_TABLE"]=" 1"
D["HAVE_FT_LIBRARY_SETLCDFILTER"]=" 1"
D["HAVE_FCINIT"]=" 1"
D["HAVE_FCFINI"]=" 1"
D["CAIRO_HAS_REAL_PTHREAD"]=" 1"
D["CAIRO_HAS_PTHREAD"]=" 1"
D["CAIRO_HAS_PTHREAD"]=" 1"
D["SHARED_LIB_EXT"]=" \"so\""
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5 ;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5 ;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5  ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$tmp/stdin"
  case $ac_file in
  -) cat "$tmp/out" && rm -f "$tmp/out";;
  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
    } >"$tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options which allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}" ; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile="${ofile}T"
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL

# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
#
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
#                 2006, 2007, 2008 Free Software Foundation, Inc.
#   Written by Gordon Matzigkeit, 1996
#
#   This file is part of GNU Libtool.
#
# GNU Libtool is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# As a special exception to the GNU General Public License,
# if you distribute this file as part of a program or library that
# is built using GNU Libtool, you may include this file under the
# same distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Libtool; see the file COPYING.  If not, a copy
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
# obtained by writing to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# The names of the tagged configurations supported by this script.
available_tags="CXX "

# ### BEGIN LIBTOOL CONFIG

# Assembler program.
AS=$AS

# DLL creation program.
DLLTOOL=$DLLTOOL

# Object dumper program.
OBJDUMP=$OBJDUMP

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method == "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# The archiver.
AR=$lt_AR
AR_FLAGS=$lt_AR_FLAGS

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that does not interpret backslashes.
ECHO=$lt_ECHO

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# If ld is used when linking, flag to hardcode \$libdir into a binary
# during linking.  This must work even if \$libdir does not exist.
hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Fix the shell variable \$srcfile for the compiler.
fix_srcfile_path=$lt_fix_srcfile_path

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test "X${COLLECT_NAMES+set}" != Xset; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain="$ac_aux_dir/ltmain.sh"


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
    || (rm -f "$cfgfile"; exit 1)

  case $xsi_shell in
  yes)
    cat << \_LT_EOF >> "$cfgfile"

# func_dirname file append nondir_replacement
# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
# otherwise set result to NONDIR_REPLACEMENT.
func_dirname ()
{
  case ${1} in
    */*) func_dirname_result="${1%/*}${2}" ;;
    *  ) func_dirname_result="${3}" ;;
  esac
}

# func_basename file
func_basename ()
{
  func_basename_result="${1##*/}"
}

# func_dirname_and_basename file append nondir_replacement
# perform func_basename and func_dirname in a single function
# call:
#   dirname:  Compute the dirname of FILE.  If nonempty,
#             add APPEND to the result, otherwise set result
#             to NONDIR_REPLACEMENT.
#             value returned in "$func_dirname_result"
#   basename: Compute filename of FILE.
#             value retuned in "$func_basename_result"
# Implementation must be kept synchronized with func_dirname
# and func_basename. For efficiency, we do not delegate to
# those functions but instead duplicate the functionality here.
func_dirname_and_basename ()
{
  case ${1} in
    */*) func_dirname_result="${1%/*}${2}" ;;
    *  ) func_dirname_result="${3}" ;;
  esac
  func_basename_result="${1##*/}"
}

# func_stripname prefix suffix name
# strip PREFIX and SUFFIX off of NAME.
# PREFIX and SUFFIX must not contain globbing or regex special
# characters, hashes, percent signs, but SUFFIX may contain a leading
# dot (in which case that matches only a dot).
func_stripname ()
{
  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
  # positional parameters, so assign one to ordinary parameter first.
  func_stripname_result=${3}
  func_stripname_result=${func_stripname_result#"${1}"}
  func_stripname_result=${func_stripname_result%"${2}"}
}

# func_opt_split
func_opt_split ()
{
  func_opt_split_opt=${1%%=*}
  func_opt_split_arg=${1#*=}
}

# func_lo2o object
func_lo2o ()
{
  case ${1} in
    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
    *)    func_lo2o_result=${1} ;;
  esac
}

# func_xform libobj-or-source
func_xform ()
{
  func_xform_result=${1%.*}.lo
}

# func_arith arithmetic-term...
func_arith ()
{
  func_arith_result=$(( $* ))
}

# func_len string
# STRING may not start with a hyphen.
func_len ()
{
  func_len_result=${#1}
}

_LT_EOF
    ;;
  *) # Bourne compatible functions.
    cat << \_LT_EOF >> "$cfgfile"

# func_dirname file append nondir_replacement
# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
# otherwise set result to NONDIR_REPLACEMENT.
func_dirname ()
{
  # Extract subdirectory from the argument.
  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
  if test "X$func_dirname_result" = "X${1}"; then
    func_dirname_result="${3}"
  else
    func_dirname_result="$func_dirname_result${2}"
  fi
}

# func_basename file
func_basename ()
{
  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
}


# func_stripname prefix suffix name
# strip PREFIX and SUFFIX off of NAME.
# PREFIX and SUFFIX must not contain globbing or regex special
# characters, hashes, percent signs, but SUFFIX may contain a leading
# dot (in which case that matches only a dot).
# func_strip_suffix prefix name
func_stripname ()
{
  case ${2} in
    .*) func_stripname_result=`$ECHO "X${3}" \
           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
    *)  func_stripname_result=`$ECHO "X${3}" \
           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
  esac
}

# sed scripts:
my_sed_long_opt='1s/^\(-[^=]*\)=.*/\1/;q'
my_sed_long_arg='1s/^-[^=]*=//'

# func_opt_split
func_opt_split ()
{
  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
}

# func_lo2o object
func_lo2o ()
{
  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
}

# func_xform libobj-or-source
func_xform ()
{
  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[^.]*$/.lo/'`
}

# func_arith arithmetic-term...
func_arith ()
{
  func_arith_result=`expr "$@"`
}

# func_len string
# STRING may not start with a hyphen.
func_len ()
{
  func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
}

_LT_EOF
esac

case $lt_shell_append in
  yes)
    cat << \_LT_EOF >> "$cfgfile"

# func_append var value
# Append VALUE to the end of shell variable VAR.
func_append ()
{
  eval "$1+=\$2"
}
_LT_EOF
    ;;
  *)
    cat << \_LT_EOF >> "$cfgfile"

# func_append var value
# Append VALUE to the end of shell variable VAR.
func_append ()
{
  eval "$1=\$$1\$2"
}

_LT_EOF
    ;;
  esac


  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
    || (rm -f "$cfgfile"; exit 1)

  mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# If ld is used when linking, flag to hardcode \$libdir into a binary
# during linking.  This must work even if \$libdir does not exist.
hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Fix the shell variable \$srcfile for the compiler.
fix_srcfile_path=$lt_fix_srcfile_path_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF

 ;;
    "$srcdir/build/Makefile.win32.features":C)
		_config_file=$srcdir/build/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE___WIN32"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "$srcdir/src/Makefile.am.features":C)
		_config_file=$srcdir/src/Makefile.am.features
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_AMAKE"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "$srcdir/src/Makefile.win32.features":C)
		_config_file=$srcdir/src/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_WIN32"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "$srcdir/boilerplate/Makefile.am.features":C)
		_config_file=$srcdir/boilerplate/Makefile.am.features
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_boilerplate_AMAKE"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "$srcdir/boilerplate/Makefile.win32.features":C)
		_config_file=$srcdir/boilerplate/Makefile.win32.features
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_cairo_boilerplate_WIN32"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "src/cairo-features.h":C)
		_config_file=src/cairo-features.h
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
				echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_FEATURES_H'
	echo '#define CAIRO_FEATURES_H'
	echo ''
	for FEATURE in $CAIRO_FEATURES; do
		echo "#define $FEATURE 1"
	done | LANG=C sort
	echo ''
	for FEATURE in $CAIRO_NO_FEATURES; do
		echo "/*#undef $FEATURE */"
	done | LANG=C sort
	echo ''
	echo '#endif'

		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "src/cairo-supported-features.h":C)
		_config_file=src/cairo-supported-features.h
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
				echo '/* Generated by configure.  Do not edit. */'
	echo '#ifndef CAIRO_SUPPORTED_FEATURES_H'
	echo '#define CAIRO_SUPPORTED_FEATURES_H'
	echo ''
	echo '/* This is a dummy header, to trick gtk-doc only */'
	echo ''
	for FEATURE in $CAIRO_SUPPORTED_FEATURES; do
		echo "#define $FEATURE 1"
	done
	echo ''
	echo '#endif'

		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "$srcdir/build/Makefile.win32.features-h":C)
		_config_file=$srcdir/build/Makefile.win32.features-h
		_tmp_file=cairoconf.tmp
		{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $_config_file" >&5
$as_echo "$as_me: creating $_config_file" >&6;}
		{
			echo "$CAIRO_MAKEFILE_win32_features_h_WIN32"
		} >> "$_tmp_file" ||
	        as_fn_error $? "failed to write to $_tmp_file" "$LINENO" 5

		if cmp -s "$_tmp_file" "$_config_file"; then
		  { $as_echo "$as_me:${as_lineno-$LINENO}: $_config_file is unchanged" >&5
$as_echo "$as_me: $_config_file is unchanged" >&6;}
		  rm -f "$_tmp_file"
		else
		  mv "$_tmp_file" "$_config_file" ||
	          as_fn_error $? "failed to update $_config_file" "$LINENO" 5
		fi
	 ;;
    "src/cairo-xlib.pc":F) 		mv "src/cairo-xlib.pc" "src/cairo-xlib.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib%g;		s%@FEATURE_NAME@%Xlib surface backend%g;		s%@FEATURE_BASE@%$xlib_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xlib.pc.tmp" > "src/cairo-xlib.pc" && rm -f "src/cairo-xlib.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xlib.pc" "$LINENO" 5
	 ;;
    "cairo-xlib-uninstalled.pc":F) 		mv "cairo-xlib-uninstalled.pc" "cairo-xlib-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib%g;		s%@FEATURE_NAME@%Xlib surface backend%g;		s%@FEATURE_BASE@%$xlib_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xlib-uninstalled.pc.tmp" > "cairo-xlib-uninstalled.pc" && rm -f "cairo-xlib-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xlib-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xlib-xrender.pc":F) 		mv "src/cairo-xlib-xrender.pc" "src/cairo-xlib-xrender.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xrender%g;		s%@FEATURE_NAME@%Xlib Xrender surface backend%g;		s%@FEATURE_BASE@%$xlib_xrender_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xrender_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xrender_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_xrender_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xrender_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xlib-xrender.pc.tmp" > "src/cairo-xlib-xrender.pc" && rm -f "src/cairo-xlib-xrender.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xlib-xrender.pc" "$LINENO" 5
	 ;;
    "cairo-xlib-xrender-uninstalled.pc":F) 		mv "cairo-xlib-xrender-uninstalled.pc" "cairo-xlib-xrender-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xrender%g;		s%@FEATURE_NAME@%Xlib Xrender surface backend%g;		s%@FEATURE_BASE@%$xlib_xrender_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xrender_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xrender_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_xrender_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xrender_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xlib-xrender-uninstalled.pc.tmp" > "cairo-xlib-xrender-uninstalled.pc" && rm -f "cairo-xlib-xrender-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xlib-xrender-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xcb.pc":F) 		mv "src/cairo-xcb.pc" "src/cairo-xcb.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb%g;		s%@FEATURE_NAME@%XCB surface backend%g;		s%@FEATURE_BASE@%$xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xcb.pc.tmp" > "src/cairo-xcb.pc" && rm -f "src/cairo-xcb.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xcb.pc" "$LINENO" 5
	 ;;
    "cairo-xcb-uninstalled.pc":F) 		mv "cairo-xcb-uninstalled.pc" "cairo-xcb-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb%g;		s%@FEATURE_NAME@%XCB surface backend%g;		s%@FEATURE_BASE@%$xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xcb-uninstalled.pc.tmp" > "cairo-xcb-uninstalled.pc" && rm -f "cairo-xcb-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xcb-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xlib-xcb.pc":F) 		mv "src/cairo-xlib-xcb.pc" "src/cairo-xlib-xcb.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xcb%g;		s%@FEATURE_NAME@%Xlib/XCB functions%g;		s%@FEATURE_BASE@%$xlib_xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_xcb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xcb_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xlib-xcb.pc.tmp" > "src/cairo-xlib-xcb.pc" && rm -f "src/cairo-xlib-xcb.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xlib-xcb.pc" "$LINENO" 5
	 ;;
    "cairo-xlib-xcb-uninstalled.pc":F) 		mv "cairo-xlib-xcb-uninstalled.pc" "cairo-xlib-xcb-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xlib-xcb%g;		s%@FEATURE_NAME@%Xlib/XCB functions%g;		s%@FEATURE_BASE@%$xlib_xcb_BASE%g;		s%@FEATURE_REQUIRES@%$xlib_xcb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xlib_xcb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xlib_xcb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xlib_xcb_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xlib-xcb-uninstalled.pc.tmp" > "cairo-xlib-xcb-uninstalled.pc" && rm -f "cairo-xlib-xcb-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xlib-xcb-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xcb-shm.pc":F) 		mv "src/cairo-xcb-shm.pc" "src/cairo-xcb-shm.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb-shm%g;		s%@FEATURE_NAME@%XCB/SHM functions%g;		s%@FEATURE_BASE@%$xcb_shm_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_shm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_shm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_shm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_shm_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xcb-shm.pc.tmp" > "src/cairo-xcb-shm.pc" && rm -f "src/cairo-xcb-shm.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xcb-shm.pc" "$LINENO" 5
	 ;;
    "cairo-xcb-shm-uninstalled.pc":F) 		mv "cairo-xcb-shm-uninstalled.pc" "cairo-xcb-shm-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb-shm%g;		s%@FEATURE_NAME@%XCB/SHM functions%g;		s%@FEATURE_BASE@%$xcb_shm_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_shm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_shm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_shm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_shm_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xcb-shm-uninstalled.pc.tmp" > "cairo-xcb-shm-uninstalled.pc" && rm -f "cairo-xcb-shm-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xcb-shm-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-qt.pc":F) 		mv "src/cairo-qt.pc" "src/cairo-qt.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-qt%g;		s%@FEATURE_NAME@%Qt surface backend%g;		s%@FEATURE_BASE@%$qt_BASE%g;		s%@FEATURE_REQUIRES@%$qt_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$qt_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$qt_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$qt_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-qt.pc.tmp" > "src/cairo-qt.pc" && rm -f "src/cairo-qt.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-qt.pc" "$LINENO" 5
	 ;;
    "cairo-qt-uninstalled.pc":F) 		mv "cairo-qt-uninstalled.pc" "cairo-qt-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-qt%g;		s%@FEATURE_NAME@%Qt surface backend%g;		s%@FEATURE_BASE@%$qt_BASE%g;		s%@FEATURE_REQUIRES@%$qt_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$qt_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$qt_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$qt_NONPKGCONFIG_CFLAGS%g;		" < "cairo-qt-uninstalled.pc.tmp" > "cairo-qt-uninstalled.pc" && rm -f "cairo-qt-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-qt-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-quartz.pc":F) 		mv "src/cairo-quartz.pc" "src/cairo-quartz.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz%g;		s%@FEATURE_NAME@%Quartz surface backend%g;		s%@FEATURE_BASE@%$quartz_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz.pc.tmp" > "src/cairo-quartz.pc" && rm -f "src/cairo-quartz.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-quartz.pc" "$LINENO" 5
	 ;;
    "cairo-quartz-uninstalled.pc":F) 		mv "cairo-quartz-uninstalled.pc" "cairo-quartz-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz%g;		s%@FEATURE_NAME@%Quartz surface backend%g;		s%@FEATURE_BASE@%$quartz_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-uninstalled.pc.tmp" > "cairo-quartz-uninstalled.pc" && rm -f "cairo-quartz-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-quartz-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-quartz-font.pc":F) 		mv "src/cairo-quartz-font.pc" "src/cairo-quartz-font.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-font%g;		s%@FEATURE_NAME@%Quartz font backend%g;		s%@FEATURE_BASE@%$quartz_font_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_font_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_font_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz-font.pc.tmp" > "src/cairo-quartz-font.pc" && rm -f "src/cairo-quartz-font.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-quartz-font.pc" "$LINENO" 5
	 ;;
    "cairo-quartz-font-uninstalled.pc":F) 		mv "cairo-quartz-font-uninstalled.pc" "cairo-quartz-font-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-font%g;		s%@FEATURE_NAME@%Quartz font backend%g;		s%@FEATURE_BASE@%$quartz_font_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_font_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_font_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-font-uninstalled.pc.tmp" > "cairo-quartz-font-uninstalled.pc" && rm -f "cairo-quartz-font-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-quartz-font-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-quartz-image.pc":F) 		mv "src/cairo-quartz-image.pc" "src/cairo-quartz-image.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-image%g;		s%@FEATURE_NAME@%Quartz Image surface backend%g;		s%@FEATURE_BASE@%$quartz_image_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_image_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_image_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_image_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_image_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-quartz-image.pc.tmp" > "src/cairo-quartz-image.pc" && rm -f "src/cairo-quartz-image.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-quartz-image.pc" "$LINENO" 5
	 ;;
    "cairo-quartz-image-uninstalled.pc":F) 		mv "cairo-quartz-image-uninstalled.pc" "cairo-quartz-image-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-quartz-image%g;		s%@FEATURE_NAME@%Quartz Image surface backend%g;		s%@FEATURE_BASE@%$quartz_image_BASE%g;		s%@FEATURE_REQUIRES@%$quartz_image_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$quartz_image_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$quartz_image_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$quartz_image_NONPKGCONFIG_CFLAGS%g;		" < "cairo-quartz-image-uninstalled.pc.tmp" > "cairo-quartz-image-uninstalled.pc" && rm -f "cairo-quartz-image-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-quartz-image-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-win32.pc":F) 		mv "src/cairo-win32.pc" "src/cairo-win32.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32%g;		s%@FEATURE_NAME@%Microsoft Windows surface backend%g;		s%@FEATURE_BASE@%$win32_BASE%g;		s%@FEATURE_REQUIRES@%$win32_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$win32_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-win32.pc.tmp" > "src/cairo-win32.pc" && rm -f "src/cairo-win32.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-win32.pc" "$LINENO" 5
	 ;;
    "cairo-win32-uninstalled.pc":F) 		mv "cairo-win32-uninstalled.pc" "cairo-win32-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32%g;		s%@FEATURE_NAME@%Microsoft Windows surface backend%g;		s%@FEATURE_BASE@%$win32_BASE%g;		s%@FEATURE_REQUIRES@%$win32_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$win32_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_NONPKGCONFIG_CFLAGS%g;		" < "cairo-win32-uninstalled.pc.tmp" > "cairo-win32-uninstalled.pc" && rm -f "cairo-win32-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-win32-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-win32-font.pc":F) 		mv "src/cairo-win32-font.pc" "src/cairo-win32-font.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32-font%g;		s%@FEATURE_NAME@%Microsoft Windows font backend%g;		s%@FEATURE_BASE@%$win32_font_BASE%g;		s%@FEATURE_REQUIRES@%$win32_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$win32_font_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_font_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-win32-font.pc.tmp" > "src/cairo-win32-font.pc" && rm -f "src/cairo-win32-font.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-win32-font.pc" "$LINENO" 5
	 ;;
    "cairo-win32-font-uninstalled.pc":F) 		mv "cairo-win32-font-uninstalled.pc" "cairo-win32-font-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-win32-font%g;		s%@FEATURE_NAME@%Microsoft Windows font backend%g;		s%@FEATURE_BASE@%$win32_font_BASE%g;		s%@FEATURE_REQUIRES@%$win32_font_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$win32_font_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$win32_font_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$win32_font_NONPKGCONFIG_CFLAGS%g;		" < "cairo-win32-font-uninstalled.pc.tmp" > "cairo-win32-font-uninstalled.pc" && rm -f "cairo-win32-font-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-win32-font-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-skia.pc":F) 		mv "src/cairo-skia.pc" "src/cairo-skia.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-skia%g;		s%@FEATURE_NAME@%Skia surface backend%g;		s%@FEATURE_BASE@%$skia_BASE%g;		s%@FEATURE_REQUIRES@%$skia_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$skia_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$skia_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$skia_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-skia.pc.tmp" > "src/cairo-skia.pc" && rm -f "src/cairo-skia.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-skia.pc" "$LINENO" 5
	 ;;
    "cairo-skia-uninstalled.pc":F) 		mv "cairo-skia-uninstalled.pc" "cairo-skia-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-skia%g;		s%@FEATURE_NAME@%Skia surface backend%g;		s%@FEATURE_BASE@%$skia_BASE%g;		s%@FEATURE_REQUIRES@%$skia_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$skia_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$skia_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$skia_NONPKGCONFIG_CFLAGS%g;		" < "cairo-skia-uninstalled.pc.tmp" > "cairo-skia-uninstalled.pc" && rm -f "cairo-skia-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-skia-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-os2.pc":F) 		mv "src/cairo-os2.pc" "src/cairo-os2.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-os2%g;		s%@FEATURE_NAME@%OS/2 surface backend%g;		s%@FEATURE_BASE@%$os2_BASE%g;		s%@FEATURE_REQUIRES@%$os2_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$os2_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$os2_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$os2_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-os2.pc.tmp" > "src/cairo-os2.pc" && rm -f "src/cairo-os2.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-os2.pc" "$LINENO" 5
	 ;;
    "cairo-os2-uninstalled.pc":F) 		mv "cairo-os2-uninstalled.pc" "cairo-os2-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-os2%g;		s%@FEATURE_NAME@%OS/2 surface backend%g;		s%@FEATURE_BASE@%$os2_BASE%g;		s%@FEATURE_REQUIRES@%$os2_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$os2_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$os2_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$os2_NONPKGCONFIG_CFLAGS%g;		" < "cairo-os2-uninstalled.pc.tmp" > "cairo-os2-uninstalled.pc" && rm -f "cairo-os2-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-os2-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-beos.pc":F) 		mv "src/cairo-beos.pc" "src/cairo-beos.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-beos%g;		s%@FEATURE_NAME@%BeOS/Zeta surface backend%g;		s%@FEATURE_BASE@%$beos_BASE%g;		s%@FEATURE_REQUIRES@%$beos_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$beos_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$beos_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$beos_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-beos.pc.tmp" > "src/cairo-beos.pc" && rm -f "src/cairo-beos.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-beos.pc" "$LINENO" 5
	 ;;
    "cairo-beos-uninstalled.pc":F) 		mv "cairo-beos-uninstalled.pc" "cairo-beos-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-beos%g;		s%@FEATURE_NAME@%BeOS/Zeta surface backend%g;		s%@FEATURE_BASE@%$beos_BASE%g;		s%@FEATURE_REQUIRES@%$beos_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$beos_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$beos_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$beos_NONPKGCONFIG_CFLAGS%g;		" < "cairo-beos-uninstalled.pc.tmp" > "cairo-beos-uninstalled.pc" && rm -f "cairo-beos-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-beos-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-drm.pc":F) 		mv "src/cairo-drm.pc" "src/cairo-drm.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-drm%g;		s%@FEATURE_NAME@%DRM surface backend%g;		s%@FEATURE_BASE@%$drm_BASE%g;		s%@FEATURE_REQUIRES@%$drm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$drm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$drm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$drm_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-drm.pc.tmp" > "src/cairo-drm.pc" && rm -f "src/cairo-drm.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-drm.pc" "$LINENO" 5
	 ;;
    "cairo-drm-uninstalled.pc":F) 		mv "cairo-drm-uninstalled.pc" "cairo-drm-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-drm%g;		s%@FEATURE_NAME@%DRM surface backend%g;		s%@FEATURE_BASE@%$drm_BASE%g;		s%@FEATURE_REQUIRES@%$drm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$drm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$drm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$drm_NONPKGCONFIG_CFLAGS%g;		" < "cairo-drm-uninstalled.pc.tmp" > "cairo-drm-uninstalled.pc" && rm -f "cairo-drm-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-drm-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-drm-xr.pc":F) 		mv "src/cairo-drm-xr.pc" "src/cairo-drm-xr.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-drm-xr%g;		s%@FEATURE_NAME@%DRM Xr (DDX) functions%g;		s%@FEATURE_BASE@%$drm_xr_BASE%g;		s%@FEATURE_REQUIRES@%$drm_xr_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$drm_xr_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$drm_xr_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$drm_xr_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-drm-xr.pc.tmp" > "src/cairo-drm-xr.pc" && rm -f "src/cairo-drm-xr.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-drm-xr.pc" "$LINENO" 5
	 ;;
    "cairo-drm-xr-uninstalled.pc":F) 		mv "cairo-drm-xr-uninstalled.pc" "cairo-drm-xr-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-drm-xr%g;		s%@FEATURE_NAME@%DRM Xr (DDX) functions%g;		s%@FEATURE_BASE@%$drm_xr_BASE%g;		s%@FEATURE_REQUIRES@%$drm_xr_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$drm_xr_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$drm_xr_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$drm_xr_NONPKGCONFIG_CFLAGS%g;		" < "cairo-drm-xr-uninstalled.pc.tmp" > "cairo-drm-xr-uninstalled.pc" && rm -f "cairo-drm-xr-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-drm-xr-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-gallium.pc":F) 		mv "src/cairo-gallium.pc" "src/cairo-gallium.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gallium%g;		s%@FEATURE_NAME@%Gallium3D surface backend%g;		s%@FEATURE_BASE@%$gallium_BASE%g;		s%@FEATURE_REQUIRES@%$gallium_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gallium_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gallium_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gallium_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-gallium.pc.tmp" > "src/cairo-gallium.pc" && rm -f "src/cairo-gallium.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-gallium.pc" "$LINENO" 5
	 ;;
    "cairo-gallium-uninstalled.pc":F) 		mv "cairo-gallium-uninstalled.pc" "cairo-gallium-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gallium%g;		s%@FEATURE_NAME@%Gallium3D surface backend%g;		s%@FEATURE_BASE@%$gallium_BASE%g;		s%@FEATURE_REQUIRES@%$gallium_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gallium_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gallium_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gallium_NONPKGCONFIG_CFLAGS%g;		" < "cairo-gallium-uninstalled.pc.tmp" > "cairo-gallium-uninstalled.pc" && rm -f "cairo-gallium-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-gallium-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xcb-drm.pc":F) 		mv "src/cairo-xcb-drm.pc" "src/cairo-xcb-drm.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb-drm%g;		s%@FEATURE_NAME@%XCB/DRM functions%g;		s%@FEATURE_BASE@%$xcb_drm_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_drm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_drm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_drm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_drm_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xcb-drm.pc.tmp" > "src/cairo-xcb-drm.pc" && rm -f "src/cairo-xcb-drm.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xcb-drm.pc" "$LINENO" 5
	 ;;
    "cairo-xcb-drm-uninstalled.pc":F) 		mv "cairo-xcb-drm-uninstalled.pc" "cairo-xcb-drm-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xcb-drm%g;		s%@FEATURE_NAME@%XCB/DRM functions%g;		s%@FEATURE_BASE@%$xcb_drm_BASE%g;		s%@FEATURE_REQUIRES@%$xcb_drm_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xcb_drm_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xcb_drm_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xcb_drm_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xcb-drm-uninstalled.pc.tmp" > "cairo-xcb-drm-uninstalled.pc" && rm -f "cairo-xcb-drm-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xcb-drm-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-png.pc":F) 		mv "src/cairo-png.pc" "src/cairo-png.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-png%g;		s%@FEATURE_NAME@%PNG functions%g;		s%@FEATURE_BASE@%$png_BASE%g;		s%@FEATURE_REQUIRES@%$png_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$png_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$png_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$png_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-png.pc.tmp" > "src/cairo-png.pc" && rm -f "src/cairo-png.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-png.pc" "$LINENO" 5
	 ;;
    "cairo-png-uninstalled.pc":F) 		mv "cairo-png-uninstalled.pc" "cairo-png-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-png%g;		s%@FEATURE_NAME@%PNG functions%g;		s%@FEATURE_BASE@%$png_BASE%g;		s%@FEATURE_REQUIRES@%$png_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$png_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$png_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$png_NONPKGCONFIG_CFLAGS%g;		" < "cairo-png-uninstalled.pc.tmp" > "cairo-png-uninstalled.pc" && rm -f "cairo-png-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-png-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-gl.pc":F) 		mv "src/cairo-gl.pc" "src/cairo-gl.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gl%g;		s%@FEATURE_NAME@%OpenGL surface backend%g;		s%@FEATURE_BASE@%$gl_BASE%g;		s%@FEATURE_REQUIRES@%$gl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gl_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-gl.pc.tmp" > "src/cairo-gl.pc" && rm -f "src/cairo-gl.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-gl.pc" "$LINENO" 5
	 ;;
    "cairo-gl-uninstalled.pc":F) 		mv "cairo-gl-uninstalled.pc" "cairo-gl-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gl%g;		s%@FEATURE_NAME@%OpenGL surface backend%g;		s%@FEATURE_BASE@%$gl_BASE%g;		s%@FEATURE_REQUIRES@%$gl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gl_NONPKGCONFIG_CFLAGS%g;		" < "cairo-gl-uninstalled.pc.tmp" > "cairo-gl-uninstalled.pc" && rm -f "cairo-gl-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-gl-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-directfb.pc":F) 		mv "src/cairo-directfb.pc" "src/cairo-directfb.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-directfb%g;		s%@FEATURE_NAME@%directfb surface backend%g;		s%@FEATURE_BASE@%$directfb_BASE%g;		s%@FEATURE_REQUIRES@%$directfb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$directfb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$directfb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$directfb_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-directfb.pc.tmp" > "src/cairo-directfb.pc" && rm -f "src/cairo-directfb.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-directfb.pc" "$LINENO" 5
	 ;;
    "cairo-directfb-uninstalled.pc":F) 		mv "cairo-directfb-uninstalled.pc" "cairo-directfb-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-directfb%g;		s%@FEATURE_NAME@%directfb surface backend%g;		s%@FEATURE_BASE@%$directfb_BASE%g;		s%@FEATURE_REQUIRES@%$directfb_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$directfb_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$directfb_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$directfb_NONPKGCONFIG_CFLAGS%g;		" < "cairo-directfb-uninstalled.pc.tmp" > "cairo-directfb-uninstalled.pc" && rm -f "cairo-directfb-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-directfb-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-vg.pc":F) 		mv "src/cairo-vg.pc" "src/cairo-vg.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-vg%g;		s%@FEATURE_NAME@%OpenVG surface backend%g;		s%@FEATURE_BASE@%$vg_BASE%g;		s%@FEATURE_REQUIRES@%$vg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$vg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$vg_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$vg_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-vg.pc.tmp" > "src/cairo-vg.pc" && rm -f "src/cairo-vg.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-vg.pc" "$LINENO" 5
	 ;;
    "cairo-vg-uninstalled.pc":F) 		mv "cairo-vg-uninstalled.pc" "cairo-vg-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-vg%g;		s%@FEATURE_NAME@%OpenVG surface backend%g;		s%@FEATURE_BASE@%$vg_BASE%g;		s%@FEATURE_REQUIRES@%$vg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$vg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$vg_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$vg_NONPKGCONFIG_CFLAGS%g;		" < "cairo-vg-uninstalled.pc.tmp" > "cairo-vg-uninstalled.pc" && rm -f "cairo-vg-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-vg-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-egl.pc":F) 		mv "src/cairo-egl.pc" "src/cairo-egl.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-egl%g;		s%@FEATURE_NAME@%EGL functions%g;		s%@FEATURE_BASE@%$egl_BASE%g;		s%@FEATURE_REQUIRES@%$egl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$egl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$egl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$egl_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-egl.pc.tmp" > "src/cairo-egl.pc" && rm -f "src/cairo-egl.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-egl.pc" "$LINENO" 5
	 ;;
    "cairo-egl-uninstalled.pc":F) 		mv "cairo-egl-uninstalled.pc" "cairo-egl-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-egl%g;		s%@FEATURE_NAME@%EGL functions%g;		s%@FEATURE_BASE@%$egl_BASE%g;		s%@FEATURE_REQUIRES@%$egl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$egl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$egl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$egl_NONPKGCONFIG_CFLAGS%g;		" < "cairo-egl-uninstalled.pc.tmp" > "cairo-egl-uninstalled.pc" && rm -f "cairo-egl-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-egl-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-glx.pc":F) 		mv "src/cairo-glx.pc" "src/cairo-glx.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-glx%g;		s%@FEATURE_NAME@%GLX functions%g;		s%@FEATURE_BASE@%$glx_BASE%g;		s%@FEATURE_REQUIRES@%$glx_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$glx_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$glx_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$glx_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-glx.pc.tmp" > "src/cairo-glx.pc" && rm -f "src/cairo-glx.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-glx.pc" "$LINENO" 5
	 ;;
    "cairo-glx-uninstalled.pc":F) 		mv "cairo-glx-uninstalled.pc" "cairo-glx-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-glx%g;		s%@FEATURE_NAME@%GLX functions%g;		s%@FEATURE_BASE@%$glx_BASE%g;		s%@FEATURE_REQUIRES@%$glx_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$glx_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$glx_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$glx_NONPKGCONFIG_CFLAGS%g;		" < "cairo-glx-uninstalled.pc.tmp" > "cairo-glx-uninstalled.pc" && rm -f "cairo-glx-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-glx-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-wgl.pc":F) 		mv "src/cairo-wgl.pc" "src/cairo-wgl.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-wgl%g;		s%@FEATURE_NAME@%WGL functions%g;		s%@FEATURE_BASE@%$wgl_BASE%g;		s%@FEATURE_REQUIRES@%$wgl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$wgl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$wgl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$wgl_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-wgl.pc.tmp" > "src/cairo-wgl.pc" && rm -f "src/cairo-wgl.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-wgl.pc" "$LINENO" 5
	 ;;
    "cairo-wgl-uninstalled.pc":F) 		mv "cairo-wgl-uninstalled.pc" "cairo-wgl-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-wgl%g;		s%@FEATURE_NAME@%WGL functions%g;		s%@FEATURE_BASE@%$wgl_BASE%g;		s%@FEATURE_REQUIRES@%$wgl_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$wgl_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$wgl_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$wgl_NONPKGCONFIG_CFLAGS%g;		" < "cairo-wgl-uninstalled.pc.tmp" > "cairo-wgl-uninstalled.pc" && rm -f "cairo-wgl-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-wgl-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-script.pc":F) 		mv "src/cairo-script.pc" "src/cairo-script.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-script%g;		s%@FEATURE_NAME@%script surface backend%g;		s%@FEATURE_BASE@%$script_BASE%g;		s%@FEATURE_REQUIRES@%$script_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$script_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$script_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$script_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-script.pc.tmp" > "src/cairo-script.pc" && rm -f "src/cairo-script.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-script.pc" "$LINENO" 5
	 ;;
    "cairo-script-uninstalled.pc":F) 		mv "cairo-script-uninstalled.pc" "cairo-script-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-script%g;		s%@FEATURE_NAME@%script surface backend%g;		s%@FEATURE_BASE@%$script_BASE%g;		s%@FEATURE_REQUIRES@%$script_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$script_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$script_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$script_NONPKGCONFIG_CFLAGS%g;		" < "cairo-script-uninstalled.pc.tmp" > "cairo-script-uninstalled.pc" && rm -f "cairo-script-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-script-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-ft.pc":F) 		mv "src/cairo-ft.pc" "src/cairo-ft.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ft%g;		s%@FEATURE_NAME@%FreeType font backend%g;		s%@FEATURE_BASE@%$ft_BASE%g;		s%@FEATURE_REQUIRES@%$ft_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ft_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$ft_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ft_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-ft.pc.tmp" > "src/cairo-ft.pc" && rm -f "src/cairo-ft.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-ft.pc" "$LINENO" 5
	 ;;
    "cairo-ft-uninstalled.pc":F) 		mv "cairo-ft-uninstalled.pc" "cairo-ft-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ft%g;		s%@FEATURE_NAME@%FreeType font backend%g;		s%@FEATURE_BASE@%$ft_BASE%g;		s%@FEATURE_REQUIRES@%$ft_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ft_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$ft_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ft_NONPKGCONFIG_CFLAGS%g;		" < "cairo-ft-uninstalled.pc.tmp" > "cairo-ft-uninstalled.pc" && rm -f "cairo-ft-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-ft-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-fc.pc":F) 		mv "src/cairo-fc.pc" "src/cairo-fc.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-fc%g;		s%@FEATURE_NAME@%Fontconfig font backend%g;		s%@FEATURE_BASE@%$fc_BASE%g;		s%@FEATURE_REQUIRES@%$fc_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$fc_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$fc_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$fc_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-fc.pc.tmp" > "src/cairo-fc.pc" && rm -f "src/cairo-fc.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-fc.pc" "$LINENO" 5
	 ;;
    "cairo-fc-uninstalled.pc":F) 		mv "cairo-fc-uninstalled.pc" "cairo-fc-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-fc%g;		s%@FEATURE_NAME@%Fontconfig font backend%g;		s%@FEATURE_BASE@%$fc_BASE%g;		s%@FEATURE_REQUIRES@%$fc_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$fc_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$fc_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$fc_NONPKGCONFIG_CFLAGS%g;		" < "cairo-fc-uninstalled.pc.tmp" > "cairo-fc-uninstalled.pc" && rm -f "cairo-fc-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-fc-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-ps.pc":F) 		mv "src/cairo-ps.pc" "src/cairo-ps.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ps%g;		s%@FEATURE_NAME@%PostScript surface backend%g;		s%@FEATURE_BASE@%$ps_BASE%g;		s%@FEATURE_REQUIRES@%$ps_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ps_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$ps_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ps_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-ps.pc.tmp" > "src/cairo-ps.pc" && rm -f "src/cairo-ps.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-ps.pc" "$LINENO" 5
	 ;;
    "cairo-ps-uninstalled.pc":F) 		mv "cairo-ps-uninstalled.pc" "cairo-ps-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-ps%g;		s%@FEATURE_NAME@%PostScript surface backend%g;		s%@FEATURE_BASE@%$ps_BASE%g;		s%@FEATURE_REQUIRES@%$ps_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$ps_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$ps_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$ps_NONPKGCONFIG_CFLAGS%g;		" < "cairo-ps-uninstalled.pc.tmp" > "cairo-ps-uninstalled.pc" && rm -f "cairo-ps-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-ps-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-pdf.pc":F) 		mv "src/cairo-pdf.pc" "src/cairo-pdf.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-pdf%g;		s%@FEATURE_NAME@%PDF surface backend%g;		s%@FEATURE_BASE@%$pdf_BASE%g;		s%@FEATURE_REQUIRES@%$pdf_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$pdf_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$pdf_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$pdf_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-pdf.pc.tmp" > "src/cairo-pdf.pc" && rm -f "src/cairo-pdf.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-pdf.pc" "$LINENO" 5
	 ;;
    "cairo-pdf-uninstalled.pc":F) 		mv "cairo-pdf-uninstalled.pc" "cairo-pdf-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-pdf%g;		s%@FEATURE_NAME@%PDF surface backend%g;		s%@FEATURE_BASE@%$pdf_BASE%g;		s%@FEATURE_REQUIRES@%$pdf_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$pdf_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$pdf_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$pdf_NONPKGCONFIG_CFLAGS%g;		" < "cairo-pdf-uninstalled.pc.tmp" > "cairo-pdf-uninstalled.pc" && rm -f "cairo-pdf-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-pdf-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-svg.pc":F) 		mv "src/cairo-svg.pc" "src/cairo-svg.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-svg%g;		s%@FEATURE_NAME@%SVG surface backend%g;		s%@FEATURE_BASE@%$svg_BASE%g;		s%@FEATURE_REQUIRES@%$svg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$svg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$svg_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$svg_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-svg.pc.tmp" > "src/cairo-svg.pc" && rm -f "src/cairo-svg.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-svg.pc" "$LINENO" 5
	 ;;
    "cairo-svg-uninstalled.pc":F) 		mv "cairo-svg-uninstalled.pc" "cairo-svg-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-svg%g;		s%@FEATURE_NAME@%SVG surface backend%g;		s%@FEATURE_BASE@%$svg_BASE%g;		s%@FEATURE_REQUIRES@%$svg_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$svg_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$svg_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$svg_NONPKGCONFIG_CFLAGS%g;		" < "cairo-svg-uninstalled.pc.tmp" > "cairo-svg-uninstalled.pc" && rm -f "cairo-svg-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-svg-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-tee.pc":F) 		mv "src/cairo-tee.pc" "src/cairo-tee.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-tee%g;		s%@FEATURE_NAME@%tee surface backend%g;		s%@FEATURE_BASE@%$tee_BASE%g;		s%@FEATURE_REQUIRES@%$tee_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$tee_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$tee_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$tee_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-tee.pc.tmp" > "src/cairo-tee.pc" && rm -f "src/cairo-tee.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-tee.pc" "$LINENO" 5
	 ;;
    "cairo-tee-uninstalled.pc":F) 		mv "cairo-tee-uninstalled.pc" "cairo-tee-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-tee%g;		s%@FEATURE_NAME@%tee surface backend%g;		s%@FEATURE_BASE@%$tee_BASE%g;		s%@FEATURE_REQUIRES@%$tee_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$tee_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$tee_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$tee_NONPKGCONFIG_CFLAGS%g;		" < "cairo-tee-uninstalled.pc.tmp" > "cairo-tee-uninstalled.pc" && rm -f "cairo-tee-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-tee-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-xml.pc":F) 		mv "src/cairo-xml.pc" "src/cairo-xml.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xml%g;		s%@FEATURE_NAME@%xml surface backend%g;		s%@FEATURE_BASE@%$xml_BASE%g;		s%@FEATURE_REQUIRES@%$xml_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xml_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xml_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xml_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-xml.pc.tmp" > "src/cairo-xml.pc" && rm -f "src/cairo-xml.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-xml.pc" "$LINENO" 5
	 ;;
    "cairo-xml-uninstalled.pc":F) 		mv "cairo-xml-uninstalled.pc" "cairo-xml-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-xml%g;		s%@FEATURE_NAME@%xml surface backend%g;		s%@FEATURE_BASE@%$xml_BASE%g;		s%@FEATURE_REQUIRES@%$xml_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$xml_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$xml_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$xml_NONPKGCONFIG_CFLAGS%g;		" < "cairo-xml-uninstalled.pc.tmp" > "cairo-xml-uninstalled.pc" && rm -f "cairo-xml-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-xml-uninstalled.pc" "$LINENO" 5
	 ;;
    "src/cairo-gobject.pc":F) 		mv "src/cairo-gobject.pc" "src/cairo-gobject.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gobject%g;		s%@FEATURE_NAME@%gobject functions%g;		s%@FEATURE_BASE@%$gobject_BASE%g;		s%@FEATURE_REQUIRES@%$gobject_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gobject_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gobject_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gobject_NONPKGCONFIG_CFLAGS%g;		" < "src/cairo-gobject.pc.tmp" > "src/cairo-gobject.pc" && rm -f "src/cairo-gobject.pc.tmp" ||
		as_fn_error $? "failed to update src/cairo-gobject.pc" "$LINENO" 5
	 ;;
    "cairo-gobject-uninstalled.pc":F) 		mv "cairo-gobject-uninstalled.pc" "cairo-gobject-uninstalled.pc.tmp" &&
		$SED "		s%@FEATURE_PC@%cairo-gobject%g;		s%@FEATURE_NAME@%gobject functions%g;		s%@FEATURE_BASE@%$gobject_BASE%g;		s%@FEATURE_REQUIRES@%$gobject_REQUIRES%g;		s%@FEATURE_NONPKGCONFIG_LIBS@%$gobject_NONPKGCONFIG_LIBS%g;		s%@FEATURE_NONPKGCONFIG_EXTRA_LIBS@%$gobject_NONPKGCONFIG_EXTRA_LIBS%g;		s%@FEATURE_NONPKGCONFIG_CFLAGS@%$gobject_NONPKGCONFIG_CFLAGS%g;		" < "cairo-gobject-uninstalled.pc.tmp" > "cairo-gobject-uninstalled.pc" && rm -f "cairo-gobject-uninstalled.pc.tmp" ||
		as_fn_error $? "failed to update cairo-gobject-uninstalled.pc" "$LINENO" 5
	 ;;

  esac
done # for ac_tag


as_fn_exit 0
