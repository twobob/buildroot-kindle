# Makefile.in generated by automake 1.11.1 from Makefile.am.
# boilerplate/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Note: All source files are listed in Makefile.sources.

# Generated by configure.  Do not edit.

# Makefile.sources
#
# This file is pretty similar to $(top_srcdir)/src/Makefile.sources,
# but for boilerplate.  Unlike that file, there are no special headers.
#

pkgdatadir = $(datadir)/cairo
pkgincludedir = $(includedir)/cairo
pkglibdir = $(libdir)/cairo
pkglibexecdir = $(libexecdir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabi
DIST_COMMON = README $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.am.features $(srcdir)/Makefile.in \
	$(top_srcdir)/boilerplate/Makefile.sources \
	$(top_srcdir)/build/Makefile.am.common
EXTRA_PROGRAMS =
check_PROGRAMS = check-link$(EXEEXT)
#am__append_1 = $(cairo_boilerplate_xlib_headers)
#am__append_2 = $(cairo_boilerplate_xlib_private)
#am__append_3 = $(cairo_boilerplate_xlib_cxx_sources)
#am__append_4 = $(cairo_boilerplate_xlib_sources)
#am__append_5 = $(cairo_boilerplate_xlib_xrender_headers)
#am__append_6 = $(cairo_boilerplate_xlib_xrender_private)
#am__append_7 = $(cairo_boilerplate_xlib_xrender_cxx_sources)
#am__append_8 = $(cairo_boilerplate_xlib_xrender_sources)
#am__append_9 = $(cairo_boilerplate_xcb_headers)
#am__append_10 = $(cairo_boilerplate_xcb_private)
#am__append_11 = $(cairo_boilerplate_xcb_cxx_sources)
#am__append_12 = $(cairo_boilerplate_xcb_sources)
#am__append_13 = $(cairo_boilerplate_xlib_xcb_headers)
#am__append_14 = $(cairo_boilerplate_xlib_xcb_private)
#am__append_15 = $(cairo_boilerplate_xlib_xcb_cxx_sources)
#am__append_16 = $(cairo_boilerplate_xlib_xcb_sources)
#am__append_17 = $(cairo_boilerplate_xcb_shm_headers)
#am__append_18 = $(cairo_boilerplate_xcb_shm_private)
#am__append_19 = $(cairo_boilerplate_xcb_shm_cxx_sources)
#am__append_20 = $(cairo_boilerplate_xcb_shm_sources)
#am__append_21 = $(cairo_boilerplate_qt_headers)
#am__append_22 = $(cairo_boilerplate_qt_private)
#am__append_23 = $(cairo_boilerplate_qt_cxx_sources)
#am__append_24 = $(cairo_boilerplate_qt_sources)
#am__append_25 = $(cairo_boilerplate_quartz_headers)
#am__append_26 = $(cairo_boilerplate_quartz_private)
#am__append_27 = $(cairo_boilerplate_quartz_cxx_sources)
#am__append_28 = $(cairo_boilerplate_quartz_sources)
#am__append_29 = $(cairo_boilerplate_quartz_font_headers)
#am__append_30 = $(cairo_boilerplate_quartz_font_private)
#am__append_31 = $(cairo_boilerplate_quartz_font_cxx_sources)
#am__append_32 = $(cairo_boilerplate_quartz_font_sources)
#am__append_33 = $(cairo_boilerplate_quartz_image_headers)
#am__append_34 = $(cairo_boilerplate_quartz_image_private)
#am__append_35 = $(cairo_boilerplate_quartz_image_cxx_sources)
#am__append_36 = $(cairo_boilerplate_quartz_image_sources)
#am__append_37 = $(cairo_boilerplate_win32_headers)
#am__append_38 = $(cairo_boilerplate_win32_private)
#am__append_39 = $(cairo_boilerplate_win32_cxx_sources)
#am__append_40 = $(cairo_boilerplate_win32_sources)
#am__append_41 = $(cairo_boilerplate_win32_font_headers)
#am__append_42 = $(cairo_boilerplate_win32_font_private)
#am__append_43 = $(cairo_boilerplate_win32_font_cxx_sources)
#am__append_44 = $(cairo_boilerplate_win32_font_sources)
#am__append_45 = $(cairo_boilerplate_skia_headers)
#am__append_46 = $(cairo_boilerplate_skia_private)
#am__append_47 = $(cairo_boilerplate_skia_cxx_sources)
#am__append_48 = $(cairo_boilerplate_skia_sources)
#am__append_49 = $(cairo_boilerplate_os2_headers)
#am__append_50 = $(cairo_boilerplate_os2_private)
#am__append_51 = $(cairo_boilerplate_os2_cxx_sources)
#am__append_52 = $(cairo_boilerplate_os2_sources)
#am__append_53 = $(cairo_boilerplate_beos_headers)
#am__append_54 = $(cairo_boilerplate_beos_private)
#am__append_55 = $(cairo_boilerplate_beos_cxx_sources)
#am__append_56 = $(cairo_boilerplate_beos_sources)
#am__append_57 = $(cairo_boilerplate_drm_headers)
#am__append_58 = $(cairo_boilerplate_drm_private)
#am__append_59 = $(cairo_boilerplate_drm_cxx_sources)
#am__append_60 = $(cairo_boilerplate_drm_sources)
#am__append_61 = $(cairo_boilerplate_drm_xr_headers)
#am__append_62 = $(cairo_boilerplate_drm_xr_private)
#am__append_63 = $(cairo_boilerplate_drm_xr_cxx_sources)
#am__append_64 = $(cairo_boilerplate_drm_xr_sources)
#am__append_65 = $(cairo_boilerplate_gallium_headers)
#am__append_66 = $(cairo_boilerplate_gallium_private)
#am__append_67 = $(cairo_boilerplate_gallium_cxx_sources)
#am__append_68 = $(cairo_boilerplate_gallium_sources)
#am__append_69 = $(cairo_boilerplate_xcb_drm_headers)
#am__append_70 = $(cairo_boilerplate_xcb_drm_private)
#am__append_71 = $(cairo_boilerplate_xcb_drm_cxx_sources)
#am__append_72 = $(cairo_boilerplate_xcb_drm_sources)
#am__append_73 = $(cairo_boilerplate_png_headers)
#am__append_74 = $(cairo_boilerplate_png_private)
#am__append_75 = $(cairo_boilerplate_png_cxx_sources)
#am__append_76 = $(cairo_boilerplate_png_sources)
#am__append_77 = $(cairo_boilerplate_gl_headers)
#am__append_78 = $(cairo_boilerplate_gl_private)
#am__append_79 = $(cairo_boilerplate_gl_cxx_sources)
#am__append_80 = $(cairo_boilerplate_gl_sources)
#am__append_81 = $(cairo_boilerplate_directfb_headers)
#am__append_82 = $(cairo_boilerplate_directfb_private)
#am__append_83 = $(cairo_boilerplate_directfb_cxx_sources)
#am__append_84 = $(cairo_boilerplate_directfb_sources)
#am__append_85 = $(cairo_boilerplate_vg_headers)
#am__append_86 = $(cairo_boilerplate_vg_private)
#am__append_87 = $(cairo_boilerplate_vg_cxx_sources)
#am__append_88 = $(cairo_boilerplate_vg_sources)
#am__append_89 = $(cairo_boilerplate_egl_headers)
#am__append_90 = $(cairo_boilerplate_egl_private)
#am__append_91 = $(cairo_boilerplate_egl_cxx_sources)
#am__append_92 = $(cairo_boilerplate_egl_sources)
#am__append_93 = $(cairo_boilerplate_glx_headers)
#am__append_94 = $(cairo_boilerplate_glx_private)
#am__append_95 = $(cairo_boilerplate_glx_cxx_sources)
#am__append_96 = $(cairo_boilerplate_glx_sources)
#am__append_97 = $(cairo_boilerplate_wgl_headers)
#am__append_98 = $(cairo_boilerplate_wgl_private)
#am__append_99 = $(cairo_boilerplate_wgl_cxx_sources)
#am__append_100 = $(cairo_boilerplate_wgl_sources)
#am__append_101 = $(cairo_boilerplate_script_headers)
#am__append_102 = $(cairo_boilerplate_script_private)
#am__append_103 = $(cairo_boilerplate_script_cxx_sources)
#am__append_104 = $(cairo_boilerplate_script_sources)
am__append_105 = $(cairo_boilerplate_ft_headers)
am__append_106 = $(cairo_boilerplate_ft_private)
am__append_107 = $(cairo_boilerplate_ft_cxx_sources)
am__append_108 = $(cairo_boilerplate_ft_sources)
am__append_109 = $(cairo_boilerplate_fc_headers)
am__append_110 = $(cairo_boilerplate_fc_private)
am__append_111 = $(cairo_boilerplate_fc_cxx_sources)
am__append_112 = $(cairo_boilerplate_fc_sources)
#am__append_113 = $(cairo_boilerplate_ps_headers)
#am__append_114 = $(cairo_boilerplate_ps_private)
#am__append_115 = $(cairo_boilerplate_ps_cxx_sources)
#am__append_116 = $(cairo_boilerplate_ps_sources)
#am__append_117 = $(cairo_boilerplate_pdf_headers)
#am__append_118 = $(cairo_boilerplate_pdf_private)
#am__append_119 = $(cairo_boilerplate_pdf_cxx_sources)
#am__append_120 = $(cairo_boilerplate_pdf_sources)
#am__append_121 = $(cairo_boilerplate_svg_headers)
#am__append_122 = $(cairo_boilerplate_svg_private)
#am__append_123 = $(cairo_boilerplate_svg_cxx_sources)
#am__append_124 = $(cairo_boilerplate_svg_sources)
#am__append_125 = $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
#am__append_126 = $(cairo_boilerplate_test_surfaces_cxx_sources)
#am__append_127 = $(cairo_boilerplate_test_surfaces_sources)
#am__append_128 = $(cairo_boilerplate_tee_headers)
#am__append_129 = $(cairo_boilerplate_tee_private)
#am__append_130 = $(cairo_boilerplate_tee_cxx_sources)
#am__append_131 = $(cairo_boilerplate_tee_sources)
#am__append_132 = $(cairo_boilerplate_xml_headers)
#am__append_133 = $(cairo_boilerplate_xml_private)
#am__append_134 = $(cairo_boilerplate_xml_cxx_sources)
#am__append_135 = $(cairo_boilerplate_xml_sources)
am__append_136 = $(cairo_boilerplate_pthread_private) $(cairo_boilerplate_pthread_headers)
am__append_137 = $(cairo_boilerplate_pthread_cxx_sources)
am__append_138 = $(cairo_boilerplate_pthread_sources)
#am__append_139 = $(cairo_boilerplate_gobject_headers)
#am__append_140 = $(cairo_boilerplate_gobject_private)
#am__append_141 = $(cairo_boilerplate_gobject_cxx_sources)
#am__append_142 = $(cairo_boilerplate_gobject_sources)
#am__append_143 = $(cairo_boilerplate_trace_private) $(cairo_boilerplate_trace_headers)
#am__append_144 = $(cairo_boilerplate_trace_cxx_sources)
#am__append_145 = $(cairo_boilerplate_trace_sources)
#am__append_146 = $(cairo_boilerplate_interpreter_private) $(cairo_boilerplate_interpreter_headers)
#am__append_147 = $(cairo_boilerplate_interpreter_cxx_sources)
#am__append_148 = $(cairo_boilerplate_interpreter_sources)
#am__append_149 = $(cairo_boilerplate_symbol_lookup_private) $(cairo_boilerplate_symbol_lookup_headers)
#am__append_150 = $(cairo_boilerplate_symbol_lookup_cxx_sources)
#am__append_151 = $(cairo_boilerplate_symbol_lookup_sources)
am__append_152 = -ldl
#am__append_153 = -lwinspool
#am__append_154 = check-link$(EXEEXT)
subdir = boilerplate
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/aclocal.cairo.m4 \
	$(top_srcdir)/build/aclocal.compare.m4 \
	$(top_srcdir)/build/aclocal.enable.m4 \
	$(top_srcdir)/build/aclocal.float.m4 \
	$(top_srcdir)/build/aclocal.gtk-doc.m4 \
	$(top_srcdir)/build/aclocal.makefile.m4 \
	$(top_srcdir)/build/aclocal.pkg.m4 \
	$(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/cairo-version.h \
	$(top_srcdir)/build/configure.ac.version \
	$(top_srcdir)/build/configure.ac.tools \
	$(top_srcdir)/build/configure.ac.features \
	$(top_srcdir)/build/configure.ac.warnings \
	$(top_srcdir)/build/configure.ac.system \
	$(top_srcdir)/build/configure.ac.analysis \
	$(top_srcdir)/build/configure.ac.noversion \
	$(top_srcdir)/build/configure.ac.pthread \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__DEPENDENCIES_1 = libcairoboilerplate_cxx.la
am__DEPENDENCIES_2 =
am__libcairoboilerplate_la_SOURCES_DIST = cairo-boilerplate-getopt.h \
	cairo-boilerplate-scaled-font.h cairo-boilerplate-system.h \
	cairo-boilerplate.h cairo-boilerplate-xlib.h \
	cairo-boilerplate-private.h cairo-boilerplate-getopt.c \
	cairo-boilerplate-system.c cairo-boilerplate.c \
	cairo-boilerplate-xlib.c cairo-boilerplate-xcb.c \
	cairo-boilerplate-quartz.c cairo-boilerplate-win32.c \
	cairo-boilerplate-win32-printing.c cairo-boilerplate-skia.c \
	cairo-boilerplate-drm.c cairo-boilerplate-directfb.c \
	cairo-boilerplate-vg.c cairo-boilerplate-egl.c \
	cairo-boilerplate-glx.c cairo-boilerplate-wgl.c \
	cairo-boilerplate-script.c cairo-boilerplate-ps.c \
	cairo-boilerplate-pdf.c cairo-boilerplate-svg.c \
	cairo-boilerplate-test-surfaces.c \
	cairo-boilerplate-constructors.c
am__objects_1 =
#am__objects_2 = $(am__objects_1)
am__objects_3 = $(am__objects_1) $(am__objects_2) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1)
am__objects_4 = $(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1)
am__objects_5 = cairo-boilerplate-getopt.lo \
	cairo-boilerplate-system.lo cairo-boilerplate.lo
am__objects_6 = cairo-boilerplate-xlib.lo
#am__objects_7 = $(am__objects_6)
am__objects_8 = cairo-boilerplate-xcb.lo
#am__objects_9 = $(am__objects_8)
am__objects_10 = cairo-boilerplate-quartz.lo
#am__objects_11 = $(am__objects_10)
am__objects_12 = cairo-boilerplate-win32.lo \
	cairo-boilerplate-win32-printing.lo
#am__objects_13 = $(am__objects_12)
am__objects_14 = cairo-boilerplate-skia.lo
#am__objects_15 = $(am__objects_14)
am__objects_16 = cairo-boilerplate-drm.lo
#am__objects_17 = $(am__objects_16)
am__objects_18 = cairo-boilerplate-directfb.lo
#am__objects_19 = $(am__objects_18)
am__objects_20 = cairo-boilerplate-vg.lo
#am__objects_21 = $(am__objects_20)
am__objects_22 = cairo-boilerplate-egl.lo
#am__objects_23 = $(am__objects_22)
am__objects_24 = cairo-boilerplate-glx.lo
#am__objects_25 = $(am__objects_24)
am__objects_26 = cairo-boilerplate-wgl.lo
#am__objects_27 = $(am__objects_26)
am__objects_28 = cairo-boilerplate-script.lo
#am__objects_29 = $(am__objects_28)
am__objects_30 = cairo-boilerplate-ps.lo
#am__objects_31 = $(am__objects_30)
am__objects_32 = cairo-boilerplate-pdf.lo
#am__objects_33 = $(am__objects_32)
am__objects_34 = cairo-boilerplate-svg.lo
#am__objects_35 = $(am__objects_34)
am__objects_36 = cairo-boilerplate-test-surfaces.lo
#am__objects_37 = $(am__objects_36)
am__objects_38 = $(am__objects_5) $(am__objects_7) $(am__objects_1) \
	$(am__objects_9) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_11) $(am__objects_1) \
	$(am__objects_1) $(am__objects_13) $(am__objects_1) \
	$(am__objects_15) $(am__objects_1) $(am__objects_1) \
	$(am__objects_17) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_19) $(am__objects_21) $(am__objects_23) \
	$(am__objects_25) $(am__objects_27) $(am__objects_29) \
	$(am__objects_1) $(am__objects_1) $(am__objects_31) \
	$(am__objects_33) $(am__objects_35) $(am__objects_37) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1)
am_libcairoboilerplate_la_OBJECTS = $(am__objects_3) $(am__objects_4) \
	$(am__objects_38) cairo-boilerplate-constructors.lo
libcairoboilerplate_la_OBJECTS = $(am_libcairoboilerplate_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libcairoboilerplate_cxx_la_DEPENDENCIES =  \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
am__libcairoboilerplate_cxx_la_SOURCES_DIST =  \
	cairo-boilerplate-qt.cpp cairo-boilerplate-beos.cpp
am__objects_39 = libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo
#am__objects_40 = $(am__objects_39)
am__objects_41 = libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo
#am__objects_42 = $(am__objects_41)
am__objects_43 = $(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_40) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_42) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1)
am_libcairoboilerplate_cxx_la_OBJECTS = $(am__objects_43)
libcairoboilerplate_cxx_la_OBJECTS =  \
	$(am_libcairoboilerplate_cxx_la_OBJECTS)
libcairoboilerplate_cxx_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcairoboilerplate_cxx_la_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libcairoboilerplate_cxx_la_rpath =
check_link_SOURCES = check-link.c
check_link_OBJECTS = check-link.$(OBJEXT)
check_link_DEPENDENCIES = libcairoboilerplate.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libcairoboilerplate_la_SOURCES) \
	$(libcairoboilerplate_cxx_la_SOURCES) check-link.c
DIST_SOURCES = $(am__libcairoboilerplate_la_SOURCES_DIST) \
	$(am__libcairoboilerplate_cxx_la_SOURCES_DIST) check-link.c
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar
AS = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-as
AUTOCONF = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run automake-1.11
AWK = gawk
BFD_LIBS = 
CAIROBOILERPLATE_LIBS = 
CAIROPERF_LIBS = -lrt
CAIRO_CFLAGS = -D_REENTRANT   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include     -Wall -Wextra -Wold-style-definition -Wdeclaration-after-statement -Wmissing-declarations -Werror-implicit-function-declaration -Wnested-externs -Wpointer-arith -Wwrite-strings -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wbad-function-cast -Wvolatile-register-var -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2       
CAIRO_LDFLAGS = 
CAIRO_LIBS = -lpthread   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype          
CAIRO_LIBTOOL_VERSION_INFO = 11002:2:11000
CAIRO_NONPKGCONFIG_CFLAGS =       
CAIRO_NONPKGCONFIG_LIBS =       
CAIRO_RELEASE_STATUS = release
CAIRO_REQUIRES =    pixman-1 >= 0.18.4 fontconfig >= 2.2.95 freetype2 >= 9.7.3  
CAIRO_TEST_MODE = 
CAIRO_TEST_UNDEFINED_LDFLAGS = -Wl,--allow-shlib-undefined
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 2
CAIRO_VERSION_MINOR = 10
CAIRO_VERSION_SONUM = 2
CC = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 
CPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CXX = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++
CXXCPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FIND = /usr/bin/find
FONTCONFIG_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  
FONTCONFIG_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig  
FREETYPE_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype  
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GREP = /bin/grep
GS = 
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  -lm
LIBSPECTRE_CFLAGS = 
LIBSPECTRE_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
MAKEINFO = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-nm
NMEDIT = 
OBJDUMP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.10.2
PACKAGE_TARNAME = cairo
PACKAGE_URL = 
PACKAGE_VERSION = 1.10.2
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHLIB_EXT = so
SHM_LIBS = -lrt
SHTOOL = 
STRIP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VERSION = 1.10.2
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/boilerplate
abs_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/boilerplate
abs_top_builddir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2
abs_top_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = 
directfb_LIBS = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
drm_CFLAGS = 
drm_LIBS = 
drm_xr_CFLAGS = 
drm_xr_LIBS = 
dvidir = ${docdir}
egl_CFLAGS = 
egl_LIBS = 
exec_prefix = /usr
gallium_DIR = 
gl_CFLAGS = 
gl_LIBS = 
glib_CFLAGS = 
glib_LIBS = 
gtk_CFLAGS = 
gtk_LIBS = 
host = arm-buildroot-linux-gnueabi
host_alias = arm-buildroot-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mesa_DIR = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pixman_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1  
pixman_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1  
png_CFLAGS = 
png_LIBS = 
png_REQUIRES = 
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pthread_CFLAGS = -D_REENTRANT
pthread_LIBS = -lpthread
qt_CFLAGS = 
qt_LIBS = 
real_pthread_CFLAGS = -D_REENTRANT
real_pthread_LIBS = -lpthread
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shm_LIBS = -lrt
skia_DIR = 
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabi
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
xcb_CFLAGS = 
xcb_LIBS = 
xcb_drm_CFLAGS = 
xcb_drm_LIBS = 
xcb_shm_CFLAGS = 
xcb_shm_LIBS = 
xlib_CFLAGS = 
xlib_LIBS = 
xlib_xcb_CFLAGS = 
xlib_xcb_LIBS = 
xlib_xrender_CFLAGS = 
xlib_xrender_LIBS = 
BUILT_SOURCES = cairo-boilerplate-constructors.c
CLEANFILES = *.i *.s *.gch $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) \
	$(check_PROGRAMS) $(BUILT_SOURCES)
DISTCLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = Makefile.win32 Makefile.win32.features $(BUILT_SOURCES) \
	make-cairo-boilerplate-constructors.sh
EXTRA_LTLIBRARIES = libcairoboilerplate.la $(cxx_boilerplate_lib)
MAINTAINERCLEANFILES = Makefile.in
TESTS = $(am__append_154)
cairo_boilerplate_headers = \
	cairo-boilerplate-getopt.h \
	cairo-boilerplate-scaled-font.h \
	cairo-boilerplate-system.h \
	cairo-boilerplate.h \
	$(NULL)

cairo_boilerplate_sources = \
	cairo-boilerplate-getopt.c \
	cairo-boilerplate-system.c \
	cairo-boilerplate.c \
	$(NULL)

cairo_boilerplate_private = \
	cairo-boilerplate-private.h \
	$(NULL)

cairo_boilerplate_beos_cxx_sources = cairo-boilerplate-beos.cpp
cairo_boilerplate_directfb_sources = cairo-boilerplate-directfb.c
cairo_boilerplate_drm_sources = cairo-boilerplate-drm.c
cairo_boilerplate_glx_sources = cairo-boilerplate-glx.c
cairo_boilerplate_wgl_sources = cairo-boilerplate-wgl.c
cairo_boilerplate_egl_sources = cairo-boilerplate-egl.c
cairo_boilerplate_pdf_sources = cairo-boilerplate-pdf.c
cairo_boilerplate_ps_sources = cairo-boilerplate-ps.c
cairo_boilerplate_qt_cxx_sources = cairo-boilerplate-qt.cpp
cairo_boilerplate_quartz_sources = cairo-boilerplate-quartz.c
cairo_boilerplate_script_sources = cairo-boilerplate-script.c
cairo_boilerplate_skia_sources = cairo-boilerplate-skia.c
cairo_boilerplate_svg_sources = cairo-boilerplate-svg.c
cairo_boilerplate_test_surfaces_sources = cairo-boilerplate-test-surfaces.c
cairo_boilerplate_win32_sources = cairo-boilerplate-win32.c cairo-boilerplate-win32-printing.c
cairo_boilerplate_xcb_sources = cairo-boilerplate-xcb.c
cairo_boilerplate_xlib_headers = cairo-boilerplate-xlib.h
cairo_boilerplate_xlib_sources = cairo-boilerplate-xlib.c
cairo_boilerplate_vg_sources = cairo-boilerplate-vg.c
supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(cairo_boilerplate_xlib_headers) \
	$(cairo_boilerplate_xlib_xrender_headers) \
	$(cairo_boilerplate_xcb_shm_headers) \
	$(cairo_boilerplate_quartz_headers) \
	$(cairo_boilerplate_quartz_font_headers) \
	$(cairo_boilerplate_win32_headers) \
	$(cairo_boilerplate_win32_font_headers) \
	$(cairo_boilerplate_png_headers) \
	$(cairo_boilerplate_egl_headers) \
	$(cairo_boilerplate_glx_headers) \
	$(cairo_boilerplate_wgl_headers) \
	$(cairo_boilerplate_ft_headers) \
	$(cairo_boilerplate_fc_headers) \
	$(cairo_boilerplate_ps_headers) \
	$(cairo_boilerplate_pdf_headers) \
	$(cairo_boilerplate_svg_headers) \
	$(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_recording_headers) \
	$(cairo_boilerplate_user_headers) \
	$(cairo_boilerplate_gobject_headers)
unsupported_cairo_boilerplate_headers =  \
	$(cairo_boilerplate_xcb_headers) \
	$(cairo_boilerplate_xlib_xcb_headers) \
	$(cairo_boilerplate_qt_headers) \
	$(cairo_boilerplate_quartz_image_headers) \
	$(cairo_boilerplate_skia_headers) \
	$(cairo_boilerplate_os2_headers) \
	$(cairo_boilerplate_beos_headers) \
	$(cairo_boilerplate_drm_headers) \
	$(cairo_boilerplate_drm_xr_headers) \
	$(cairo_boilerplate_gallium_headers) \
	$(cairo_boilerplate_xcb_drm_headers) \
	$(cairo_boilerplate_gl_headers) \
	$(cairo_boilerplate_directfb_headers) \
	$(cairo_boilerplate_vg_headers) \
	$(cairo_boilerplate_script_headers) \
	$(cairo_boilerplate_tee_headers) \
	$(cairo_boilerplate_xml_headers)
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(cairo_boilerplate_xlib_headers) \
	$(cairo_boilerplate_xlib_xrender_headers) \
	$(cairo_boilerplate_xcb_headers) \
	$(cairo_boilerplate_xlib_xcb_headers) \
	$(cairo_boilerplate_xcb_shm_headers) \
	$(cairo_boilerplate_qt_headers) \
	$(cairo_boilerplate_quartz_headers) \
	$(cairo_boilerplate_quartz_font_headers) \
	$(cairo_boilerplate_quartz_image_headers) \
	$(cairo_boilerplate_win32_headers) \
	$(cairo_boilerplate_win32_font_headers) \
	$(cairo_boilerplate_skia_headers) \
	$(cairo_boilerplate_os2_headers) \
	$(cairo_boilerplate_beos_headers) \
	$(cairo_boilerplate_drm_headers) \
	$(cairo_boilerplate_drm_xr_headers) \
	$(cairo_boilerplate_gallium_headers) \
	$(cairo_boilerplate_xcb_drm_headers) \
	$(cairo_boilerplate_png_headers) \
	$(cairo_boilerplate_gl_headers) \
	$(cairo_boilerplate_directfb_headers) \
	$(cairo_boilerplate_vg_headers) \
	$(cairo_boilerplate_egl_headers) \
	$(cairo_boilerplate_glx_headers) \
	$(cairo_boilerplate_wgl_headers) \
	$(cairo_boilerplate_script_headers) \
	$(cairo_boilerplate_ft_headers) \
	$(cairo_boilerplate_fc_headers) \
	$(cairo_boilerplate_ps_headers) \
	$(cairo_boilerplate_pdf_headers) \
	$(cairo_boilerplate_svg_headers) \
	$(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_recording_headers) \
	$(cairo_boilerplate_tee_headers) \
	$(cairo_boilerplate_xml_headers) \
	$(cairo_boilerplate_user_headers) \
	$(cairo_boilerplate_gobject_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private) \
	$(cairo_boilerplate_xlib_private) \
	$(cairo_boilerplate_xlib_xrender_private) \
	$(cairo_boilerplate_xcb_private) \
	$(cairo_boilerplate_xlib_xcb_private) \
	$(cairo_boilerplate_xcb_shm_private) \
	$(cairo_boilerplate_qt_private) \
	$(cairo_boilerplate_quartz_private) \
	$(cairo_boilerplate_quartz_font_private) \
	$(cairo_boilerplate_quartz_image_private) \
	$(cairo_boilerplate_win32_private) \
	$(cairo_boilerplate_win32_font_private) \
	$(cairo_boilerplate_skia_private) \
	$(cairo_boilerplate_os2_private) \
	$(cairo_boilerplate_beos_private) \
	$(cairo_boilerplate_drm_private) \
	$(cairo_boilerplate_drm_xr_private) \
	$(cairo_boilerplate_gallium_private) \
	$(cairo_boilerplate_xcb_drm_private) \
	$(cairo_boilerplate_png_private) \
	$(cairo_boilerplate_gl_private) \
	$(cairo_boilerplate_directfb_private) \
	$(cairo_boilerplate_vg_private) \
	$(cairo_boilerplate_egl_private) \
	$(cairo_boilerplate_glx_private) \
	$(cairo_boilerplate_wgl_private) \
	$(cairo_boilerplate_script_private) \
	$(cairo_boilerplate_ft_private) \
	$(cairo_boilerplate_fc_private) \
	$(cairo_boilerplate_ps_private) \
	$(cairo_boilerplate_pdf_private) \
	$(cairo_boilerplate_svg_private) \
	$(cairo_boilerplate_test_surfaces_private) \
	$(cairo_boilerplate_test_surfaces_headers) \
	$(cairo_boilerplate_image_private) \
	$(cairo_boilerplate_recording_private) \
	$(cairo_boilerplate_tee_private) \
	$(cairo_boilerplate_xml_private) \
	$(cairo_boilerplate_user_private) \
	$(cairo_boilerplate_pthread_private) \
	$(cairo_boilerplate_pthread_headers) \
	$(cairo_boilerplate_gobject_private) \
	$(cairo_boilerplate_trace_private) \
	$(cairo_boilerplate_trace_headers) \
	$(cairo_boilerplate_interpreter_private) \
	$(cairo_boilerplate_interpreter_headers) \
	$(cairo_boilerplate_symbol_lookup_private) \
	$(cairo_boilerplate_symbol_lookup_headers)
all_cairo_boilerplate_cxx_sources = $(cairo_boilerplate_cxx_sources) \
	$(cairo_boilerplate_xlib_cxx_sources) \
	$(cairo_boilerplate_xlib_xrender_cxx_sources) \
	$(cairo_boilerplate_xcb_cxx_sources) \
	$(cairo_boilerplate_xlib_xcb_cxx_sources) \
	$(cairo_boilerplate_xcb_shm_cxx_sources) \
	$(cairo_boilerplate_qt_cxx_sources) \
	$(cairo_boilerplate_quartz_cxx_sources) \
	$(cairo_boilerplate_quartz_font_cxx_sources) \
	$(cairo_boilerplate_quartz_image_cxx_sources) \
	$(cairo_boilerplate_win32_cxx_sources) \
	$(cairo_boilerplate_win32_font_cxx_sources) \
	$(cairo_boilerplate_skia_cxx_sources) \
	$(cairo_boilerplate_os2_cxx_sources) \
	$(cairo_boilerplate_beos_cxx_sources) \
	$(cairo_boilerplate_drm_cxx_sources) \
	$(cairo_boilerplate_drm_xr_cxx_sources) \
	$(cairo_boilerplate_gallium_cxx_sources) \
	$(cairo_boilerplate_xcb_drm_cxx_sources) \
	$(cairo_boilerplate_png_cxx_sources) \
	$(cairo_boilerplate_gl_cxx_sources) \
	$(cairo_boilerplate_directfb_cxx_sources) \
	$(cairo_boilerplate_vg_cxx_sources) \
	$(cairo_boilerplate_egl_cxx_sources) \
	$(cairo_boilerplate_glx_cxx_sources) \
	$(cairo_boilerplate_wgl_cxx_sources) \
	$(cairo_boilerplate_script_cxx_sources) \
	$(cairo_boilerplate_ft_cxx_sources) \
	$(cairo_boilerplate_fc_cxx_sources) \
	$(cairo_boilerplate_ps_cxx_sources) \
	$(cairo_boilerplate_pdf_cxx_sources) \
	$(cairo_boilerplate_svg_cxx_sources) \
	$(cairo_boilerplate_test_surfaces_cxx_sources) \
	$(cairo_boilerplate_image_cxx_sources) \
	$(cairo_boilerplate_recording_cxx_sources) \
	$(cairo_boilerplate_tee_cxx_sources) \
	$(cairo_boilerplate_xml_cxx_sources) \
	$(cairo_boilerplate_user_cxx_sources) \
	$(cairo_boilerplate_pthread_cxx_sources) \
	$(cairo_boilerplate_gobject_cxx_sources) \
	$(cairo_boilerplate_trace_cxx_sources) \
	$(cairo_boilerplate_interpreter_cxx_sources) \
	$(cairo_boilerplate_symbol_lookup_cxx_sources)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources) \
	$(cairo_boilerplate_xlib_sources) \
	$(cairo_boilerplate_xlib_xrender_sources) \
	$(cairo_boilerplate_xcb_sources) \
	$(cairo_boilerplate_xlib_xcb_sources) \
	$(cairo_boilerplate_xcb_shm_sources) \
	$(cairo_boilerplate_qt_sources) \
	$(cairo_boilerplate_quartz_sources) \
	$(cairo_boilerplate_quartz_font_sources) \
	$(cairo_boilerplate_quartz_image_sources) \
	$(cairo_boilerplate_win32_sources) \
	$(cairo_boilerplate_win32_font_sources) \
	$(cairo_boilerplate_skia_sources) \
	$(cairo_boilerplate_os2_sources) \
	$(cairo_boilerplate_beos_sources) \
	$(cairo_boilerplate_drm_sources) \
	$(cairo_boilerplate_drm_xr_sources) \
	$(cairo_boilerplate_gallium_sources) \
	$(cairo_boilerplate_xcb_drm_sources) \
	$(cairo_boilerplate_png_sources) \
	$(cairo_boilerplate_gl_sources) \
	$(cairo_boilerplate_directfb_sources) \
	$(cairo_boilerplate_vg_sources) \
	$(cairo_boilerplate_egl_sources) \
	$(cairo_boilerplate_glx_sources) \
	$(cairo_boilerplate_wgl_sources) \
	$(cairo_boilerplate_script_sources) \
	$(cairo_boilerplate_ft_sources) \
	$(cairo_boilerplate_fc_sources) \
	$(cairo_boilerplate_ps_sources) \
	$(cairo_boilerplate_pdf_sources) \
	$(cairo_boilerplate_svg_sources) \
	$(cairo_boilerplate_test_surfaces_sources) \
	$(cairo_boilerplate_image_sources) \
	$(cairo_boilerplate_recording_sources) \
	$(cairo_boilerplate_tee_sources) \
	$(cairo_boilerplate_xml_sources) \
	$(cairo_boilerplate_user_sources) \
	$(cairo_boilerplate_pthread_sources) \
	$(cairo_boilerplate_gobject_sources) \
	$(cairo_boilerplate_trace_sources) \
	$(cairo_boilerplate_interpreter_sources) \
	$(cairo_boilerplate_symbol_lookup_sources)
enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(am__append_1) $(am__append_5) $(am__append_9) \
	$(am__append_13) $(am__append_17) $(am__append_21) \
	$(am__append_25) $(am__append_29) $(am__append_33) \
	$(am__append_37) $(am__append_41) $(am__append_45) \
	$(am__append_49) $(am__append_53) $(am__append_57) \
	$(am__append_61) $(am__append_65) $(am__append_69) \
	$(am__append_73) $(am__append_77) $(am__append_81) \
	$(am__append_85) $(am__append_89) $(am__append_93) \
	$(am__append_97) $(am__append_101) $(am__append_105) \
	$(am__append_109) $(am__append_113) $(am__append_117) \
	$(am__append_121) $(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_recording_headers) $(am__append_128) \
	$(am__append_132) $(cairo_boilerplate_user_headers) \
	$(am__append_139)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private) \
	$(am__append_2) $(am__append_6) $(am__append_10) \
	$(am__append_14) $(am__append_18) $(am__append_22) \
	$(am__append_26) $(am__append_30) $(am__append_34) \
	$(am__append_38) $(am__append_42) $(am__append_46) \
	$(am__append_50) $(am__append_54) $(am__append_58) \
	$(am__append_62) $(am__append_66) $(am__append_70) \
	$(am__append_74) $(am__append_78) $(am__append_82) \
	$(am__append_86) $(am__append_90) $(am__append_94) \
	$(am__append_98) $(am__append_102) $(am__append_106) \
	$(am__append_110) $(am__append_114) $(am__append_118) \
	$(am__append_122) $(am__append_125) \
	$(cairo_boilerplate_image_private) \
	$(cairo_boilerplate_recording_private) $(am__append_129) \
	$(am__append_133) $(cairo_boilerplate_user_private) \
	$(am__append_136) $(am__append_140) $(am__append_143) \
	$(am__append_146) $(am__append_149)
enabled_cairo_boilerplate_cxx_sources =  \
	$(cairo_boilerplate_cxx_sources) $(am__append_3) \
	$(am__append_7) $(am__append_11) $(am__append_15) \
	$(am__append_19) $(am__append_23) $(am__append_27) \
	$(am__append_31) $(am__append_35) $(am__append_39) \
	$(am__append_43) $(am__append_47) $(am__append_51) \
	$(am__append_55) $(am__append_59) $(am__append_63) \
	$(am__append_67) $(am__append_71) $(am__append_75) \
	$(am__append_79) $(am__append_83) $(am__append_87) \
	$(am__append_91) $(am__append_95) $(am__append_99) \
	$(am__append_103) $(am__append_107) $(am__append_111) \
	$(am__append_115) $(am__append_119) $(am__append_123) \
	$(am__append_126) $(cairo_boilerplate_image_cxx_sources) \
	$(cairo_boilerplate_recording_cxx_sources) $(am__append_130) \
	$(am__append_134) $(cairo_boilerplate_user_cxx_sources) \
	$(am__append_137) $(am__append_141) $(am__append_144) \
	$(am__append_147) $(am__append_150)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources) \
	$(am__append_4) $(am__append_8) $(am__append_12) \
	$(am__append_16) $(am__append_20) $(am__append_24) \
	$(am__append_28) $(am__append_32) $(am__append_36) \
	$(am__append_40) $(am__append_44) $(am__append_48) \
	$(am__append_52) $(am__append_56) $(am__append_60) \
	$(am__append_64) $(am__append_68) $(am__append_72) \
	$(am__append_76) $(am__append_80) $(am__append_84) \
	$(am__append_88) $(am__append_92) $(am__append_96) \
	$(am__append_100) $(am__append_104) $(am__append_108) \
	$(am__append_112) $(am__append_116) $(am__append_120) \
	$(am__append_124) $(am__append_127) \
	$(cairo_boilerplate_image_sources) \
	$(cairo_boilerplate_recording_sources) $(am__append_131) \
	$(am__append_135) $(cairo_boilerplate_user_sources) \
	$(am__append_138) $(am__append_142) $(am__append_145) \
	$(am__append_148) $(am__append_151)
#MAINTAINERCLEANFILES += $(srcdir)/Makefile.win32.features
AM_CPPFLAGS = \
	-I$(srcdir) \
	-I$(top_builddir)/src \
	-I$(top_srcdir)/src \
	$(CAIRO_CFLAGS) \
	$(NULL)

AM_LDFLAGS = $(CAIRO_LDFLAGS)
cxx_boilerplate_lib = 
#cxx_boilerplate_lib = libcairoboilerplate_cxx.la
libcairoboilerplate_la_SOURCES = \
	$(enabled_cairo_boilerplate_headers) \
	$(enabled_cairo_boilerplate_private) \
	$(enabled_cairo_boilerplate_sources) \
	cairo-boilerplate-constructors.c \
	$(NULL)

libcairoboilerplate_cxx_la_SOURCES = \
	$(enabled_cairo_boilerplate_cxx_sources) \
	$(NULL)

libcairoboilerplate_la_LIBADD = $(top_builddir)/src/libcairo.la \
	$(cxx_boilerplate_lib) $(CAIRO_LIBS) $(CAIROBOILERPLATE_LIBS) \
	$(NULL) $(am__append_152) $(am__append_153)
libcairoboilerplate_cxx_la_LIBADD = $(top_builddir)/src/libcairo.la \
	$(CAIRO_LIBS) \
	$(CAIROBOILERPLATE_LIBS) \
	$(NULL)

libcairoboilerplate_la_DEPENDENCIES = \
	$(cxx_boilerplate_lib) \
	$(NULL)


# BeOS system headers trigger this warning
#libcairoboilerplate_cxx_la_CXXFLAGS = -Wno-multichar
check_link_LDADD = libcairoboilerplate.la
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/Makefile.am.common $(srcdir)/Makefile.am.features $(top_srcdir)/boilerplate/Makefile.sources $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu boilerplate/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu boilerplate/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libcairoboilerplate.la: $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_LIBADD) $(LIBS)
libcairoboilerplate_cxx.la: $(libcairoboilerplate_cxx_la_OBJECTS) $(libcairoboilerplate_cxx_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libcairoboilerplate_cxx_la_LINK) $(am_libcairoboilerplate_cxx_la_rpath) $(libcairoboilerplate_cxx_la_OBJECTS) $(libcairoboilerplate_cxx_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
check-link$(EXEEXT): $(check_link_OBJECTS) $(check_link_DEPENDENCIES) 
	@rm -f check-link$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_link_OBJECTS) $(check_link_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cairo-boilerplate-constructors.Plo
include ./$(DEPDIR)/cairo-boilerplate-directfb.Plo
include ./$(DEPDIR)/cairo-boilerplate-drm.Plo
include ./$(DEPDIR)/cairo-boilerplate-egl.Plo
include ./$(DEPDIR)/cairo-boilerplate-getopt.Plo
include ./$(DEPDIR)/cairo-boilerplate-glx.Plo
include ./$(DEPDIR)/cairo-boilerplate-pdf.Plo
include ./$(DEPDIR)/cairo-boilerplate-ps.Plo
include ./$(DEPDIR)/cairo-boilerplate-quartz.Plo
include ./$(DEPDIR)/cairo-boilerplate-script.Plo
include ./$(DEPDIR)/cairo-boilerplate-skia.Plo
include ./$(DEPDIR)/cairo-boilerplate-svg.Plo
include ./$(DEPDIR)/cairo-boilerplate-system.Plo
include ./$(DEPDIR)/cairo-boilerplate-test-surfaces.Plo
include ./$(DEPDIR)/cairo-boilerplate-vg.Plo
include ./$(DEPDIR)/cairo-boilerplate-wgl.Plo
include ./$(DEPDIR)/cairo-boilerplate-win32-printing.Plo
include ./$(DEPDIR)/cairo-boilerplate-win32.Plo
include ./$(DEPDIR)/cairo-boilerplate-xcb.Plo
include ./$(DEPDIR)/cairo-boilerplate-xlib.Plo
include ./$(DEPDIR)/cairo-boilerplate.Plo
include ./$(DEPDIR)/check-link.Po
include ./$(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-beos.Plo
include ./$(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-qt.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo: cairo-boilerplate-qt.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_cxx_la_CXXFLAGS) $(CXXFLAGS) -MT libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo -MD -MP -MF $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-qt.Tpo -c -o libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo `test -f 'cairo-boilerplate-qt.cpp' || echo '$(srcdir)/'`cairo-boilerplate-qt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-qt.Tpo $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-qt.Plo
#	$(AM_V_CXX) \
#	source='cairo-boilerplate-qt.cpp' object='libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_cxx_la_CXXFLAGS) $(CXXFLAGS) -c -o libcairoboilerplate_cxx_la-cairo-boilerplate-qt.lo `test -f 'cairo-boilerplate-qt.cpp' || echo '$(srcdir)/'`cairo-boilerplate-qt.cpp

libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo: cairo-boilerplate-beos.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_cxx_la_CXXFLAGS) $(CXXFLAGS) -MT libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo -MD -MP -MF $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-beos.Tpo -c -o libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo `test -f 'cairo-boilerplate-beos.cpp' || echo '$(srcdir)/'`cairo-boilerplate-beos.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-beos.Tpo $(DEPDIR)/libcairoboilerplate_cxx_la-cairo-boilerplate-beos.Plo
#	$(AM_V_CXX) \
#	source='cairo-boilerplate-beos.cpp' object='libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcairoboilerplate_cxx_la_CXXFLAGS) $(CXXFLAGS) -c -o libcairoboilerplate_cxx_la-cairo-boilerplate-beos.lo `test -f 'cairo-boilerplate-beos.cpp' || echo '$(srcdir)/'`cairo-boilerplate-beos.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


cairo-boilerplate-constructors.c: Makefile $(enabled_cairo_boilerplate_sources) $(enabled_cairo_boilerplate_cxx_sources) make-cairo-boilerplate-constructors.sh
	(cd $(srcdir) && sh ./make-cairo-boilerplate-constructors.sh $(enabled_cairo_boilerplate_sources) $(enabled_cairo_boilerplate_cxx_sources)) > $@

test: check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
