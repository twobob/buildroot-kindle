# Makefile.in generated by automake 1.11.1 from Makefile.am.
# perf/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/cairo
pkgincludedir = $(includedir)/cairo
pkglibdir = $(libdir)/cairo
pkglibexecdir = $(libexecdir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabi
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/build/Makefile.am.common COPYING
EXTRA_PROGRAMS = cairo-perf-micro$(EXEEXT) cairo-perf-trace$(EXEEXT) \
	cairo-perf-diff-files$(EXEEXT) cairo-perf-print$(EXEEXT) \
	cairo-perf-chart$(EXEEXT) cairo-perf-compare-backends$(EXEEXT) \
	cairo-perf-graph-files$(EXEEXT)
TESTS =
check_PROGRAMS =
#am__append_1 = cairo-perf-win32.c
#am__append_2 = cairo-perf-os2.c
am__append_3 = cairo-perf-posix.c
#am__append_4 = cairo-perf-win32.c
#am__append_5 = cairo-perf-os2.c
am__append_6 = cairo-perf-posix.c
subdir = perf
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/aclocal.cairo.m4 \
	$(top_srcdir)/build/aclocal.compare.m4 \
	$(top_srcdir)/build/aclocal.enable.m4 \
	$(top_srcdir)/build/aclocal.float.m4 \
	$(top_srcdir)/build/aclocal.gtk-doc.m4 \
	$(top_srcdir)/build/aclocal.makefile.m4 \
	$(top_srcdir)/build/aclocal.pkg.m4 \
	$(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/cairo-version.h \
	$(top_srcdir)/build/configure.ac.version \
	$(top_srcdir)/build/configure.ac.tools \
	$(top_srcdir)/build/configure.ac.features \
	$(top_srcdir)/build/configure.ac.warnings \
	$(top_srcdir)/build/configure.ac.system \
	$(top_srcdir)/build/configure.ac.analysis \
	$(top_srcdir)/build/configure.ac.noversion \
	$(top_srcdir)/build/configure.ac.pthread \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libcairoperf_la_LIBADD =
am_libcairoperf_la_OBJECTS = cairo-perf-report.lo cairo-stats.lo
libcairoperf_la_OBJECTS = $(am_libcairoperf_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_cairo_perf_chart_OBJECTS = cairo-perf-chart.$(OBJEXT)
cairo_perf_chart_OBJECTS = $(am_cairo_perf_chart_OBJECTS)
cairo_perf_chart_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
cairo_perf_chart_DEPENDENCIES = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
am_cairo_perf_compare_backends_OBJECTS =  \
	cairo-perf-compare-backends.$(OBJEXT)
cairo_perf_compare_backends_OBJECTS =  \
	$(am_cairo_perf_compare_backends_OBJECTS)
cairo_perf_compare_backends_LDADD = $(LDADD)
cairo_perf_compare_backends_DEPENDENCIES = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
am_cairo_perf_diff_files_OBJECTS = cairo-perf-diff-files.$(OBJEXT)
cairo_perf_diff_files_OBJECTS = $(am_cairo_perf_diff_files_OBJECTS)
cairo_perf_diff_files_LDADD = $(LDADD)
cairo_perf_diff_files_DEPENDENCIES = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
am_cairo_perf_graph_files_OBJECTS =  \
	cairo_perf_graph_files-cairo-perf-graph-files.$(OBJEXT) \
	cairo_perf_graph_files-cairo-perf-graph-widget.$(OBJEXT)
cairo_perf_graph_files_OBJECTS = $(am_cairo_perf_graph_files_OBJECTS)
am__DEPENDENCIES_2 = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
cairo_perf_graph_files_DEPENDENCIES = $(am__DEPENDENCIES_2)
cairo_perf_graph_files_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(cairo_perf_graph_files_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__cairo_perf_micro_SOURCES_DIST = cairo-perf-micro.c cairo-perf.h \
	micro/cairo-perf-cover.c micro/box-outline.c \
	micro/composite-checker.c micro/fill.c micro/long-lines.c \
	micro/mosaic.c micro/mosaic.h micro/paint.c \
	micro/paint-with-alpha.c micro/mask.c \
	micro/pattern_create_radial.c micro/rectangles.c \
	micro/rounded-rectangles.c micro/stroke.c \
	micro/subimage_copy.c micro/tessellate.c micro/text.c \
	micro/glyphs.c micro/twin.c micro/unaligned-clip.c \
	micro/world-map.c micro/world-map.h micro/zrusin.c \
	micro/zrusin-another.h micro/long-dashed-lines.c \
	micro/dragon.c micro/pythagoras-tree.c micro/intersections.c \
	micro/spiral.c cairo-perf-win32.c cairo-perf-os2.c \
	cairo-perf-posix.c
#am__objects_1 =  \
#	cairo-perf-win32.$(OBJEXT)
#am__objects_2 = cairo-perf-os2.$(OBJEXT)
am__objects_3 = cairo-perf-posix.$(OBJEXT)
am_cairo_perf_micro_OBJECTS = cairo-perf-micro.$(OBJEXT) \
	cairo-perf-cover.$(OBJEXT) box-outline.$(OBJEXT) \
	composite-checker.$(OBJEXT) fill.$(OBJEXT) \
	long-lines.$(OBJEXT) mosaic.$(OBJEXT) paint.$(OBJEXT) \
	paint-with-alpha.$(OBJEXT) mask.$(OBJEXT) \
	pattern_create_radial.$(OBJEXT) rectangles.$(OBJEXT) \
	rounded-rectangles.$(OBJEXT) stroke.$(OBJEXT) \
	subimage_copy.$(OBJEXT) tessellate.$(OBJEXT) text.$(OBJEXT) \
	glyphs.$(OBJEXT) twin.$(OBJEXT) unaligned-clip.$(OBJEXT) \
	world-map.$(OBJEXT) zrusin.$(OBJEXT) \
	long-dashed-lines.$(OBJEXT) dragon.$(OBJEXT) \
	pythagoras-tree.$(OBJEXT) intersections.$(OBJEXT) \
	spiral.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
cairo_perf_micro_OBJECTS = $(am_cairo_perf_micro_OBJECTS)
am_cairo_perf_print_OBJECTS = cairo-perf-print.$(OBJEXT)
cairo_perf_print_OBJECTS = $(am_cairo_perf_print_OBJECTS)
cairo_perf_print_LDADD = $(LDADD)
cairo_perf_print_DEPENDENCIES = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la $(am__DEPENDENCIES_1)
am__cairo_perf_trace_SOURCES_DIST = cairo-perf-trace.c \
	../src/cairo-hash.c cairo-perf-win32.c cairo-perf-os2.c \
	cairo-perf-posix.c
am_cairo_perf_trace_OBJECTS = cairo-perf-trace.$(OBJEXT) \
	cairo-hash.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
cairo_perf_trace_OBJECTS = $(am_cairo_perf_trace_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libcairoperf_la_SOURCES) $(cairo_perf_chart_SOURCES) \
	$(cairo_perf_compare_backends_SOURCES) \
	$(cairo_perf_diff_files_SOURCES) \
	$(cairo_perf_graph_files_SOURCES) $(cairo_perf_micro_SOURCES) \
	$(cairo_perf_print_SOURCES) $(cairo_perf_trace_SOURCES)
DIST_SOURCES = $(libcairoperf_la_SOURCES) $(cairo_perf_chart_SOURCES) \
	$(cairo_perf_compare_backends_SOURCES) \
	$(cairo_perf_diff_files_SOURCES) \
	$(cairo_perf_graph_files_SOURCES) \
	$(am__cairo_perf_micro_SOURCES_DIST) \
	$(cairo_perf_print_SOURCES) \
	$(am__cairo_perf_trace_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar
AS = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-as
AUTOCONF = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run automake-1.11
AWK = gawk
BFD_LIBS = 
CAIROBOILERPLATE_LIBS = 
CAIROPERF_LIBS = -lrt
CAIRO_CFLAGS = -D_REENTRANT   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include   -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include     -Wall -Wextra -Wold-style-definition -Wdeclaration-after-statement -Wmissing-declarations -Werror-implicit-function-declaration -Wnested-externs -Wpointer-arith -Wwrite-strings -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wbad-function-cast -Wvolatile-register-var -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2       
CAIRO_LDFLAGS = 
CAIRO_LIBS = -lpthread   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig   -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype          
CAIRO_LIBTOOL_VERSION_INFO = 11002:2:11000
CAIRO_NONPKGCONFIG_CFLAGS =       
CAIRO_NONPKGCONFIG_LIBS =       
CAIRO_RELEASE_STATUS = release
CAIRO_REQUIRES =    pixman-1 >= 0.18.4 fontconfig >= 2.2.95 freetype2 >= 9.7.3  
CAIRO_TEST_MODE = 
CAIRO_TEST_UNDEFINED_LDFLAGS = -Wl,--allow-shlib-undefined
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 2
CAIRO_VERSION_MINOR = 10
CAIRO_VERSION_SONUM = 2
CC = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 
CPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CXX = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++
CXXCPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FIND = /usr/bin/find
FONTCONFIG_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  
FONTCONFIG_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfontconfig  
FREETYPE_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/freetype2 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lfreetype  
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GREP = /bin/grep
GS = 
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  -lm
LIBSPECTRE_CFLAGS = 
LIBSPECTRE_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
MAKEINFO = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-nm
NMEDIT = 
OBJDUMP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.10.2
PACKAGE_TARNAME = cairo
PACKAGE_URL = 
PACKAGE_VERSION = 1.10.2
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHLIB_EXT = so
SHM_LIBS = -lrt
SHTOOL = 
STRIP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VERSION = 1.10.2
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/perf
abs_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/perf
abs_top_builddir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2
abs_top_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = 
directfb_LIBS = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
drm_CFLAGS = 
drm_LIBS = 
drm_xr_CFLAGS = 
drm_xr_LIBS = 
dvidir = ${docdir}
egl_CFLAGS = 
egl_LIBS = 
exec_prefix = /usr
gallium_DIR = 
gl_CFLAGS = 
gl_LIBS = 
glib_CFLAGS = 
glib_LIBS = 
gtk_CFLAGS = 
gtk_LIBS = 
host = arm-buildroot-linux-gnueabi
host_alias = arm-buildroot-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/cairo-1.10.2/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mesa_DIR = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pixman_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/pixman-1  
pixman_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lpixman-1  
png_CFLAGS = 
png_LIBS = 
png_REQUIRES = 
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pthread_CFLAGS = -D_REENTRANT
pthread_LIBS = -lpthread
qt_CFLAGS = 
qt_LIBS = 
real_pthread_CFLAGS = -D_REENTRANT
real_pthread_LIBS = -lpthread
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shm_LIBS = -lrt
skia_DIR = 
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabi
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
xcb_CFLAGS = 
xcb_LIBS = 
xcb_drm_CFLAGS = 
xcb_drm_LIBS = 
xcb_shm_CFLAGS = 
xcb_shm_LIBS = 
xlib_CFLAGS = 
xlib_LIBS = 
xlib_xcb_CFLAGS = 
xlib_xcb_LIBS = 
xlib_xrender_CFLAGS = 
xlib_xrender_LIBS = 
BUILT_SOURCES = 
CLEANFILES = *.i *.s *.gch $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) \
	$(check_PROGRAMS) valgrind-log callgrind.out.* index.html
DISTCLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = cairo-perf-diff COPYING Makefile.win32
EXTRA_LTLIBRARIES = libcairoperf.la
MAINTAINERCLEANFILES = Makefile.in
AM_CPPFLAGS = \
	-I$(srcdir)				\
	-I$(top_srcdir)/boilerplate		\
	-I$(top_srcdir)/src			\
	-I$(top_srcdir)/util/cairo-script	\
	-I$(top_builddir)/src			\
	$(CAIRO_CFLAGS)

AM_LDFLAGS = $(CAIRO_LDFLAGS)
LDADD = libcairoperf.la \
	$(top_builddir)/boilerplate/libcairoboilerplate.la \
	$(top_builddir)/src/libcairo.la \
	$(CAIROPERF_LIBS)

cairo_perf_micro_SOURCES = cairo-perf-micro.c cairo-perf.h \
	micro/cairo-perf-cover.c micro/box-outline.c \
	micro/composite-checker.c micro/fill.c micro/long-lines.c \
	micro/mosaic.c micro/mosaic.h micro/paint.c \
	micro/paint-with-alpha.c micro/mask.c \
	micro/pattern_create_radial.c micro/rectangles.c \
	micro/rounded-rectangles.c micro/stroke.c \
	micro/subimage_copy.c micro/tessellate.c micro/text.c \
	micro/glyphs.c micro/twin.c micro/unaligned-clip.c \
	micro/world-map.c micro/world-map.h micro/zrusin.c \
	micro/zrusin-another.h micro/long-dashed-lines.c \
	micro/dragon.c micro/pythagoras-tree.c micro/intersections.c \
	micro/spiral.c $(am__append_1) $(am__append_2) $(am__append_3)
cairo_perf_micro_LDADD = $(LDADD)
cairo_perf_micro_DEPENDENCIES = \
        $(top_builddir)/boilerplate/libcairoboilerplate.la	\
	$(top_builddir)/src/libcairo.la \
	libcairoperf.la

libcairoperf_la_SOURCES = \
	cairo-perf-report.c	\
	cairo-stats.c		\
	cairo-stats.h

cairo_perf_trace_SOURCES = cairo-perf-trace.c ../src/cairo-hash.c \
	$(am__append_4) $(am__append_5) $(am__append_6)
cairo_perf_trace_LDADD = \
	$(top_builddir)/util/cairo-script/libcairo-script-interpreter.la \
	$(LDADD)

cairo_perf_trace_DEPENDENCIES = \
	$(top_builddir)/util/cairo-script/libcairo-script-interpreter.la \
        $(top_builddir)/boilerplate/libcairoboilerplate.la	\
	$(top_builddir)/src/libcairo.la \
	libcairoperf.la

cairo_perf_diff_files_SOURCES = \
	cairo-perf-diff-files.c

cairo_perf_print_SOURCES = \
	cairo-perf-print.c

cairo_perf_chart_SOURCES = \
	cairo-perf-chart.c

cairo_perf_compare_backends_SOURCES = \
	cairo-perf-compare-backends.c

cairo_perf_graph_files_SOURCES = \
	cairo-perf-graph.h \
	cairo-perf-graph-files.c \
	cairo-perf-graph-widget.c

cairo_perf_graph_files_CFLAGS = 
cairo_perf_graph_files_LDADD =  $(LDADD)

# Do a funny transition of CAIRO_TEST_TARGET through TARGETS such that
# one can limit tested targets both through CAIRO_TEST_TARGET env var
# and TARGETS make var on the command line.  Same for the rest.
TARGETS = $(CAIRO_TEST_TARGET)
TARGETS_EXCLUDE = $(CAIRO_TEST_TARGET_EXCLUDE)
ITERS = $(CAIRO_PERF_ITERATIONS)
CAIRO_PERF_ENVIRONMENT = CAIRO_PERF_ITERATIONS="$(ITERS)" CAIRO_TEST_TARGET="$(TARGETS)" CAIRO_TEST_TARGET_EXCLUDE="$(TARGETS_EXCLUDE)"
EXTRA_VALGRIND_FLAGS = $(CAIRO_EXTRA_VALGRIND_FLAGS)
VALGRIND_MEMCHECK_FLAGS = \
	--tool=memcheck \
	--suppressions=$(top_srcdir)/test/.valgrind-suppressions \
	--leak-check=yes --show-reachable=yes

VALGRIND_CALLGRIND_FLAGS = \
	--tool=callgrind

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu perf/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu perf/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libcairoperf.la: $(libcairoperf_la_OBJECTS) $(libcairoperf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libcairoperf_la_OBJECTS) $(libcairoperf_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
cairo-perf-chart$(EXEEXT): $(cairo_perf_chart_OBJECTS) $(cairo_perf_chart_DEPENDENCIES) 
	@rm -f cairo-perf-chart$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_chart_OBJECTS) $(cairo_perf_chart_LDADD) $(LIBS)
cairo-perf-compare-backends$(EXEEXT): $(cairo_perf_compare_backends_OBJECTS) $(cairo_perf_compare_backends_DEPENDENCIES) 
	@rm -f cairo-perf-compare-backends$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_compare_backends_OBJECTS) $(cairo_perf_compare_backends_LDADD) $(LIBS)
cairo-perf-diff-files$(EXEEXT): $(cairo_perf_diff_files_OBJECTS) $(cairo_perf_diff_files_DEPENDENCIES) 
	@rm -f cairo-perf-diff-files$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_diff_files_OBJECTS) $(cairo_perf_diff_files_LDADD) $(LIBS)
cairo-perf-graph-files$(EXEEXT): $(cairo_perf_graph_files_OBJECTS) $(cairo_perf_graph_files_DEPENDENCIES) 
	@rm -f cairo-perf-graph-files$(EXEEXT)
	$(AM_V_CCLD)$(cairo_perf_graph_files_LINK) $(cairo_perf_graph_files_OBJECTS) $(cairo_perf_graph_files_LDADD) $(LIBS)
cairo-perf-micro$(EXEEXT): $(cairo_perf_micro_OBJECTS) $(cairo_perf_micro_DEPENDENCIES) 
	@rm -f cairo-perf-micro$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_micro_OBJECTS) $(cairo_perf_micro_LDADD) $(LIBS)
cairo-perf-print$(EXEEXT): $(cairo_perf_print_OBJECTS) $(cairo_perf_print_DEPENDENCIES) 
	@rm -f cairo-perf-print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_print_OBJECTS) $(cairo_perf_print_LDADD) $(LIBS)
cairo-perf-trace$(EXEEXT): $(cairo_perf_trace_OBJECTS) $(cairo_perf_trace_DEPENDENCIES) 
	@rm -f cairo-perf-trace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cairo_perf_trace_OBJECTS) $(cairo_perf_trace_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/box-outline.Po
include ./$(DEPDIR)/cairo-hash.Po
include ./$(DEPDIR)/cairo-perf-chart.Po
include ./$(DEPDIR)/cairo-perf-compare-backends.Po
include ./$(DEPDIR)/cairo-perf-cover.Po
include ./$(DEPDIR)/cairo-perf-diff-files.Po
include ./$(DEPDIR)/cairo-perf-micro.Po
include ./$(DEPDIR)/cairo-perf-os2.Po
include ./$(DEPDIR)/cairo-perf-posix.Po
include ./$(DEPDIR)/cairo-perf-print.Po
include ./$(DEPDIR)/cairo-perf-report.Plo
include ./$(DEPDIR)/cairo-perf-trace.Po
include ./$(DEPDIR)/cairo-perf-win32.Po
include ./$(DEPDIR)/cairo-stats.Plo
include ./$(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Po
include ./$(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Po
include ./$(DEPDIR)/composite-checker.Po
include ./$(DEPDIR)/dragon.Po
include ./$(DEPDIR)/fill.Po
include ./$(DEPDIR)/glyphs.Po
include ./$(DEPDIR)/intersections.Po
include ./$(DEPDIR)/long-dashed-lines.Po
include ./$(DEPDIR)/long-lines.Po
include ./$(DEPDIR)/mask.Po
include ./$(DEPDIR)/mosaic.Po
include ./$(DEPDIR)/paint-with-alpha.Po
include ./$(DEPDIR)/paint.Po
include ./$(DEPDIR)/pattern_create_radial.Po
include ./$(DEPDIR)/pythagoras-tree.Po
include ./$(DEPDIR)/rectangles.Po
include ./$(DEPDIR)/rounded-rectangles.Po
include ./$(DEPDIR)/spiral.Po
include ./$(DEPDIR)/stroke.Po
include ./$(DEPDIR)/subimage_copy.Po
include ./$(DEPDIR)/tessellate.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/twin.Po
include ./$(DEPDIR)/unaligned-clip.Po
include ./$(DEPDIR)/world-map.Po
include ./$(DEPDIR)/zrusin.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

cairo_perf_graph_files-cairo-perf-graph-files.o: cairo-perf-graph-files.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -MT cairo_perf_graph_files-cairo-perf-graph-files.o -MD -MP -MF $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Tpo -c -o cairo_perf_graph_files-cairo-perf-graph-files.o `test -f 'cairo-perf-graph-files.c' || echo '$(srcdir)/'`cairo-perf-graph-files.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Tpo $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Po
#	$(AM_V_CC) \
#	source='cairo-perf-graph-files.c' object='cairo_perf_graph_files-cairo-perf-graph-files.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -c -o cairo_perf_graph_files-cairo-perf-graph-files.o `test -f 'cairo-perf-graph-files.c' || echo '$(srcdir)/'`cairo-perf-graph-files.c

cairo_perf_graph_files-cairo-perf-graph-files.obj: cairo-perf-graph-files.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -MT cairo_perf_graph_files-cairo-perf-graph-files.obj -MD -MP -MF $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Tpo -c -o cairo_perf_graph_files-cairo-perf-graph-files.obj `if test -f 'cairo-perf-graph-files.c'; then $(CYGPATH_W) 'cairo-perf-graph-files.c'; else $(CYGPATH_W) '$(srcdir)/cairo-perf-graph-files.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Tpo $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-files.Po
#	$(AM_V_CC) \
#	source='cairo-perf-graph-files.c' object='cairo_perf_graph_files-cairo-perf-graph-files.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -c -o cairo_perf_graph_files-cairo-perf-graph-files.obj `if test -f 'cairo-perf-graph-files.c'; then $(CYGPATH_W) 'cairo-perf-graph-files.c'; else $(CYGPATH_W) '$(srcdir)/cairo-perf-graph-files.c'; fi`

cairo_perf_graph_files-cairo-perf-graph-widget.o: cairo-perf-graph-widget.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -MT cairo_perf_graph_files-cairo-perf-graph-widget.o -MD -MP -MF $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Tpo -c -o cairo_perf_graph_files-cairo-perf-graph-widget.o `test -f 'cairo-perf-graph-widget.c' || echo '$(srcdir)/'`cairo-perf-graph-widget.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Tpo $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Po
#	$(AM_V_CC) \
#	source='cairo-perf-graph-widget.c' object='cairo_perf_graph_files-cairo-perf-graph-widget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -c -o cairo_perf_graph_files-cairo-perf-graph-widget.o `test -f 'cairo-perf-graph-widget.c' || echo '$(srcdir)/'`cairo-perf-graph-widget.c

cairo_perf_graph_files-cairo-perf-graph-widget.obj: cairo-perf-graph-widget.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -MT cairo_perf_graph_files-cairo-perf-graph-widget.obj -MD -MP -MF $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Tpo -c -o cairo_perf_graph_files-cairo-perf-graph-widget.obj `if test -f 'cairo-perf-graph-widget.c'; then $(CYGPATH_W) 'cairo-perf-graph-widget.c'; else $(CYGPATH_W) '$(srcdir)/cairo-perf-graph-widget.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Tpo $(DEPDIR)/cairo_perf_graph_files-cairo-perf-graph-widget.Po
#	$(AM_V_CC) \
#	source='cairo-perf-graph-widget.c' object='cairo_perf_graph_files-cairo-perf-graph-widget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cairo_perf_graph_files_CFLAGS) $(CFLAGS) -c -o cairo_perf_graph_files-cairo-perf-graph-widget.obj `if test -f 'cairo-perf-graph-widget.c'; then $(CYGPATH_W) 'cairo-perf-graph-widget.c'; else $(CYGPATH_W) '$(srcdir)/cairo-perf-graph-widget.c'; fi`

cairo-perf-cover.o: micro/cairo-perf-cover.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cairo-perf-cover.o -MD -MP -MF $(DEPDIR)/cairo-perf-cover.Tpo -c -o cairo-perf-cover.o `test -f 'micro/cairo-perf-cover.c' || echo '$(srcdir)/'`micro/cairo-perf-cover.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo-perf-cover.Tpo $(DEPDIR)/cairo-perf-cover.Po
#	$(AM_V_CC) \
#	source='micro/cairo-perf-cover.c' object='cairo-perf-cover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cairo-perf-cover.o `test -f 'micro/cairo-perf-cover.c' || echo '$(srcdir)/'`micro/cairo-perf-cover.c

cairo-perf-cover.obj: micro/cairo-perf-cover.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cairo-perf-cover.obj -MD -MP -MF $(DEPDIR)/cairo-perf-cover.Tpo -c -o cairo-perf-cover.obj `if test -f 'micro/cairo-perf-cover.c'; then $(CYGPATH_W) 'micro/cairo-perf-cover.c'; else $(CYGPATH_W) '$(srcdir)/micro/cairo-perf-cover.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo-perf-cover.Tpo $(DEPDIR)/cairo-perf-cover.Po
#	$(AM_V_CC) \
#	source='micro/cairo-perf-cover.c' object='cairo-perf-cover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cairo-perf-cover.obj `if test -f 'micro/cairo-perf-cover.c'; then $(CYGPATH_W) 'micro/cairo-perf-cover.c'; else $(CYGPATH_W) '$(srcdir)/micro/cairo-perf-cover.c'; fi`

box-outline.o: micro/box-outline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT box-outline.o -MD -MP -MF $(DEPDIR)/box-outline.Tpo -c -o box-outline.o `test -f 'micro/box-outline.c' || echo '$(srcdir)/'`micro/box-outline.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/box-outline.Tpo $(DEPDIR)/box-outline.Po
#	$(AM_V_CC) \
#	source='micro/box-outline.c' object='box-outline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o box-outline.o `test -f 'micro/box-outline.c' || echo '$(srcdir)/'`micro/box-outline.c

box-outline.obj: micro/box-outline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT box-outline.obj -MD -MP -MF $(DEPDIR)/box-outline.Tpo -c -o box-outline.obj `if test -f 'micro/box-outline.c'; then $(CYGPATH_W) 'micro/box-outline.c'; else $(CYGPATH_W) '$(srcdir)/micro/box-outline.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/box-outline.Tpo $(DEPDIR)/box-outline.Po
#	$(AM_V_CC) \
#	source='micro/box-outline.c' object='box-outline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o box-outline.obj `if test -f 'micro/box-outline.c'; then $(CYGPATH_W) 'micro/box-outline.c'; else $(CYGPATH_W) '$(srcdir)/micro/box-outline.c'; fi`

composite-checker.o: micro/composite-checker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT composite-checker.o -MD -MP -MF $(DEPDIR)/composite-checker.Tpo -c -o composite-checker.o `test -f 'micro/composite-checker.c' || echo '$(srcdir)/'`micro/composite-checker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/composite-checker.Tpo $(DEPDIR)/composite-checker.Po
#	$(AM_V_CC) \
#	source='micro/composite-checker.c' object='composite-checker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o composite-checker.o `test -f 'micro/composite-checker.c' || echo '$(srcdir)/'`micro/composite-checker.c

composite-checker.obj: micro/composite-checker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT composite-checker.obj -MD -MP -MF $(DEPDIR)/composite-checker.Tpo -c -o composite-checker.obj `if test -f 'micro/composite-checker.c'; then $(CYGPATH_W) 'micro/composite-checker.c'; else $(CYGPATH_W) '$(srcdir)/micro/composite-checker.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/composite-checker.Tpo $(DEPDIR)/composite-checker.Po
#	$(AM_V_CC) \
#	source='micro/composite-checker.c' object='composite-checker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o composite-checker.obj `if test -f 'micro/composite-checker.c'; then $(CYGPATH_W) 'micro/composite-checker.c'; else $(CYGPATH_W) '$(srcdir)/micro/composite-checker.c'; fi`

fill.o: micro/fill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fill.o -MD -MP -MF $(DEPDIR)/fill.Tpo -c -o fill.o `test -f 'micro/fill.c' || echo '$(srcdir)/'`micro/fill.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fill.Tpo $(DEPDIR)/fill.Po
#	$(AM_V_CC) \
#	source='micro/fill.c' object='fill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fill.o `test -f 'micro/fill.c' || echo '$(srcdir)/'`micro/fill.c

fill.obj: micro/fill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fill.obj -MD -MP -MF $(DEPDIR)/fill.Tpo -c -o fill.obj `if test -f 'micro/fill.c'; then $(CYGPATH_W) 'micro/fill.c'; else $(CYGPATH_W) '$(srcdir)/micro/fill.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fill.Tpo $(DEPDIR)/fill.Po
#	$(AM_V_CC) \
#	source='micro/fill.c' object='fill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fill.obj `if test -f 'micro/fill.c'; then $(CYGPATH_W) 'micro/fill.c'; else $(CYGPATH_W) '$(srcdir)/micro/fill.c'; fi`

long-lines.o: micro/long-lines.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT long-lines.o -MD -MP -MF $(DEPDIR)/long-lines.Tpo -c -o long-lines.o `test -f 'micro/long-lines.c' || echo '$(srcdir)/'`micro/long-lines.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/long-lines.Tpo $(DEPDIR)/long-lines.Po
#	$(AM_V_CC) \
#	source='micro/long-lines.c' object='long-lines.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o long-lines.o `test -f 'micro/long-lines.c' || echo '$(srcdir)/'`micro/long-lines.c

long-lines.obj: micro/long-lines.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT long-lines.obj -MD -MP -MF $(DEPDIR)/long-lines.Tpo -c -o long-lines.obj `if test -f 'micro/long-lines.c'; then $(CYGPATH_W) 'micro/long-lines.c'; else $(CYGPATH_W) '$(srcdir)/micro/long-lines.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/long-lines.Tpo $(DEPDIR)/long-lines.Po
#	$(AM_V_CC) \
#	source='micro/long-lines.c' object='long-lines.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o long-lines.obj `if test -f 'micro/long-lines.c'; then $(CYGPATH_W) 'micro/long-lines.c'; else $(CYGPATH_W) '$(srcdir)/micro/long-lines.c'; fi`

mosaic.o: micro/mosaic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mosaic.o -MD -MP -MF $(DEPDIR)/mosaic.Tpo -c -o mosaic.o `test -f 'micro/mosaic.c' || echo '$(srcdir)/'`micro/mosaic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mosaic.Tpo $(DEPDIR)/mosaic.Po
#	$(AM_V_CC) \
#	source='micro/mosaic.c' object='mosaic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mosaic.o `test -f 'micro/mosaic.c' || echo '$(srcdir)/'`micro/mosaic.c

mosaic.obj: micro/mosaic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mosaic.obj -MD -MP -MF $(DEPDIR)/mosaic.Tpo -c -o mosaic.obj `if test -f 'micro/mosaic.c'; then $(CYGPATH_W) 'micro/mosaic.c'; else $(CYGPATH_W) '$(srcdir)/micro/mosaic.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mosaic.Tpo $(DEPDIR)/mosaic.Po
#	$(AM_V_CC) \
#	source='micro/mosaic.c' object='mosaic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mosaic.obj `if test -f 'micro/mosaic.c'; then $(CYGPATH_W) 'micro/mosaic.c'; else $(CYGPATH_W) '$(srcdir)/micro/mosaic.c'; fi`

paint.o: micro/paint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT paint.o -MD -MP -MF $(DEPDIR)/paint.Tpo -c -o paint.o `test -f 'micro/paint.c' || echo '$(srcdir)/'`micro/paint.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/paint.Tpo $(DEPDIR)/paint.Po
#	$(AM_V_CC) \
#	source='micro/paint.c' object='paint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o paint.o `test -f 'micro/paint.c' || echo '$(srcdir)/'`micro/paint.c

paint.obj: micro/paint.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT paint.obj -MD -MP -MF $(DEPDIR)/paint.Tpo -c -o paint.obj `if test -f 'micro/paint.c'; then $(CYGPATH_W) 'micro/paint.c'; else $(CYGPATH_W) '$(srcdir)/micro/paint.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/paint.Tpo $(DEPDIR)/paint.Po
#	$(AM_V_CC) \
#	source='micro/paint.c' object='paint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o paint.obj `if test -f 'micro/paint.c'; then $(CYGPATH_W) 'micro/paint.c'; else $(CYGPATH_W) '$(srcdir)/micro/paint.c'; fi`

paint-with-alpha.o: micro/paint-with-alpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT paint-with-alpha.o -MD -MP -MF $(DEPDIR)/paint-with-alpha.Tpo -c -o paint-with-alpha.o `test -f 'micro/paint-with-alpha.c' || echo '$(srcdir)/'`micro/paint-with-alpha.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/paint-with-alpha.Tpo $(DEPDIR)/paint-with-alpha.Po
#	$(AM_V_CC) \
#	source='micro/paint-with-alpha.c' object='paint-with-alpha.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o paint-with-alpha.o `test -f 'micro/paint-with-alpha.c' || echo '$(srcdir)/'`micro/paint-with-alpha.c

paint-with-alpha.obj: micro/paint-with-alpha.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT paint-with-alpha.obj -MD -MP -MF $(DEPDIR)/paint-with-alpha.Tpo -c -o paint-with-alpha.obj `if test -f 'micro/paint-with-alpha.c'; then $(CYGPATH_W) 'micro/paint-with-alpha.c'; else $(CYGPATH_W) '$(srcdir)/micro/paint-with-alpha.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/paint-with-alpha.Tpo $(DEPDIR)/paint-with-alpha.Po
#	$(AM_V_CC) \
#	source='micro/paint-with-alpha.c' object='paint-with-alpha.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o paint-with-alpha.obj `if test -f 'micro/paint-with-alpha.c'; then $(CYGPATH_W) 'micro/paint-with-alpha.c'; else $(CYGPATH_W) '$(srcdir)/micro/paint-with-alpha.c'; fi`

mask.o: micro/mask.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mask.o -MD -MP -MF $(DEPDIR)/mask.Tpo -c -o mask.o `test -f 'micro/mask.c' || echo '$(srcdir)/'`micro/mask.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mask.Tpo $(DEPDIR)/mask.Po
#	$(AM_V_CC) \
#	source='micro/mask.c' object='mask.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mask.o `test -f 'micro/mask.c' || echo '$(srcdir)/'`micro/mask.c

mask.obj: micro/mask.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mask.obj -MD -MP -MF $(DEPDIR)/mask.Tpo -c -o mask.obj `if test -f 'micro/mask.c'; then $(CYGPATH_W) 'micro/mask.c'; else $(CYGPATH_W) '$(srcdir)/micro/mask.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mask.Tpo $(DEPDIR)/mask.Po
#	$(AM_V_CC) \
#	source='micro/mask.c' object='mask.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mask.obj `if test -f 'micro/mask.c'; then $(CYGPATH_W) 'micro/mask.c'; else $(CYGPATH_W) '$(srcdir)/micro/mask.c'; fi`

pattern_create_radial.o: micro/pattern_create_radial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pattern_create_radial.o -MD -MP -MF $(DEPDIR)/pattern_create_radial.Tpo -c -o pattern_create_radial.o `test -f 'micro/pattern_create_radial.c' || echo '$(srcdir)/'`micro/pattern_create_radial.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pattern_create_radial.Tpo $(DEPDIR)/pattern_create_radial.Po
#	$(AM_V_CC) \
#	source='micro/pattern_create_radial.c' object='pattern_create_radial.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pattern_create_radial.o `test -f 'micro/pattern_create_radial.c' || echo '$(srcdir)/'`micro/pattern_create_radial.c

pattern_create_radial.obj: micro/pattern_create_radial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pattern_create_radial.obj -MD -MP -MF $(DEPDIR)/pattern_create_radial.Tpo -c -o pattern_create_radial.obj `if test -f 'micro/pattern_create_radial.c'; then $(CYGPATH_W) 'micro/pattern_create_radial.c'; else $(CYGPATH_W) '$(srcdir)/micro/pattern_create_radial.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pattern_create_radial.Tpo $(DEPDIR)/pattern_create_radial.Po
#	$(AM_V_CC) \
#	source='micro/pattern_create_radial.c' object='pattern_create_radial.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pattern_create_radial.obj `if test -f 'micro/pattern_create_radial.c'; then $(CYGPATH_W) 'micro/pattern_create_radial.c'; else $(CYGPATH_W) '$(srcdir)/micro/pattern_create_radial.c'; fi`

rectangles.o: micro/rectangles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rectangles.o -MD -MP -MF $(DEPDIR)/rectangles.Tpo -c -o rectangles.o `test -f 'micro/rectangles.c' || echo '$(srcdir)/'`micro/rectangles.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rectangles.Tpo $(DEPDIR)/rectangles.Po
#	$(AM_V_CC) \
#	source='micro/rectangles.c' object='rectangles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rectangles.o `test -f 'micro/rectangles.c' || echo '$(srcdir)/'`micro/rectangles.c

rectangles.obj: micro/rectangles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rectangles.obj -MD -MP -MF $(DEPDIR)/rectangles.Tpo -c -o rectangles.obj `if test -f 'micro/rectangles.c'; then $(CYGPATH_W) 'micro/rectangles.c'; else $(CYGPATH_W) '$(srcdir)/micro/rectangles.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rectangles.Tpo $(DEPDIR)/rectangles.Po
#	$(AM_V_CC) \
#	source='micro/rectangles.c' object='rectangles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rectangles.obj `if test -f 'micro/rectangles.c'; then $(CYGPATH_W) 'micro/rectangles.c'; else $(CYGPATH_W) '$(srcdir)/micro/rectangles.c'; fi`

rounded-rectangles.o: micro/rounded-rectangles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rounded-rectangles.o -MD -MP -MF $(DEPDIR)/rounded-rectangles.Tpo -c -o rounded-rectangles.o `test -f 'micro/rounded-rectangles.c' || echo '$(srcdir)/'`micro/rounded-rectangles.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rounded-rectangles.Tpo $(DEPDIR)/rounded-rectangles.Po
#	$(AM_V_CC) \
#	source='micro/rounded-rectangles.c' object='rounded-rectangles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rounded-rectangles.o `test -f 'micro/rounded-rectangles.c' || echo '$(srcdir)/'`micro/rounded-rectangles.c

rounded-rectangles.obj: micro/rounded-rectangles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rounded-rectangles.obj -MD -MP -MF $(DEPDIR)/rounded-rectangles.Tpo -c -o rounded-rectangles.obj `if test -f 'micro/rounded-rectangles.c'; then $(CYGPATH_W) 'micro/rounded-rectangles.c'; else $(CYGPATH_W) '$(srcdir)/micro/rounded-rectangles.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rounded-rectangles.Tpo $(DEPDIR)/rounded-rectangles.Po
#	$(AM_V_CC) \
#	source='micro/rounded-rectangles.c' object='rounded-rectangles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rounded-rectangles.obj `if test -f 'micro/rounded-rectangles.c'; then $(CYGPATH_W) 'micro/rounded-rectangles.c'; else $(CYGPATH_W) '$(srcdir)/micro/rounded-rectangles.c'; fi`

stroke.o: micro/stroke.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stroke.o -MD -MP -MF $(DEPDIR)/stroke.Tpo -c -o stroke.o `test -f 'micro/stroke.c' || echo '$(srcdir)/'`micro/stroke.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/stroke.Tpo $(DEPDIR)/stroke.Po
#	$(AM_V_CC) \
#	source='micro/stroke.c' object='stroke.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stroke.o `test -f 'micro/stroke.c' || echo '$(srcdir)/'`micro/stroke.c

stroke.obj: micro/stroke.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT stroke.obj -MD -MP -MF $(DEPDIR)/stroke.Tpo -c -o stroke.obj `if test -f 'micro/stroke.c'; then $(CYGPATH_W) 'micro/stroke.c'; else $(CYGPATH_W) '$(srcdir)/micro/stroke.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stroke.Tpo $(DEPDIR)/stroke.Po
#	$(AM_V_CC) \
#	source='micro/stroke.c' object='stroke.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o stroke.obj `if test -f 'micro/stroke.c'; then $(CYGPATH_W) 'micro/stroke.c'; else $(CYGPATH_W) '$(srcdir)/micro/stroke.c'; fi`

subimage_copy.o: micro/subimage_copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subimage_copy.o -MD -MP -MF $(DEPDIR)/subimage_copy.Tpo -c -o subimage_copy.o `test -f 'micro/subimage_copy.c' || echo '$(srcdir)/'`micro/subimage_copy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subimage_copy.Tpo $(DEPDIR)/subimage_copy.Po
#	$(AM_V_CC) \
#	source='micro/subimage_copy.c' object='subimage_copy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subimage_copy.o `test -f 'micro/subimage_copy.c' || echo '$(srcdir)/'`micro/subimage_copy.c

subimage_copy.obj: micro/subimage_copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subimage_copy.obj -MD -MP -MF $(DEPDIR)/subimage_copy.Tpo -c -o subimage_copy.obj `if test -f 'micro/subimage_copy.c'; then $(CYGPATH_W) 'micro/subimage_copy.c'; else $(CYGPATH_W) '$(srcdir)/micro/subimage_copy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subimage_copy.Tpo $(DEPDIR)/subimage_copy.Po
#	$(AM_V_CC) \
#	source='micro/subimage_copy.c' object='subimage_copy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subimage_copy.obj `if test -f 'micro/subimage_copy.c'; then $(CYGPATH_W) 'micro/subimage_copy.c'; else $(CYGPATH_W) '$(srcdir)/micro/subimage_copy.c'; fi`

tessellate.o: micro/tessellate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tessellate.o -MD -MP -MF $(DEPDIR)/tessellate.Tpo -c -o tessellate.o `test -f 'micro/tessellate.c' || echo '$(srcdir)/'`micro/tessellate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tessellate.Tpo $(DEPDIR)/tessellate.Po
#	$(AM_V_CC) \
#	source='micro/tessellate.c' object='tessellate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tessellate.o `test -f 'micro/tessellate.c' || echo '$(srcdir)/'`micro/tessellate.c

tessellate.obj: micro/tessellate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tessellate.obj -MD -MP -MF $(DEPDIR)/tessellate.Tpo -c -o tessellate.obj `if test -f 'micro/tessellate.c'; then $(CYGPATH_W) 'micro/tessellate.c'; else $(CYGPATH_W) '$(srcdir)/micro/tessellate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tessellate.Tpo $(DEPDIR)/tessellate.Po
#	$(AM_V_CC) \
#	source='micro/tessellate.c' object='tessellate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tessellate.obj `if test -f 'micro/tessellate.c'; then $(CYGPATH_W) 'micro/tessellate.c'; else $(CYGPATH_W) '$(srcdir)/micro/tessellate.c'; fi`

text.o: micro/text.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT text.o -MD -MP -MF $(DEPDIR)/text.Tpo -c -o text.o `test -f 'micro/text.c' || echo '$(srcdir)/'`micro/text.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/text.Tpo $(DEPDIR)/text.Po
#	$(AM_V_CC) \
#	source='micro/text.c' object='text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o text.o `test -f 'micro/text.c' || echo '$(srcdir)/'`micro/text.c

text.obj: micro/text.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT text.obj -MD -MP -MF $(DEPDIR)/text.Tpo -c -o text.obj `if test -f 'micro/text.c'; then $(CYGPATH_W) 'micro/text.c'; else $(CYGPATH_W) '$(srcdir)/micro/text.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/text.Tpo $(DEPDIR)/text.Po
#	$(AM_V_CC) \
#	source='micro/text.c' object='text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o text.obj `if test -f 'micro/text.c'; then $(CYGPATH_W) 'micro/text.c'; else $(CYGPATH_W) '$(srcdir)/micro/text.c'; fi`

glyphs.o: micro/glyphs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT glyphs.o -MD -MP -MF $(DEPDIR)/glyphs.Tpo -c -o glyphs.o `test -f 'micro/glyphs.c' || echo '$(srcdir)/'`micro/glyphs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/glyphs.Tpo $(DEPDIR)/glyphs.Po
#	$(AM_V_CC) \
#	source='micro/glyphs.c' object='glyphs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o glyphs.o `test -f 'micro/glyphs.c' || echo '$(srcdir)/'`micro/glyphs.c

glyphs.obj: micro/glyphs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT glyphs.obj -MD -MP -MF $(DEPDIR)/glyphs.Tpo -c -o glyphs.obj `if test -f 'micro/glyphs.c'; then $(CYGPATH_W) 'micro/glyphs.c'; else $(CYGPATH_W) '$(srcdir)/micro/glyphs.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/glyphs.Tpo $(DEPDIR)/glyphs.Po
#	$(AM_V_CC) \
#	source='micro/glyphs.c' object='glyphs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o glyphs.obj `if test -f 'micro/glyphs.c'; then $(CYGPATH_W) 'micro/glyphs.c'; else $(CYGPATH_W) '$(srcdir)/micro/glyphs.c'; fi`

twin.o: micro/twin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT twin.o -MD -MP -MF $(DEPDIR)/twin.Tpo -c -o twin.o `test -f 'micro/twin.c' || echo '$(srcdir)/'`micro/twin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/twin.Tpo $(DEPDIR)/twin.Po
#	$(AM_V_CC) \
#	source='micro/twin.c' object='twin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o twin.o `test -f 'micro/twin.c' || echo '$(srcdir)/'`micro/twin.c

twin.obj: micro/twin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT twin.obj -MD -MP -MF $(DEPDIR)/twin.Tpo -c -o twin.obj `if test -f 'micro/twin.c'; then $(CYGPATH_W) 'micro/twin.c'; else $(CYGPATH_W) '$(srcdir)/micro/twin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/twin.Tpo $(DEPDIR)/twin.Po
#	$(AM_V_CC) \
#	source='micro/twin.c' object='twin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o twin.obj `if test -f 'micro/twin.c'; then $(CYGPATH_W) 'micro/twin.c'; else $(CYGPATH_W) '$(srcdir)/micro/twin.c'; fi`

unaligned-clip.o: micro/unaligned-clip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unaligned-clip.o -MD -MP -MF $(DEPDIR)/unaligned-clip.Tpo -c -o unaligned-clip.o `test -f 'micro/unaligned-clip.c' || echo '$(srcdir)/'`micro/unaligned-clip.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unaligned-clip.Tpo $(DEPDIR)/unaligned-clip.Po
#	$(AM_V_CC) \
#	source='micro/unaligned-clip.c' object='unaligned-clip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unaligned-clip.o `test -f 'micro/unaligned-clip.c' || echo '$(srcdir)/'`micro/unaligned-clip.c

unaligned-clip.obj: micro/unaligned-clip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unaligned-clip.obj -MD -MP -MF $(DEPDIR)/unaligned-clip.Tpo -c -o unaligned-clip.obj `if test -f 'micro/unaligned-clip.c'; then $(CYGPATH_W) 'micro/unaligned-clip.c'; else $(CYGPATH_W) '$(srcdir)/micro/unaligned-clip.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unaligned-clip.Tpo $(DEPDIR)/unaligned-clip.Po
#	$(AM_V_CC) \
#	source='micro/unaligned-clip.c' object='unaligned-clip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unaligned-clip.obj `if test -f 'micro/unaligned-clip.c'; then $(CYGPATH_W) 'micro/unaligned-clip.c'; else $(CYGPATH_W) '$(srcdir)/micro/unaligned-clip.c'; fi`

world-map.o: micro/world-map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT world-map.o -MD -MP -MF $(DEPDIR)/world-map.Tpo -c -o world-map.o `test -f 'micro/world-map.c' || echo '$(srcdir)/'`micro/world-map.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/world-map.Tpo $(DEPDIR)/world-map.Po
#	$(AM_V_CC) \
#	source='micro/world-map.c' object='world-map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o world-map.o `test -f 'micro/world-map.c' || echo '$(srcdir)/'`micro/world-map.c

world-map.obj: micro/world-map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT world-map.obj -MD -MP -MF $(DEPDIR)/world-map.Tpo -c -o world-map.obj `if test -f 'micro/world-map.c'; then $(CYGPATH_W) 'micro/world-map.c'; else $(CYGPATH_W) '$(srcdir)/micro/world-map.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/world-map.Tpo $(DEPDIR)/world-map.Po
#	$(AM_V_CC) \
#	source='micro/world-map.c' object='world-map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o world-map.obj `if test -f 'micro/world-map.c'; then $(CYGPATH_W) 'micro/world-map.c'; else $(CYGPATH_W) '$(srcdir)/micro/world-map.c'; fi`

zrusin.o: micro/zrusin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zrusin.o -MD -MP -MF $(DEPDIR)/zrusin.Tpo -c -o zrusin.o `test -f 'micro/zrusin.c' || echo '$(srcdir)/'`micro/zrusin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zrusin.Tpo $(DEPDIR)/zrusin.Po
#	$(AM_V_CC) \
#	source='micro/zrusin.c' object='zrusin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zrusin.o `test -f 'micro/zrusin.c' || echo '$(srcdir)/'`micro/zrusin.c

zrusin.obj: micro/zrusin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zrusin.obj -MD -MP -MF $(DEPDIR)/zrusin.Tpo -c -o zrusin.obj `if test -f 'micro/zrusin.c'; then $(CYGPATH_W) 'micro/zrusin.c'; else $(CYGPATH_W) '$(srcdir)/micro/zrusin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zrusin.Tpo $(DEPDIR)/zrusin.Po
#	$(AM_V_CC) \
#	source='micro/zrusin.c' object='zrusin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zrusin.obj `if test -f 'micro/zrusin.c'; then $(CYGPATH_W) 'micro/zrusin.c'; else $(CYGPATH_W) '$(srcdir)/micro/zrusin.c'; fi`

long-dashed-lines.o: micro/long-dashed-lines.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT long-dashed-lines.o -MD -MP -MF $(DEPDIR)/long-dashed-lines.Tpo -c -o long-dashed-lines.o `test -f 'micro/long-dashed-lines.c' || echo '$(srcdir)/'`micro/long-dashed-lines.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/long-dashed-lines.Tpo $(DEPDIR)/long-dashed-lines.Po
#	$(AM_V_CC) \
#	source='micro/long-dashed-lines.c' object='long-dashed-lines.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o long-dashed-lines.o `test -f 'micro/long-dashed-lines.c' || echo '$(srcdir)/'`micro/long-dashed-lines.c

long-dashed-lines.obj: micro/long-dashed-lines.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT long-dashed-lines.obj -MD -MP -MF $(DEPDIR)/long-dashed-lines.Tpo -c -o long-dashed-lines.obj `if test -f 'micro/long-dashed-lines.c'; then $(CYGPATH_W) 'micro/long-dashed-lines.c'; else $(CYGPATH_W) '$(srcdir)/micro/long-dashed-lines.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/long-dashed-lines.Tpo $(DEPDIR)/long-dashed-lines.Po
#	$(AM_V_CC) \
#	source='micro/long-dashed-lines.c' object='long-dashed-lines.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o long-dashed-lines.obj `if test -f 'micro/long-dashed-lines.c'; then $(CYGPATH_W) 'micro/long-dashed-lines.c'; else $(CYGPATH_W) '$(srcdir)/micro/long-dashed-lines.c'; fi`

dragon.o: micro/dragon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dragon.o -MD -MP -MF $(DEPDIR)/dragon.Tpo -c -o dragon.o `test -f 'micro/dragon.c' || echo '$(srcdir)/'`micro/dragon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dragon.Tpo $(DEPDIR)/dragon.Po
#	$(AM_V_CC) \
#	source='micro/dragon.c' object='dragon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dragon.o `test -f 'micro/dragon.c' || echo '$(srcdir)/'`micro/dragon.c

dragon.obj: micro/dragon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dragon.obj -MD -MP -MF $(DEPDIR)/dragon.Tpo -c -o dragon.obj `if test -f 'micro/dragon.c'; then $(CYGPATH_W) 'micro/dragon.c'; else $(CYGPATH_W) '$(srcdir)/micro/dragon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dragon.Tpo $(DEPDIR)/dragon.Po
#	$(AM_V_CC) \
#	source='micro/dragon.c' object='dragon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dragon.obj `if test -f 'micro/dragon.c'; then $(CYGPATH_W) 'micro/dragon.c'; else $(CYGPATH_W) '$(srcdir)/micro/dragon.c'; fi`

pythagoras-tree.o: micro/pythagoras-tree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pythagoras-tree.o -MD -MP -MF $(DEPDIR)/pythagoras-tree.Tpo -c -o pythagoras-tree.o `test -f 'micro/pythagoras-tree.c' || echo '$(srcdir)/'`micro/pythagoras-tree.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pythagoras-tree.Tpo $(DEPDIR)/pythagoras-tree.Po
#	$(AM_V_CC) \
#	source='micro/pythagoras-tree.c' object='pythagoras-tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pythagoras-tree.o `test -f 'micro/pythagoras-tree.c' || echo '$(srcdir)/'`micro/pythagoras-tree.c

pythagoras-tree.obj: micro/pythagoras-tree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pythagoras-tree.obj -MD -MP -MF $(DEPDIR)/pythagoras-tree.Tpo -c -o pythagoras-tree.obj `if test -f 'micro/pythagoras-tree.c'; then $(CYGPATH_W) 'micro/pythagoras-tree.c'; else $(CYGPATH_W) '$(srcdir)/micro/pythagoras-tree.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pythagoras-tree.Tpo $(DEPDIR)/pythagoras-tree.Po
#	$(AM_V_CC) \
#	source='micro/pythagoras-tree.c' object='pythagoras-tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pythagoras-tree.obj `if test -f 'micro/pythagoras-tree.c'; then $(CYGPATH_W) 'micro/pythagoras-tree.c'; else $(CYGPATH_W) '$(srcdir)/micro/pythagoras-tree.c'; fi`

intersections.o: micro/intersections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intersections.o -MD -MP -MF $(DEPDIR)/intersections.Tpo -c -o intersections.o `test -f 'micro/intersections.c' || echo '$(srcdir)/'`micro/intersections.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/intersections.Tpo $(DEPDIR)/intersections.Po
#	$(AM_V_CC) \
#	source='micro/intersections.c' object='intersections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intersections.o `test -f 'micro/intersections.c' || echo '$(srcdir)/'`micro/intersections.c

intersections.obj: micro/intersections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intersections.obj -MD -MP -MF $(DEPDIR)/intersections.Tpo -c -o intersections.obj `if test -f 'micro/intersections.c'; then $(CYGPATH_W) 'micro/intersections.c'; else $(CYGPATH_W) '$(srcdir)/micro/intersections.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/intersections.Tpo $(DEPDIR)/intersections.Po
#	$(AM_V_CC) \
#	source='micro/intersections.c' object='intersections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intersections.obj `if test -f 'micro/intersections.c'; then $(CYGPATH_W) 'micro/intersections.c'; else $(CYGPATH_W) '$(srcdir)/micro/intersections.c'; fi`

spiral.o: micro/spiral.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spiral.o -MD -MP -MF $(DEPDIR)/spiral.Tpo -c -o spiral.o `test -f 'micro/spiral.c' || echo '$(srcdir)/'`micro/spiral.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/spiral.Tpo $(DEPDIR)/spiral.Po
#	$(AM_V_CC) \
#	source='micro/spiral.c' object='spiral.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spiral.o `test -f 'micro/spiral.c' || echo '$(srcdir)/'`micro/spiral.c

spiral.obj: micro/spiral.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spiral.obj -MD -MP -MF $(DEPDIR)/spiral.Tpo -c -o spiral.obj `if test -f 'micro/spiral.c'; then $(CYGPATH_W) 'micro/spiral.c'; else $(CYGPATH_W) '$(srcdir)/micro/spiral.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/spiral.Tpo $(DEPDIR)/spiral.Po
#	$(AM_V_CC) \
#	source='micro/spiral.c' object='spiral.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spiral.obj `if test -f 'micro/spiral.c'; then $(CYGPATH_W) 'micro/spiral.c'; else $(CYGPATH_W) '$(srcdir)/micro/spiral.c'; fi`

cairo-hash.o: ../src/cairo-hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cairo-hash.o -MD -MP -MF $(DEPDIR)/cairo-hash.Tpo -c -o cairo-hash.o `test -f '../src/cairo-hash.c' || echo '$(srcdir)/'`../src/cairo-hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo-hash.Tpo $(DEPDIR)/cairo-hash.Po
#	$(AM_V_CC) \
#	source='../src/cairo-hash.c' object='cairo-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cairo-hash.o `test -f '../src/cairo-hash.c' || echo '$(srcdir)/'`../src/cairo-hash.c

cairo-hash.obj: ../src/cairo-hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cairo-hash.obj -MD -MP -MF $(DEPDIR)/cairo-hash.Tpo -c -o cairo-hash.obj `if test -f '../src/cairo-hash.c'; then $(CYGPATH_W) '../src/cairo-hash.c'; else $(CYGPATH_W) '$(srcdir)/../src/cairo-hash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cairo-hash.Tpo $(DEPDIR)/cairo-hash.Po
#	$(AM_V_CC) \
#	source='../src/cairo-hash.c' object='cairo-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cairo-hash.obj `if test -f '../src/cairo-hash.c'; then $(CYGPATH_W) '../src/cairo-hash.c'; else $(CYGPATH_W) '$(srcdir)/../src/cairo-hash.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am: html-local

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am html-local info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Install rules to rebuild the libraries and add explicit dependencies
$(top_builddir)/boilerplate/libcairoboilerplate.la: $(top_builddir)/src/libcairo.la
	cd $(top_builddir)/boilerplate && $(MAKE) $(AM_MAKEFLAGS) libcairoboilerplate.la

$(top_builddir)/src/libcairo.la:
	cd $(top_builddir)/src && $(MAKE) $(AM_MAKEFLAGS) libcairo.la

$(top_builddir)/util/cairo-script/libcairo-script-interpreter.la: $(top_builddir)/src/libcairo.la
	cd $(top_builddir)/util/cairo-script && $(MAKE) $(AM_MAKEFLAGS) libcairo-script-interpreter.la

perf: cairo-perf-micro$(EXEEXT) cairo-perf-trace$(EXEEXT)
	-$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf-micro$(EXEEXT)
	-$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf-trace$(EXEEXT)

html-local: index.html

perf-tag.html : cairo-perf-micro${EXEEXT}
	$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf-diff -t -h $@ `git describe --abbrev=0` HEAD
perf-commit.html : cairo-perf-micro${EXEEXT}
	$(CAIRO_PERF_ENVIRONMENT) ./cairo-perf-diff -t -h $@ HEAD

# Summarise changes in index.html, with details in links
index.html: perf-tag.html perf-commit.html
	echo "<html><head><title>Performance Changes</title></head><body>Against <a href=\"perf-tag.html\">"`git describe --abbrev=0`"</a><br><a href=\"perf-commit.html\">Latest commit</a></body>" > $@

perf-valgrind:
	$(MAKE) $(AM_MAKEFLAGS) perf \
	    $(top_builddir)/libtool --mode=execute \
	    valgrind $(VALGRIND_MEMCHECK_FLAGS) $(EXTRA_VALGRIND_FLAGS)' \
	    | tee valgrind-log

perf-callgrind:
	$(MAKE) $(AM_MAKEFLAGS) perf \
	    $(top_builddir)/libtool --mode=execute \
	    valgrind $(VALGRIND_CALLGRIND_FLAGS) $(EXTRA_VALGRIND_FLAGS)'

.PHONY: perf perf-valgrind perf-callgrind

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
