This src directory contains tightvnc and ultravnc java viewer source
code that has been modified to support SSL connections (e.g. to x11vnc).
Additional bugs have been fixed and features added.

The patches created by me are:

   Copyright (c) 2004-2010 Karl J. Runge <runge@karlrunge.com>

and released under the GPL (see the COPYING file at the top of the
source tree).

The Makefile will create these jar files in this directory:

	VncViewer.jar
	SignedVncViewer.jar
	UltraViewerSSL.jar
	SignedUltraViewerSSL.jar
	VncViewerNOSSL.jar

The first two are from the tight subdir and the second two from the
ultra subdir.

The VncViewerNOSSL.jar one is built from the tight subdir, but has
SSL disabled.  So it can be a replacement for classes/VncViewer.jar.
The others will overwrite classes/ssl/*.jar.

In case you are wondering, we have both tight and ultra because the ultra
one is nice because it has filetransfer, however it can still be buggy,
so the tight one is more robust and should be used unless file transfer
is needed.

The SignedVncViewer.jar and SignedUltraViewerSSL.jar files are signed
applet versions of VncViewer.jar and UltraViewerSSL.jar, respectively.

Note that they are NOT signed to improve security at all!  The are signed
so that they can be used through Web proxies and so the ultra filetransfer
one can create local files.  The full details can be found here:

	http://www.karlrunge.com/x11vnc/#faq-ssl-java-viewer-proxy

The command 'make all' will make the jars.  The command 'make update_jars'
will make them and copy them over the jars in the parent directories.
Those are normal directories x11vnc will use to pick up the index.vnc
files and jar files.  One could then do a configure; make; make install
to have the fresh jars installed instead of the shipped ones.

Perhaps like this:

	(cd classes || exit 1; find . -name '*.jar' | xargs rm -f) || exit 1
	(cd classes/ssl/src; make update_jars; make clean) || exit 1
	./configure --prefix=LOCATION <other-options>
	make
	make install

These programs will need to be available to build:

	javac
	jar
	jarsigner

java version 1.4 or later will be needed.  SSLSocket appeared then.

I use 'javac -target 1.4 -source 1.4'.  I typically build the jars with
java version 1.4.2 that are distributed in the source tarballs.
