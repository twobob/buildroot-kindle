# Makefile.in generated by automake 1.9.5 from Makefile.am.
# x11vnc/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(x11vnc_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/x11vnc
pkglibdir = $(libdir)/x11vnc
pkgincludedir = $(includedir)/x11vnc
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabi
##am__append_1 = -framework OpenGL
##am__append_2 = -dylib_file $(GL):$(GL)
bin_PROGRAMS = x11vnc$(EXEEXT)
subdir = x11vnc
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/rfbconfig.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(desktopdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_x11vnc_OBJECTS = x11vnc-8to24.$(OBJEXT) x11vnc-appshare.$(OBJEXT) \
	x11vnc-avahi.$(OBJEXT) x11vnc-cleanup.$(OBJEXT) \
	x11vnc-connections.$(OBJEXT) x11vnc-cursor.$(OBJEXT) \
	x11vnc-gui.$(OBJEXT) x11vnc-help.$(OBJEXT) \
	x11vnc-inet.$(OBJEXT) x11vnc-keyboard.$(OBJEXT) \
	x11vnc-linuxfb.$(OBJEXT) x11vnc-macosx.$(OBJEXT) \
	x11vnc-macosxCG.$(OBJEXT) x11vnc-macosxCGP.$(OBJEXT) \
	x11vnc-macosxCGS.$(OBJEXT) x11vnc-macosx_opengl.$(OBJEXT) \
	x11vnc-options.$(OBJEXT) x11vnc-pm.$(OBJEXT) \
	x11vnc-pointer.$(OBJEXT) x11vnc-rates.$(OBJEXT) \
	x11vnc-remote.$(OBJEXT) x11vnc-scan.$(OBJEXT) \
	x11vnc-screen.$(OBJEXT) x11vnc-selection.$(OBJEXT) \
	x11vnc-solid.$(OBJEXT) x11vnc-sslcmds.$(OBJEXT) \
	x11vnc-sslhelper.$(OBJEXT) x11vnc-uinput.$(OBJEXT) \
	x11vnc-unixpw.$(OBJEXT) x11vnc-user.$(OBJEXT) \
	x11vnc-userinput.$(OBJEXT) x11vnc-util.$(OBJEXT) \
	x11vnc-v4l.$(OBJEXT) x11vnc-win_utils.$(OBJEXT) \
	x11vnc-x11vnc.$(OBJEXT) x11vnc-x11vnc_defs.$(OBJEXT) \
	x11vnc-xdamage.$(OBJEXT) x11vnc-xevents.$(OBJEXT) \
	x11vnc-xinerama.$(OBJEXT) x11vnc-xkb_bell.$(OBJEXT) \
	x11vnc-xrandr.$(OBJEXT) x11vnc-xrecord.$(OBJEXT) \
	x11vnc-xwrappers.$(OBJEXT)
x11vnc_OBJECTS = $(am_x11vnc_OBJECTS)
am__DEPENDENCIES_1 = ../libvncserver/libvncserver.a \
	../libvncclient/libvncclient.a
am__DEPENDENCIES_2 =
x11vnc_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(x11vnc_SOURCES)
DIST_SOURCES = $(x11vnc_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
desktopDATA_INSTALL = $(INSTALL_DATA)
DATA = $(desktop_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run tar
AR = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar
AUTOCONF = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run automake-1.9
AVAHI_CFLAGS = 
AVAHI_LIBS = 
AWK = gawk
CC = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2  -Wall
CPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CRYPT_LIBS = -lcrypt
CYGIPC_FALSE = 
CYGIPC_TRUE = #
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
HAVE_LIBJPEG_FALSE = 
HAVE_LIBJPEG_TRUE = #
HAVE_LIBPTHREAD_FALSE = #
HAVE_LIBPTHREAD_TRUE = 
HAVE_LIBSDL_FALSE = 
HAVE_LIBSDL_TRUE = #
HAVE_LIBZ_FALSE = #
HAVE_LIBZ_TRUE = 
HAVE_MP3LAME_FALSE = 
HAVE_MP3LAME_TRUE = #
HAVE_RPM_FALSE = 
HAVE_RPM_TRUE = #
HAVE_SYSTEM_LIBVNCSERVER_FALSE = 
HAVE_SYSTEM_LIBVNCSERVER_TRUE = #
HAVE_X11_FALSE = #
HAVE_X11_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS =  lstat$U.o stat$U.o
LIBS = -lnsl -lpthread -lz 
LINUX_FALSE = #
LINUX_TRUE = 
LTLIBOBJS =  lstat$U.lo stat$U.lo
MAKEINFO = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/missing --run makeinfo
MINGW_FALSE = 
MINGW_TRUE = #
OBJEXT = o
OSX_FALSE = 
OSX_OPENGL_FALSE = 
OSX_OPENGL_TRUE = #
OSX_TRUE = #
PACKAGE = x11vnc
PACKAGE_BUGREPORT = http://sourceforge.net/projects/libvncserver
PACKAGE_NAME = x11vnc
PACKAGE_STRING = x11vnc 0.9.13
PACKAGE_TARNAME = x11vnc
PACKAGE_VERSION = 0.9.13
PATH_SEPARATOR = :
RANLIB = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib
RPMSOURCEDIR = NOT-FOUND
SDL_CFLAGS = 
SDL_LIBS = 
SET_MAKE = 
SHELL = /bin/sh
SSL_LIBS = 
STRIP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip
SYSTEM_LIBVNCSERVER_CFLAGS = 
SYSTEM_LIBVNCSERVER_LIBS = 
VERSION = 0.9.13
WITH_FFMPEG_FALSE = 
WITH_FFMPEG_TRUE = #
WITH_TIGHTVNC_FILETRANSFER_FALSE = #
WITH_TIGHTVNC_FILETRANSFER_TRUE = 
WITH_X11VNC_FALSE = #
WITH_X11VNC_TRUE = 
WSOCKLIB = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -lXtst -lXtst -lXtst  -lXext -lXinerama -lXrandr -lXfixes -lXdamage -lX11 
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = 
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = /usr
host = arm-buildroot-linux-gnueabi
host_alias = arm-buildroot-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = buildroot
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/simon/GIT/buildroot-k3-current/output/build/x11vnc-0.9.13/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr
program_transform_name = s,^,,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabi
with_ffmpeg = 
LDADD = ../libvncserver/libvncserver.a ../libvncclient/libvncclient.a 
#LDADD =  
#FRAMEWORKS = -framework ApplicationServices -framework \
#	Carbon -framework IOKit -framework Cocoa \
#	$(am__append_1) $(am__append_2)
##GL = /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
#x11vnc_LDFLAGS = $(FRAMEWORKS)
#x11vnc_CFLAGS = -ObjC
SUBDIRS = misc
DIST_SUBDIRS = misc
desktopdir = $(datadir)/applications
desktop_DATA = x11vnc.desktop
man_MANS = x11vnc.1
EXTRA_DIST = ChangeLog README RELEASE-NOTES tkx11vnc $(man_MANS) $(desktop_DATA)
#LD_CYGIPC = -lcygipc
x11vnc_SOURCES = 8to24.c appshare.c avahi.c cleanup.c connections.c cursor.c gui.c help.c inet.c keyboard.c linuxfb.c macosx.c macosxCG.c macosxCGP.c macosxCGS.c macosx_opengl.c options.c pm.c pointer.c rates.c remote.c scan.c screen.c selection.c solid.c sslcmds.c sslhelper.c uinput.c unixpw.c user.c userinput.c util.c v4l.c win_utils.c x11vnc.c x11vnc_defs.c xdamage.c xevents.c xinerama.c xkb_bell.c xrandr.c xrecord.c xwrappers.c 8to24.h allowed_input_t.h avahi.h blackout_t.h cleanup.h connections.h cursor.h enc.h enums.h gui.h help.h inet.h keyboard.h linuxfb.h macosx.h macosxCG.h macosxCGP.h macosxCGS.h macosx_opengl.h nox11.h nox11_funcs.h options.h params.h pm.h pointer.h rates.h remote.h scan.h screen.h scrollevent_t.h selection.h solid.h sslcmds.h sslhelper.h ssltools.h tkx11vnc.h uinput.h unixpw.h user.h userinput.h util.h v4l.h win_utils.h winattr_t.h x11vnc.h xdamage.h xevents.h xinerama.h xkb_bell.h xrandr.h xrecord.h xwrappers.h
INCLUDES_LIBVNCSERVER = 
#INCLUDES_LIBVNCSERVER = 
INCLUDES = $(INCLUDES_LIBVNCSERVER)  
x11vnc_LDADD = $(LDADD)  -lcrypt  -lXtst -lXtst -lXtst  -lXext -lXinerama -lXrandr -lXfixes -lXdamage -lX11   $(LD_CYGIPC)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  x11vnc/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  x11vnc/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
x11vnc$(EXEEXT): $(x11vnc_OBJECTS) $(x11vnc_DEPENDENCIES) 
	@rm -f x11vnc$(EXEEXT)
	$(LINK) $(x11vnc_LDFLAGS) $(x11vnc_OBJECTS) $(x11vnc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/x11vnc-8to24.Po
include ./$(DEPDIR)/x11vnc-appshare.Po
include ./$(DEPDIR)/x11vnc-avahi.Po
include ./$(DEPDIR)/x11vnc-cleanup.Po
include ./$(DEPDIR)/x11vnc-connections.Po
include ./$(DEPDIR)/x11vnc-cursor.Po
include ./$(DEPDIR)/x11vnc-gui.Po
include ./$(DEPDIR)/x11vnc-help.Po
include ./$(DEPDIR)/x11vnc-inet.Po
include ./$(DEPDIR)/x11vnc-keyboard.Po
include ./$(DEPDIR)/x11vnc-linuxfb.Po
include ./$(DEPDIR)/x11vnc-macosx.Po
include ./$(DEPDIR)/x11vnc-macosxCG.Po
include ./$(DEPDIR)/x11vnc-macosxCGP.Po
include ./$(DEPDIR)/x11vnc-macosxCGS.Po
include ./$(DEPDIR)/x11vnc-macosx_opengl.Po
include ./$(DEPDIR)/x11vnc-options.Po
include ./$(DEPDIR)/x11vnc-pm.Po
include ./$(DEPDIR)/x11vnc-pointer.Po
include ./$(DEPDIR)/x11vnc-rates.Po
include ./$(DEPDIR)/x11vnc-remote.Po
include ./$(DEPDIR)/x11vnc-scan.Po
include ./$(DEPDIR)/x11vnc-screen.Po
include ./$(DEPDIR)/x11vnc-selection.Po
include ./$(DEPDIR)/x11vnc-solid.Po
include ./$(DEPDIR)/x11vnc-sslcmds.Po
include ./$(DEPDIR)/x11vnc-sslhelper.Po
include ./$(DEPDIR)/x11vnc-uinput.Po
include ./$(DEPDIR)/x11vnc-unixpw.Po
include ./$(DEPDIR)/x11vnc-user.Po
include ./$(DEPDIR)/x11vnc-userinput.Po
include ./$(DEPDIR)/x11vnc-util.Po
include ./$(DEPDIR)/x11vnc-v4l.Po
include ./$(DEPDIR)/x11vnc-win_utils.Po
include ./$(DEPDIR)/x11vnc-x11vnc.Po
include ./$(DEPDIR)/x11vnc-x11vnc_defs.Po
include ./$(DEPDIR)/x11vnc-xdamage.Po
include ./$(DEPDIR)/x11vnc-xevents.Po
include ./$(DEPDIR)/x11vnc-xinerama.Po
include ./$(DEPDIR)/x11vnc-xkb_bell.Po
include ./$(DEPDIR)/x11vnc-xrandr.Po
include ./$(DEPDIR)/x11vnc-xrecord.Po
include ./$(DEPDIR)/x11vnc-xwrappers.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

x11vnc-8to24.o: 8to24.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-8to24.o -MD -MP -MF "$(DEPDIR)/x11vnc-8to24.Tpo" -c -o x11vnc-8to24.o `test -f '8to24.c' || echo '$(srcdir)/'`8to24.c; \
	then mv -f "$(DEPDIR)/x11vnc-8to24.Tpo" "$(DEPDIR)/x11vnc-8to24.Po"; else rm -f "$(DEPDIR)/x11vnc-8to24.Tpo"; exit 1; fi
#	source='8to24.c' object='x11vnc-8to24.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-8to24.o `test -f '8to24.c' || echo '$(srcdir)/'`8to24.c

x11vnc-8to24.obj: 8to24.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-8to24.obj -MD -MP -MF "$(DEPDIR)/x11vnc-8to24.Tpo" -c -o x11vnc-8to24.obj `if test -f '8to24.c'; then $(CYGPATH_W) '8to24.c'; else $(CYGPATH_W) '$(srcdir)/8to24.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-8to24.Tpo" "$(DEPDIR)/x11vnc-8to24.Po"; else rm -f "$(DEPDIR)/x11vnc-8to24.Tpo"; exit 1; fi
#	source='8to24.c' object='x11vnc-8to24.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-8to24.obj `if test -f '8to24.c'; then $(CYGPATH_W) '8to24.c'; else $(CYGPATH_W) '$(srcdir)/8to24.c'; fi`

x11vnc-appshare.o: appshare.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-appshare.o -MD -MP -MF "$(DEPDIR)/x11vnc-appshare.Tpo" -c -o x11vnc-appshare.o `test -f 'appshare.c' || echo '$(srcdir)/'`appshare.c; \
	then mv -f "$(DEPDIR)/x11vnc-appshare.Tpo" "$(DEPDIR)/x11vnc-appshare.Po"; else rm -f "$(DEPDIR)/x11vnc-appshare.Tpo"; exit 1; fi
#	source='appshare.c' object='x11vnc-appshare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-appshare.o `test -f 'appshare.c' || echo '$(srcdir)/'`appshare.c

x11vnc-appshare.obj: appshare.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-appshare.obj -MD -MP -MF "$(DEPDIR)/x11vnc-appshare.Tpo" -c -o x11vnc-appshare.obj `if test -f 'appshare.c'; then $(CYGPATH_W) 'appshare.c'; else $(CYGPATH_W) '$(srcdir)/appshare.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-appshare.Tpo" "$(DEPDIR)/x11vnc-appshare.Po"; else rm -f "$(DEPDIR)/x11vnc-appshare.Tpo"; exit 1; fi
#	source='appshare.c' object='x11vnc-appshare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-appshare.obj `if test -f 'appshare.c'; then $(CYGPATH_W) 'appshare.c'; else $(CYGPATH_W) '$(srcdir)/appshare.c'; fi`

x11vnc-avahi.o: avahi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-avahi.o -MD -MP -MF "$(DEPDIR)/x11vnc-avahi.Tpo" -c -o x11vnc-avahi.o `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/x11vnc-avahi.Tpo" "$(DEPDIR)/x11vnc-avahi.Po"; else rm -f "$(DEPDIR)/x11vnc-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='x11vnc-avahi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-avahi.o `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

x11vnc-avahi.obj: avahi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-avahi.obj -MD -MP -MF "$(DEPDIR)/x11vnc-avahi.Tpo" -c -o x11vnc-avahi.obj `if test -f 'avahi.c'; then $(CYGPATH_W) 'avahi.c'; else $(CYGPATH_W) '$(srcdir)/avahi.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-avahi.Tpo" "$(DEPDIR)/x11vnc-avahi.Po"; else rm -f "$(DEPDIR)/x11vnc-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='x11vnc-avahi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-avahi.obj `if test -f 'avahi.c'; then $(CYGPATH_W) 'avahi.c'; else $(CYGPATH_W) '$(srcdir)/avahi.c'; fi`

x11vnc-cleanup.o: cleanup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-cleanup.o -MD -MP -MF "$(DEPDIR)/x11vnc-cleanup.Tpo" -c -o x11vnc-cleanup.o `test -f 'cleanup.c' || echo '$(srcdir)/'`cleanup.c; \
	then mv -f "$(DEPDIR)/x11vnc-cleanup.Tpo" "$(DEPDIR)/x11vnc-cleanup.Po"; else rm -f "$(DEPDIR)/x11vnc-cleanup.Tpo"; exit 1; fi
#	source='cleanup.c' object='x11vnc-cleanup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-cleanup.o `test -f 'cleanup.c' || echo '$(srcdir)/'`cleanup.c

x11vnc-cleanup.obj: cleanup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-cleanup.obj -MD -MP -MF "$(DEPDIR)/x11vnc-cleanup.Tpo" -c -o x11vnc-cleanup.obj `if test -f 'cleanup.c'; then $(CYGPATH_W) 'cleanup.c'; else $(CYGPATH_W) '$(srcdir)/cleanup.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-cleanup.Tpo" "$(DEPDIR)/x11vnc-cleanup.Po"; else rm -f "$(DEPDIR)/x11vnc-cleanup.Tpo"; exit 1; fi
#	source='cleanup.c' object='x11vnc-cleanup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-cleanup.obj `if test -f 'cleanup.c'; then $(CYGPATH_W) 'cleanup.c'; else $(CYGPATH_W) '$(srcdir)/cleanup.c'; fi`

x11vnc-connections.o: connections.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-connections.o -MD -MP -MF "$(DEPDIR)/x11vnc-connections.Tpo" -c -o x11vnc-connections.o `test -f 'connections.c' || echo '$(srcdir)/'`connections.c; \
	then mv -f "$(DEPDIR)/x11vnc-connections.Tpo" "$(DEPDIR)/x11vnc-connections.Po"; else rm -f "$(DEPDIR)/x11vnc-connections.Tpo"; exit 1; fi
#	source='connections.c' object='x11vnc-connections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-connections.o `test -f 'connections.c' || echo '$(srcdir)/'`connections.c

x11vnc-connections.obj: connections.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-connections.obj -MD -MP -MF "$(DEPDIR)/x11vnc-connections.Tpo" -c -o x11vnc-connections.obj `if test -f 'connections.c'; then $(CYGPATH_W) 'connections.c'; else $(CYGPATH_W) '$(srcdir)/connections.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-connections.Tpo" "$(DEPDIR)/x11vnc-connections.Po"; else rm -f "$(DEPDIR)/x11vnc-connections.Tpo"; exit 1; fi
#	source='connections.c' object='x11vnc-connections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-connections.obj `if test -f 'connections.c'; then $(CYGPATH_W) 'connections.c'; else $(CYGPATH_W) '$(srcdir)/connections.c'; fi`

x11vnc-cursor.o: cursor.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-cursor.o -MD -MP -MF "$(DEPDIR)/x11vnc-cursor.Tpo" -c -o x11vnc-cursor.o `test -f 'cursor.c' || echo '$(srcdir)/'`cursor.c; \
	then mv -f "$(DEPDIR)/x11vnc-cursor.Tpo" "$(DEPDIR)/x11vnc-cursor.Po"; else rm -f "$(DEPDIR)/x11vnc-cursor.Tpo"; exit 1; fi
#	source='cursor.c' object='x11vnc-cursor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-cursor.o `test -f 'cursor.c' || echo '$(srcdir)/'`cursor.c

x11vnc-cursor.obj: cursor.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-cursor.obj -MD -MP -MF "$(DEPDIR)/x11vnc-cursor.Tpo" -c -o x11vnc-cursor.obj `if test -f 'cursor.c'; then $(CYGPATH_W) 'cursor.c'; else $(CYGPATH_W) '$(srcdir)/cursor.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-cursor.Tpo" "$(DEPDIR)/x11vnc-cursor.Po"; else rm -f "$(DEPDIR)/x11vnc-cursor.Tpo"; exit 1; fi
#	source='cursor.c' object='x11vnc-cursor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-cursor.obj `if test -f 'cursor.c'; then $(CYGPATH_W) 'cursor.c'; else $(CYGPATH_W) '$(srcdir)/cursor.c'; fi`

x11vnc-gui.o: gui.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-gui.o -MD -MP -MF "$(DEPDIR)/x11vnc-gui.Tpo" -c -o x11vnc-gui.o `test -f 'gui.c' || echo '$(srcdir)/'`gui.c; \
	then mv -f "$(DEPDIR)/x11vnc-gui.Tpo" "$(DEPDIR)/x11vnc-gui.Po"; else rm -f "$(DEPDIR)/x11vnc-gui.Tpo"; exit 1; fi
#	source='gui.c' object='x11vnc-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-gui.o `test -f 'gui.c' || echo '$(srcdir)/'`gui.c

x11vnc-gui.obj: gui.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-gui.obj -MD -MP -MF "$(DEPDIR)/x11vnc-gui.Tpo" -c -o x11vnc-gui.obj `if test -f 'gui.c'; then $(CYGPATH_W) 'gui.c'; else $(CYGPATH_W) '$(srcdir)/gui.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-gui.Tpo" "$(DEPDIR)/x11vnc-gui.Po"; else rm -f "$(DEPDIR)/x11vnc-gui.Tpo"; exit 1; fi
#	source='gui.c' object='x11vnc-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-gui.obj `if test -f 'gui.c'; then $(CYGPATH_W) 'gui.c'; else $(CYGPATH_W) '$(srcdir)/gui.c'; fi`

x11vnc-help.o: help.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-help.o -MD -MP -MF "$(DEPDIR)/x11vnc-help.Tpo" -c -o x11vnc-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c; \
	then mv -f "$(DEPDIR)/x11vnc-help.Tpo" "$(DEPDIR)/x11vnc-help.Po"; else rm -f "$(DEPDIR)/x11vnc-help.Tpo"; exit 1; fi
#	source='help.c' object='x11vnc-help.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c

x11vnc-help.obj: help.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-help.obj -MD -MP -MF "$(DEPDIR)/x11vnc-help.Tpo" -c -o x11vnc-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-help.Tpo" "$(DEPDIR)/x11vnc-help.Po"; else rm -f "$(DEPDIR)/x11vnc-help.Tpo"; exit 1; fi
#	source='help.c' object='x11vnc-help.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`

x11vnc-inet.o: inet.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-inet.o -MD -MP -MF "$(DEPDIR)/x11vnc-inet.Tpo" -c -o x11vnc-inet.o `test -f 'inet.c' || echo '$(srcdir)/'`inet.c; \
	then mv -f "$(DEPDIR)/x11vnc-inet.Tpo" "$(DEPDIR)/x11vnc-inet.Po"; else rm -f "$(DEPDIR)/x11vnc-inet.Tpo"; exit 1; fi
#	source='inet.c' object='x11vnc-inet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-inet.o `test -f 'inet.c' || echo '$(srcdir)/'`inet.c

x11vnc-inet.obj: inet.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-inet.obj -MD -MP -MF "$(DEPDIR)/x11vnc-inet.Tpo" -c -o x11vnc-inet.obj `if test -f 'inet.c'; then $(CYGPATH_W) 'inet.c'; else $(CYGPATH_W) '$(srcdir)/inet.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-inet.Tpo" "$(DEPDIR)/x11vnc-inet.Po"; else rm -f "$(DEPDIR)/x11vnc-inet.Tpo"; exit 1; fi
#	source='inet.c' object='x11vnc-inet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-inet.obj `if test -f 'inet.c'; then $(CYGPATH_W) 'inet.c'; else $(CYGPATH_W) '$(srcdir)/inet.c'; fi`

x11vnc-keyboard.o: keyboard.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-keyboard.o -MD -MP -MF "$(DEPDIR)/x11vnc-keyboard.Tpo" -c -o x11vnc-keyboard.o `test -f 'keyboard.c' || echo '$(srcdir)/'`keyboard.c; \
	then mv -f "$(DEPDIR)/x11vnc-keyboard.Tpo" "$(DEPDIR)/x11vnc-keyboard.Po"; else rm -f "$(DEPDIR)/x11vnc-keyboard.Tpo"; exit 1; fi
#	source='keyboard.c' object='x11vnc-keyboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-keyboard.o `test -f 'keyboard.c' || echo '$(srcdir)/'`keyboard.c

x11vnc-keyboard.obj: keyboard.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-keyboard.obj -MD -MP -MF "$(DEPDIR)/x11vnc-keyboard.Tpo" -c -o x11vnc-keyboard.obj `if test -f 'keyboard.c'; then $(CYGPATH_W) 'keyboard.c'; else $(CYGPATH_W) '$(srcdir)/keyboard.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-keyboard.Tpo" "$(DEPDIR)/x11vnc-keyboard.Po"; else rm -f "$(DEPDIR)/x11vnc-keyboard.Tpo"; exit 1; fi
#	source='keyboard.c' object='x11vnc-keyboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-keyboard.obj `if test -f 'keyboard.c'; then $(CYGPATH_W) 'keyboard.c'; else $(CYGPATH_W) '$(srcdir)/keyboard.c'; fi`

x11vnc-linuxfb.o: linuxfb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-linuxfb.o -MD -MP -MF "$(DEPDIR)/x11vnc-linuxfb.Tpo" -c -o x11vnc-linuxfb.o `test -f 'linuxfb.c' || echo '$(srcdir)/'`linuxfb.c; \
	then mv -f "$(DEPDIR)/x11vnc-linuxfb.Tpo" "$(DEPDIR)/x11vnc-linuxfb.Po"; else rm -f "$(DEPDIR)/x11vnc-linuxfb.Tpo"; exit 1; fi
#	source='linuxfb.c' object='x11vnc-linuxfb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-linuxfb.o `test -f 'linuxfb.c' || echo '$(srcdir)/'`linuxfb.c

x11vnc-linuxfb.obj: linuxfb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-linuxfb.obj -MD -MP -MF "$(DEPDIR)/x11vnc-linuxfb.Tpo" -c -o x11vnc-linuxfb.obj `if test -f 'linuxfb.c'; then $(CYGPATH_W) 'linuxfb.c'; else $(CYGPATH_W) '$(srcdir)/linuxfb.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-linuxfb.Tpo" "$(DEPDIR)/x11vnc-linuxfb.Po"; else rm -f "$(DEPDIR)/x11vnc-linuxfb.Tpo"; exit 1; fi
#	source='linuxfb.c' object='x11vnc-linuxfb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-linuxfb.obj `if test -f 'linuxfb.c'; then $(CYGPATH_W) 'linuxfb.c'; else $(CYGPATH_W) '$(srcdir)/linuxfb.c'; fi`

x11vnc-macosx.o: macosx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosx.o -MD -MP -MF "$(DEPDIR)/x11vnc-macosx.Tpo" -c -o x11vnc-macosx.o `test -f 'macosx.c' || echo '$(srcdir)/'`macosx.c; \
	then mv -f "$(DEPDIR)/x11vnc-macosx.Tpo" "$(DEPDIR)/x11vnc-macosx.Po"; else rm -f "$(DEPDIR)/x11vnc-macosx.Tpo"; exit 1; fi
#	source='macosx.c' object='x11vnc-macosx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosx.o `test -f 'macosx.c' || echo '$(srcdir)/'`macosx.c

x11vnc-macosx.obj: macosx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosx.obj -MD -MP -MF "$(DEPDIR)/x11vnc-macosx.Tpo" -c -o x11vnc-macosx.obj `if test -f 'macosx.c'; then $(CYGPATH_W) 'macosx.c'; else $(CYGPATH_W) '$(srcdir)/macosx.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-macosx.Tpo" "$(DEPDIR)/x11vnc-macosx.Po"; else rm -f "$(DEPDIR)/x11vnc-macosx.Tpo"; exit 1; fi
#	source='macosx.c' object='x11vnc-macosx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosx.obj `if test -f 'macosx.c'; then $(CYGPATH_W) 'macosx.c'; else $(CYGPATH_W) '$(srcdir)/macosx.c'; fi`

x11vnc-macosxCG.o: macosxCG.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCG.o -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCG.Tpo" -c -o x11vnc-macosxCG.o `test -f 'macosxCG.c' || echo '$(srcdir)/'`macosxCG.c; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCG.Tpo" "$(DEPDIR)/x11vnc-macosxCG.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCG.Tpo"; exit 1; fi
#	source='macosxCG.c' object='x11vnc-macosxCG.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCG.o `test -f 'macosxCG.c' || echo '$(srcdir)/'`macosxCG.c

x11vnc-macosxCG.obj: macosxCG.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCG.obj -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCG.Tpo" -c -o x11vnc-macosxCG.obj `if test -f 'macosxCG.c'; then $(CYGPATH_W) 'macosxCG.c'; else $(CYGPATH_W) '$(srcdir)/macosxCG.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCG.Tpo" "$(DEPDIR)/x11vnc-macosxCG.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCG.Tpo"; exit 1; fi
#	source='macosxCG.c' object='x11vnc-macosxCG.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCG.obj `if test -f 'macosxCG.c'; then $(CYGPATH_W) 'macosxCG.c'; else $(CYGPATH_W) '$(srcdir)/macosxCG.c'; fi`

x11vnc-macosxCGP.o: macosxCGP.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCGP.o -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCGP.Tpo" -c -o x11vnc-macosxCGP.o `test -f 'macosxCGP.c' || echo '$(srcdir)/'`macosxCGP.c; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCGP.Tpo" "$(DEPDIR)/x11vnc-macosxCGP.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCGP.Tpo"; exit 1; fi
#	source='macosxCGP.c' object='x11vnc-macosxCGP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCGP.o `test -f 'macosxCGP.c' || echo '$(srcdir)/'`macosxCGP.c

x11vnc-macosxCGP.obj: macosxCGP.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCGP.obj -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCGP.Tpo" -c -o x11vnc-macosxCGP.obj `if test -f 'macosxCGP.c'; then $(CYGPATH_W) 'macosxCGP.c'; else $(CYGPATH_W) '$(srcdir)/macosxCGP.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCGP.Tpo" "$(DEPDIR)/x11vnc-macosxCGP.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCGP.Tpo"; exit 1; fi
#	source='macosxCGP.c' object='x11vnc-macosxCGP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCGP.obj `if test -f 'macosxCGP.c'; then $(CYGPATH_W) 'macosxCGP.c'; else $(CYGPATH_W) '$(srcdir)/macosxCGP.c'; fi`

x11vnc-macosxCGS.o: macosxCGS.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCGS.o -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCGS.Tpo" -c -o x11vnc-macosxCGS.o `test -f 'macosxCGS.c' || echo '$(srcdir)/'`macosxCGS.c; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCGS.Tpo" "$(DEPDIR)/x11vnc-macosxCGS.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCGS.Tpo"; exit 1; fi
#	source='macosxCGS.c' object='x11vnc-macosxCGS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCGS.o `test -f 'macosxCGS.c' || echo '$(srcdir)/'`macosxCGS.c

x11vnc-macosxCGS.obj: macosxCGS.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosxCGS.obj -MD -MP -MF "$(DEPDIR)/x11vnc-macosxCGS.Tpo" -c -o x11vnc-macosxCGS.obj `if test -f 'macosxCGS.c'; then $(CYGPATH_W) 'macosxCGS.c'; else $(CYGPATH_W) '$(srcdir)/macosxCGS.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-macosxCGS.Tpo" "$(DEPDIR)/x11vnc-macosxCGS.Po"; else rm -f "$(DEPDIR)/x11vnc-macosxCGS.Tpo"; exit 1; fi
#	source='macosxCGS.c' object='x11vnc-macosxCGS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosxCGS.obj `if test -f 'macosxCGS.c'; then $(CYGPATH_W) 'macosxCGS.c'; else $(CYGPATH_W) '$(srcdir)/macosxCGS.c'; fi`

x11vnc-macosx_opengl.o: macosx_opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosx_opengl.o -MD -MP -MF "$(DEPDIR)/x11vnc-macosx_opengl.Tpo" -c -o x11vnc-macosx_opengl.o `test -f 'macosx_opengl.c' || echo '$(srcdir)/'`macosx_opengl.c; \
	then mv -f "$(DEPDIR)/x11vnc-macosx_opengl.Tpo" "$(DEPDIR)/x11vnc-macosx_opengl.Po"; else rm -f "$(DEPDIR)/x11vnc-macosx_opengl.Tpo"; exit 1; fi
#	source='macosx_opengl.c' object='x11vnc-macosx_opengl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosx_opengl.o `test -f 'macosx_opengl.c' || echo '$(srcdir)/'`macosx_opengl.c

x11vnc-macosx_opengl.obj: macosx_opengl.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-macosx_opengl.obj -MD -MP -MF "$(DEPDIR)/x11vnc-macosx_opengl.Tpo" -c -o x11vnc-macosx_opengl.obj `if test -f 'macosx_opengl.c'; then $(CYGPATH_W) 'macosx_opengl.c'; else $(CYGPATH_W) '$(srcdir)/macosx_opengl.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-macosx_opengl.Tpo" "$(DEPDIR)/x11vnc-macosx_opengl.Po"; else rm -f "$(DEPDIR)/x11vnc-macosx_opengl.Tpo"; exit 1; fi
#	source='macosx_opengl.c' object='x11vnc-macosx_opengl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-macosx_opengl.obj `if test -f 'macosx_opengl.c'; then $(CYGPATH_W) 'macosx_opengl.c'; else $(CYGPATH_W) '$(srcdir)/macosx_opengl.c'; fi`

x11vnc-options.o: options.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-options.o -MD -MP -MF "$(DEPDIR)/x11vnc-options.Tpo" -c -o x11vnc-options.o `test -f 'options.c' || echo '$(srcdir)/'`options.c; \
	then mv -f "$(DEPDIR)/x11vnc-options.Tpo" "$(DEPDIR)/x11vnc-options.Po"; else rm -f "$(DEPDIR)/x11vnc-options.Tpo"; exit 1; fi
#	source='options.c' object='x11vnc-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-options.o `test -f 'options.c' || echo '$(srcdir)/'`options.c

x11vnc-options.obj: options.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-options.obj -MD -MP -MF "$(DEPDIR)/x11vnc-options.Tpo" -c -o x11vnc-options.obj `if test -f 'options.c'; then $(CYGPATH_W) 'options.c'; else $(CYGPATH_W) '$(srcdir)/options.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-options.Tpo" "$(DEPDIR)/x11vnc-options.Po"; else rm -f "$(DEPDIR)/x11vnc-options.Tpo"; exit 1; fi
#	source='options.c' object='x11vnc-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-options.obj `if test -f 'options.c'; then $(CYGPATH_W) 'options.c'; else $(CYGPATH_W) '$(srcdir)/options.c'; fi`

x11vnc-pm.o: pm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-pm.o -MD -MP -MF "$(DEPDIR)/x11vnc-pm.Tpo" -c -o x11vnc-pm.o `test -f 'pm.c' || echo '$(srcdir)/'`pm.c; \
	then mv -f "$(DEPDIR)/x11vnc-pm.Tpo" "$(DEPDIR)/x11vnc-pm.Po"; else rm -f "$(DEPDIR)/x11vnc-pm.Tpo"; exit 1; fi
#	source='pm.c' object='x11vnc-pm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-pm.o `test -f 'pm.c' || echo '$(srcdir)/'`pm.c

x11vnc-pm.obj: pm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-pm.obj -MD -MP -MF "$(DEPDIR)/x11vnc-pm.Tpo" -c -o x11vnc-pm.obj `if test -f 'pm.c'; then $(CYGPATH_W) 'pm.c'; else $(CYGPATH_W) '$(srcdir)/pm.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-pm.Tpo" "$(DEPDIR)/x11vnc-pm.Po"; else rm -f "$(DEPDIR)/x11vnc-pm.Tpo"; exit 1; fi
#	source='pm.c' object='x11vnc-pm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-pm.obj `if test -f 'pm.c'; then $(CYGPATH_W) 'pm.c'; else $(CYGPATH_W) '$(srcdir)/pm.c'; fi`

x11vnc-pointer.o: pointer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-pointer.o -MD -MP -MF "$(DEPDIR)/x11vnc-pointer.Tpo" -c -o x11vnc-pointer.o `test -f 'pointer.c' || echo '$(srcdir)/'`pointer.c; \
	then mv -f "$(DEPDIR)/x11vnc-pointer.Tpo" "$(DEPDIR)/x11vnc-pointer.Po"; else rm -f "$(DEPDIR)/x11vnc-pointer.Tpo"; exit 1; fi
#	source='pointer.c' object='x11vnc-pointer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-pointer.o `test -f 'pointer.c' || echo '$(srcdir)/'`pointer.c

x11vnc-pointer.obj: pointer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-pointer.obj -MD -MP -MF "$(DEPDIR)/x11vnc-pointer.Tpo" -c -o x11vnc-pointer.obj `if test -f 'pointer.c'; then $(CYGPATH_W) 'pointer.c'; else $(CYGPATH_W) '$(srcdir)/pointer.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-pointer.Tpo" "$(DEPDIR)/x11vnc-pointer.Po"; else rm -f "$(DEPDIR)/x11vnc-pointer.Tpo"; exit 1; fi
#	source='pointer.c' object='x11vnc-pointer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-pointer.obj `if test -f 'pointer.c'; then $(CYGPATH_W) 'pointer.c'; else $(CYGPATH_W) '$(srcdir)/pointer.c'; fi`

x11vnc-rates.o: rates.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-rates.o -MD -MP -MF "$(DEPDIR)/x11vnc-rates.Tpo" -c -o x11vnc-rates.o `test -f 'rates.c' || echo '$(srcdir)/'`rates.c; \
	then mv -f "$(DEPDIR)/x11vnc-rates.Tpo" "$(DEPDIR)/x11vnc-rates.Po"; else rm -f "$(DEPDIR)/x11vnc-rates.Tpo"; exit 1; fi
#	source='rates.c' object='x11vnc-rates.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-rates.o `test -f 'rates.c' || echo '$(srcdir)/'`rates.c

x11vnc-rates.obj: rates.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-rates.obj -MD -MP -MF "$(DEPDIR)/x11vnc-rates.Tpo" -c -o x11vnc-rates.obj `if test -f 'rates.c'; then $(CYGPATH_W) 'rates.c'; else $(CYGPATH_W) '$(srcdir)/rates.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-rates.Tpo" "$(DEPDIR)/x11vnc-rates.Po"; else rm -f "$(DEPDIR)/x11vnc-rates.Tpo"; exit 1; fi
#	source='rates.c' object='x11vnc-rates.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-rates.obj `if test -f 'rates.c'; then $(CYGPATH_W) 'rates.c'; else $(CYGPATH_W) '$(srcdir)/rates.c'; fi`

x11vnc-remote.o: remote.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-remote.o -MD -MP -MF "$(DEPDIR)/x11vnc-remote.Tpo" -c -o x11vnc-remote.o `test -f 'remote.c' || echo '$(srcdir)/'`remote.c; \
	then mv -f "$(DEPDIR)/x11vnc-remote.Tpo" "$(DEPDIR)/x11vnc-remote.Po"; else rm -f "$(DEPDIR)/x11vnc-remote.Tpo"; exit 1; fi
#	source='remote.c' object='x11vnc-remote.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-remote.o `test -f 'remote.c' || echo '$(srcdir)/'`remote.c

x11vnc-remote.obj: remote.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-remote.obj -MD -MP -MF "$(DEPDIR)/x11vnc-remote.Tpo" -c -o x11vnc-remote.obj `if test -f 'remote.c'; then $(CYGPATH_W) 'remote.c'; else $(CYGPATH_W) '$(srcdir)/remote.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-remote.Tpo" "$(DEPDIR)/x11vnc-remote.Po"; else rm -f "$(DEPDIR)/x11vnc-remote.Tpo"; exit 1; fi
#	source='remote.c' object='x11vnc-remote.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-remote.obj `if test -f 'remote.c'; then $(CYGPATH_W) 'remote.c'; else $(CYGPATH_W) '$(srcdir)/remote.c'; fi`

x11vnc-scan.o: scan.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-scan.o -MD -MP -MF "$(DEPDIR)/x11vnc-scan.Tpo" -c -o x11vnc-scan.o `test -f 'scan.c' || echo '$(srcdir)/'`scan.c; \
	then mv -f "$(DEPDIR)/x11vnc-scan.Tpo" "$(DEPDIR)/x11vnc-scan.Po"; else rm -f "$(DEPDIR)/x11vnc-scan.Tpo"; exit 1; fi
#	source='scan.c' object='x11vnc-scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-scan.o `test -f 'scan.c' || echo '$(srcdir)/'`scan.c

x11vnc-scan.obj: scan.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-scan.obj -MD -MP -MF "$(DEPDIR)/x11vnc-scan.Tpo" -c -o x11vnc-scan.obj `if test -f 'scan.c'; then $(CYGPATH_W) 'scan.c'; else $(CYGPATH_W) '$(srcdir)/scan.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-scan.Tpo" "$(DEPDIR)/x11vnc-scan.Po"; else rm -f "$(DEPDIR)/x11vnc-scan.Tpo"; exit 1; fi
#	source='scan.c' object='x11vnc-scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-scan.obj `if test -f 'scan.c'; then $(CYGPATH_W) 'scan.c'; else $(CYGPATH_W) '$(srcdir)/scan.c'; fi`

x11vnc-screen.o: screen.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-screen.o -MD -MP -MF "$(DEPDIR)/x11vnc-screen.Tpo" -c -o x11vnc-screen.o `test -f 'screen.c' || echo '$(srcdir)/'`screen.c; \
	then mv -f "$(DEPDIR)/x11vnc-screen.Tpo" "$(DEPDIR)/x11vnc-screen.Po"; else rm -f "$(DEPDIR)/x11vnc-screen.Tpo"; exit 1; fi
#	source='screen.c' object='x11vnc-screen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-screen.o `test -f 'screen.c' || echo '$(srcdir)/'`screen.c

x11vnc-screen.obj: screen.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-screen.obj -MD -MP -MF "$(DEPDIR)/x11vnc-screen.Tpo" -c -o x11vnc-screen.obj `if test -f 'screen.c'; then $(CYGPATH_W) 'screen.c'; else $(CYGPATH_W) '$(srcdir)/screen.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-screen.Tpo" "$(DEPDIR)/x11vnc-screen.Po"; else rm -f "$(DEPDIR)/x11vnc-screen.Tpo"; exit 1; fi
#	source='screen.c' object='x11vnc-screen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-screen.obj `if test -f 'screen.c'; then $(CYGPATH_W) 'screen.c'; else $(CYGPATH_W) '$(srcdir)/screen.c'; fi`

x11vnc-selection.o: selection.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-selection.o -MD -MP -MF "$(DEPDIR)/x11vnc-selection.Tpo" -c -o x11vnc-selection.o `test -f 'selection.c' || echo '$(srcdir)/'`selection.c; \
	then mv -f "$(DEPDIR)/x11vnc-selection.Tpo" "$(DEPDIR)/x11vnc-selection.Po"; else rm -f "$(DEPDIR)/x11vnc-selection.Tpo"; exit 1; fi
#	source='selection.c' object='x11vnc-selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-selection.o `test -f 'selection.c' || echo '$(srcdir)/'`selection.c

x11vnc-selection.obj: selection.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-selection.obj -MD -MP -MF "$(DEPDIR)/x11vnc-selection.Tpo" -c -o x11vnc-selection.obj `if test -f 'selection.c'; then $(CYGPATH_W) 'selection.c'; else $(CYGPATH_W) '$(srcdir)/selection.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-selection.Tpo" "$(DEPDIR)/x11vnc-selection.Po"; else rm -f "$(DEPDIR)/x11vnc-selection.Tpo"; exit 1; fi
#	source='selection.c' object='x11vnc-selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-selection.obj `if test -f 'selection.c'; then $(CYGPATH_W) 'selection.c'; else $(CYGPATH_W) '$(srcdir)/selection.c'; fi`

x11vnc-solid.o: solid.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-solid.o -MD -MP -MF "$(DEPDIR)/x11vnc-solid.Tpo" -c -o x11vnc-solid.o `test -f 'solid.c' || echo '$(srcdir)/'`solid.c; \
	then mv -f "$(DEPDIR)/x11vnc-solid.Tpo" "$(DEPDIR)/x11vnc-solid.Po"; else rm -f "$(DEPDIR)/x11vnc-solid.Tpo"; exit 1; fi
#	source='solid.c' object='x11vnc-solid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-solid.o `test -f 'solid.c' || echo '$(srcdir)/'`solid.c

x11vnc-solid.obj: solid.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-solid.obj -MD -MP -MF "$(DEPDIR)/x11vnc-solid.Tpo" -c -o x11vnc-solid.obj `if test -f 'solid.c'; then $(CYGPATH_W) 'solid.c'; else $(CYGPATH_W) '$(srcdir)/solid.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-solid.Tpo" "$(DEPDIR)/x11vnc-solid.Po"; else rm -f "$(DEPDIR)/x11vnc-solid.Tpo"; exit 1; fi
#	source='solid.c' object='x11vnc-solid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-solid.obj `if test -f 'solid.c'; then $(CYGPATH_W) 'solid.c'; else $(CYGPATH_W) '$(srcdir)/solid.c'; fi`

x11vnc-sslcmds.o: sslcmds.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-sslcmds.o -MD -MP -MF "$(DEPDIR)/x11vnc-sslcmds.Tpo" -c -o x11vnc-sslcmds.o `test -f 'sslcmds.c' || echo '$(srcdir)/'`sslcmds.c; \
	then mv -f "$(DEPDIR)/x11vnc-sslcmds.Tpo" "$(DEPDIR)/x11vnc-sslcmds.Po"; else rm -f "$(DEPDIR)/x11vnc-sslcmds.Tpo"; exit 1; fi
#	source='sslcmds.c' object='x11vnc-sslcmds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-sslcmds.o `test -f 'sslcmds.c' || echo '$(srcdir)/'`sslcmds.c

x11vnc-sslcmds.obj: sslcmds.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-sslcmds.obj -MD -MP -MF "$(DEPDIR)/x11vnc-sslcmds.Tpo" -c -o x11vnc-sslcmds.obj `if test -f 'sslcmds.c'; then $(CYGPATH_W) 'sslcmds.c'; else $(CYGPATH_W) '$(srcdir)/sslcmds.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-sslcmds.Tpo" "$(DEPDIR)/x11vnc-sslcmds.Po"; else rm -f "$(DEPDIR)/x11vnc-sslcmds.Tpo"; exit 1; fi
#	source='sslcmds.c' object='x11vnc-sslcmds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-sslcmds.obj `if test -f 'sslcmds.c'; then $(CYGPATH_W) 'sslcmds.c'; else $(CYGPATH_W) '$(srcdir)/sslcmds.c'; fi`

x11vnc-sslhelper.o: sslhelper.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-sslhelper.o -MD -MP -MF "$(DEPDIR)/x11vnc-sslhelper.Tpo" -c -o x11vnc-sslhelper.o `test -f 'sslhelper.c' || echo '$(srcdir)/'`sslhelper.c; \
	then mv -f "$(DEPDIR)/x11vnc-sslhelper.Tpo" "$(DEPDIR)/x11vnc-sslhelper.Po"; else rm -f "$(DEPDIR)/x11vnc-sslhelper.Tpo"; exit 1; fi
#	source='sslhelper.c' object='x11vnc-sslhelper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-sslhelper.o `test -f 'sslhelper.c' || echo '$(srcdir)/'`sslhelper.c

x11vnc-sslhelper.obj: sslhelper.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-sslhelper.obj -MD -MP -MF "$(DEPDIR)/x11vnc-sslhelper.Tpo" -c -o x11vnc-sslhelper.obj `if test -f 'sslhelper.c'; then $(CYGPATH_W) 'sslhelper.c'; else $(CYGPATH_W) '$(srcdir)/sslhelper.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-sslhelper.Tpo" "$(DEPDIR)/x11vnc-sslhelper.Po"; else rm -f "$(DEPDIR)/x11vnc-sslhelper.Tpo"; exit 1; fi
#	source='sslhelper.c' object='x11vnc-sslhelper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-sslhelper.obj `if test -f 'sslhelper.c'; then $(CYGPATH_W) 'sslhelper.c'; else $(CYGPATH_W) '$(srcdir)/sslhelper.c'; fi`

x11vnc-uinput.o: uinput.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-uinput.o -MD -MP -MF "$(DEPDIR)/x11vnc-uinput.Tpo" -c -o x11vnc-uinput.o `test -f 'uinput.c' || echo '$(srcdir)/'`uinput.c; \
	then mv -f "$(DEPDIR)/x11vnc-uinput.Tpo" "$(DEPDIR)/x11vnc-uinput.Po"; else rm -f "$(DEPDIR)/x11vnc-uinput.Tpo"; exit 1; fi
#	source='uinput.c' object='x11vnc-uinput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-uinput.o `test -f 'uinput.c' || echo '$(srcdir)/'`uinput.c

x11vnc-uinput.obj: uinput.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-uinput.obj -MD -MP -MF "$(DEPDIR)/x11vnc-uinput.Tpo" -c -o x11vnc-uinput.obj `if test -f 'uinput.c'; then $(CYGPATH_W) 'uinput.c'; else $(CYGPATH_W) '$(srcdir)/uinput.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-uinput.Tpo" "$(DEPDIR)/x11vnc-uinput.Po"; else rm -f "$(DEPDIR)/x11vnc-uinput.Tpo"; exit 1; fi
#	source='uinput.c' object='x11vnc-uinput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-uinput.obj `if test -f 'uinput.c'; then $(CYGPATH_W) 'uinput.c'; else $(CYGPATH_W) '$(srcdir)/uinput.c'; fi`

x11vnc-unixpw.o: unixpw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-unixpw.o -MD -MP -MF "$(DEPDIR)/x11vnc-unixpw.Tpo" -c -o x11vnc-unixpw.o `test -f 'unixpw.c' || echo '$(srcdir)/'`unixpw.c; \
	then mv -f "$(DEPDIR)/x11vnc-unixpw.Tpo" "$(DEPDIR)/x11vnc-unixpw.Po"; else rm -f "$(DEPDIR)/x11vnc-unixpw.Tpo"; exit 1; fi
#	source='unixpw.c' object='x11vnc-unixpw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-unixpw.o `test -f 'unixpw.c' || echo '$(srcdir)/'`unixpw.c

x11vnc-unixpw.obj: unixpw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-unixpw.obj -MD -MP -MF "$(DEPDIR)/x11vnc-unixpw.Tpo" -c -o x11vnc-unixpw.obj `if test -f 'unixpw.c'; then $(CYGPATH_W) 'unixpw.c'; else $(CYGPATH_W) '$(srcdir)/unixpw.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-unixpw.Tpo" "$(DEPDIR)/x11vnc-unixpw.Po"; else rm -f "$(DEPDIR)/x11vnc-unixpw.Tpo"; exit 1; fi
#	source='unixpw.c' object='x11vnc-unixpw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-unixpw.obj `if test -f 'unixpw.c'; then $(CYGPATH_W) 'unixpw.c'; else $(CYGPATH_W) '$(srcdir)/unixpw.c'; fi`

x11vnc-user.o: user.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-user.o -MD -MP -MF "$(DEPDIR)/x11vnc-user.Tpo" -c -o x11vnc-user.o `test -f 'user.c' || echo '$(srcdir)/'`user.c; \
	then mv -f "$(DEPDIR)/x11vnc-user.Tpo" "$(DEPDIR)/x11vnc-user.Po"; else rm -f "$(DEPDIR)/x11vnc-user.Tpo"; exit 1; fi
#	source='user.c' object='x11vnc-user.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-user.o `test -f 'user.c' || echo '$(srcdir)/'`user.c

x11vnc-user.obj: user.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-user.obj -MD -MP -MF "$(DEPDIR)/x11vnc-user.Tpo" -c -o x11vnc-user.obj `if test -f 'user.c'; then $(CYGPATH_W) 'user.c'; else $(CYGPATH_W) '$(srcdir)/user.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-user.Tpo" "$(DEPDIR)/x11vnc-user.Po"; else rm -f "$(DEPDIR)/x11vnc-user.Tpo"; exit 1; fi
#	source='user.c' object='x11vnc-user.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-user.obj `if test -f 'user.c'; then $(CYGPATH_W) 'user.c'; else $(CYGPATH_W) '$(srcdir)/user.c'; fi`

x11vnc-userinput.o: userinput.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-userinput.o -MD -MP -MF "$(DEPDIR)/x11vnc-userinput.Tpo" -c -o x11vnc-userinput.o `test -f 'userinput.c' || echo '$(srcdir)/'`userinput.c; \
	then mv -f "$(DEPDIR)/x11vnc-userinput.Tpo" "$(DEPDIR)/x11vnc-userinput.Po"; else rm -f "$(DEPDIR)/x11vnc-userinput.Tpo"; exit 1; fi
#	source='userinput.c' object='x11vnc-userinput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-userinput.o `test -f 'userinput.c' || echo '$(srcdir)/'`userinput.c

x11vnc-userinput.obj: userinput.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-userinput.obj -MD -MP -MF "$(DEPDIR)/x11vnc-userinput.Tpo" -c -o x11vnc-userinput.obj `if test -f 'userinput.c'; then $(CYGPATH_W) 'userinput.c'; else $(CYGPATH_W) '$(srcdir)/userinput.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-userinput.Tpo" "$(DEPDIR)/x11vnc-userinput.Po"; else rm -f "$(DEPDIR)/x11vnc-userinput.Tpo"; exit 1; fi
#	source='userinput.c' object='x11vnc-userinput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-userinput.obj `if test -f 'userinput.c'; then $(CYGPATH_W) 'userinput.c'; else $(CYGPATH_W) '$(srcdir)/userinput.c'; fi`

x11vnc-util.o: util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-util.o -MD -MP -MF "$(DEPDIR)/x11vnc-util.Tpo" -c -o x11vnc-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/x11vnc-util.Tpo" "$(DEPDIR)/x11vnc-util.Po"; else rm -f "$(DEPDIR)/x11vnc-util.Tpo"; exit 1; fi
#	source='util.c' object='x11vnc-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

x11vnc-util.obj: util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-util.obj -MD -MP -MF "$(DEPDIR)/x11vnc-util.Tpo" -c -o x11vnc-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-util.Tpo" "$(DEPDIR)/x11vnc-util.Po"; else rm -f "$(DEPDIR)/x11vnc-util.Tpo"; exit 1; fi
#	source='util.c' object='x11vnc-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

x11vnc-v4l.o: v4l.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-v4l.o -MD -MP -MF "$(DEPDIR)/x11vnc-v4l.Tpo" -c -o x11vnc-v4l.o `test -f 'v4l.c' || echo '$(srcdir)/'`v4l.c; \
	then mv -f "$(DEPDIR)/x11vnc-v4l.Tpo" "$(DEPDIR)/x11vnc-v4l.Po"; else rm -f "$(DEPDIR)/x11vnc-v4l.Tpo"; exit 1; fi
#	source='v4l.c' object='x11vnc-v4l.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-v4l.o `test -f 'v4l.c' || echo '$(srcdir)/'`v4l.c

x11vnc-v4l.obj: v4l.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-v4l.obj -MD -MP -MF "$(DEPDIR)/x11vnc-v4l.Tpo" -c -o x11vnc-v4l.obj `if test -f 'v4l.c'; then $(CYGPATH_W) 'v4l.c'; else $(CYGPATH_W) '$(srcdir)/v4l.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-v4l.Tpo" "$(DEPDIR)/x11vnc-v4l.Po"; else rm -f "$(DEPDIR)/x11vnc-v4l.Tpo"; exit 1; fi
#	source='v4l.c' object='x11vnc-v4l.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-v4l.obj `if test -f 'v4l.c'; then $(CYGPATH_W) 'v4l.c'; else $(CYGPATH_W) '$(srcdir)/v4l.c'; fi`

x11vnc-win_utils.o: win_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-win_utils.o -MD -MP -MF "$(DEPDIR)/x11vnc-win_utils.Tpo" -c -o x11vnc-win_utils.o `test -f 'win_utils.c' || echo '$(srcdir)/'`win_utils.c; \
	then mv -f "$(DEPDIR)/x11vnc-win_utils.Tpo" "$(DEPDIR)/x11vnc-win_utils.Po"; else rm -f "$(DEPDIR)/x11vnc-win_utils.Tpo"; exit 1; fi
#	source='win_utils.c' object='x11vnc-win_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-win_utils.o `test -f 'win_utils.c' || echo '$(srcdir)/'`win_utils.c

x11vnc-win_utils.obj: win_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-win_utils.obj -MD -MP -MF "$(DEPDIR)/x11vnc-win_utils.Tpo" -c -o x11vnc-win_utils.obj `if test -f 'win_utils.c'; then $(CYGPATH_W) 'win_utils.c'; else $(CYGPATH_W) '$(srcdir)/win_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-win_utils.Tpo" "$(DEPDIR)/x11vnc-win_utils.Po"; else rm -f "$(DEPDIR)/x11vnc-win_utils.Tpo"; exit 1; fi
#	source='win_utils.c' object='x11vnc-win_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-win_utils.obj `if test -f 'win_utils.c'; then $(CYGPATH_W) 'win_utils.c'; else $(CYGPATH_W) '$(srcdir)/win_utils.c'; fi`

x11vnc-x11vnc.o: x11vnc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-x11vnc.o -MD -MP -MF "$(DEPDIR)/x11vnc-x11vnc.Tpo" -c -o x11vnc-x11vnc.o `test -f 'x11vnc.c' || echo '$(srcdir)/'`x11vnc.c; \
	then mv -f "$(DEPDIR)/x11vnc-x11vnc.Tpo" "$(DEPDIR)/x11vnc-x11vnc.Po"; else rm -f "$(DEPDIR)/x11vnc-x11vnc.Tpo"; exit 1; fi
#	source='x11vnc.c' object='x11vnc-x11vnc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-x11vnc.o `test -f 'x11vnc.c' || echo '$(srcdir)/'`x11vnc.c

x11vnc-x11vnc.obj: x11vnc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-x11vnc.obj -MD -MP -MF "$(DEPDIR)/x11vnc-x11vnc.Tpo" -c -o x11vnc-x11vnc.obj `if test -f 'x11vnc.c'; then $(CYGPATH_W) 'x11vnc.c'; else $(CYGPATH_W) '$(srcdir)/x11vnc.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-x11vnc.Tpo" "$(DEPDIR)/x11vnc-x11vnc.Po"; else rm -f "$(DEPDIR)/x11vnc-x11vnc.Tpo"; exit 1; fi
#	source='x11vnc.c' object='x11vnc-x11vnc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-x11vnc.obj `if test -f 'x11vnc.c'; then $(CYGPATH_W) 'x11vnc.c'; else $(CYGPATH_W) '$(srcdir)/x11vnc.c'; fi`

x11vnc-x11vnc_defs.o: x11vnc_defs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-x11vnc_defs.o -MD -MP -MF "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo" -c -o x11vnc-x11vnc_defs.o `test -f 'x11vnc_defs.c' || echo '$(srcdir)/'`x11vnc_defs.c; \
	then mv -f "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo" "$(DEPDIR)/x11vnc-x11vnc_defs.Po"; else rm -f "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo"; exit 1; fi
#	source='x11vnc_defs.c' object='x11vnc-x11vnc_defs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-x11vnc_defs.o `test -f 'x11vnc_defs.c' || echo '$(srcdir)/'`x11vnc_defs.c

x11vnc-x11vnc_defs.obj: x11vnc_defs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-x11vnc_defs.obj -MD -MP -MF "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo" -c -o x11vnc-x11vnc_defs.obj `if test -f 'x11vnc_defs.c'; then $(CYGPATH_W) 'x11vnc_defs.c'; else $(CYGPATH_W) '$(srcdir)/x11vnc_defs.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo" "$(DEPDIR)/x11vnc-x11vnc_defs.Po"; else rm -f "$(DEPDIR)/x11vnc-x11vnc_defs.Tpo"; exit 1; fi
#	source='x11vnc_defs.c' object='x11vnc-x11vnc_defs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-x11vnc_defs.obj `if test -f 'x11vnc_defs.c'; then $(CYGPATH_W) 'x11vnc_defs.c'; else $(CYGPATH_W) '$(srcdir)/x11vnc_defs.c'; fi`

x11vnc-xdamage.o: xdamage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xdamage.o -MD -MP -MF "$(DEPDIR)/x11vnc-xdamage.Tpo" -c -o x11vnc-xdamage.o `test -f 'xdamage.c' || echo '$(srcdir)/'`xdamage.c; \
	then mv -f "$(DEPDIR)/x11vnc-xdamage.Tpo" "$(DEPDIR)/x11vnc-xdamage.Po"; else rm -f "$(DEPDIR)/x11vnc-xdamage.Tpo"; exit 1; fi
#	source='xdamage.c' object='x11vnc-xdamage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xdamage.o `test -f 'xdamage.c' || echo '$(srcdir)/'`xdamage.c

x11vnc-xdamage.obj: xdamage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xdamage.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xdamage.Tpo" -c -o x11vnc-xdamage.obj `if test -f 'xdamage.c'; then $(CYGPATH_W) 'xdamage.c'; else $(CYGPATH_W) '$(srcdir)/xdamage.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xdamage.Tpo" "$(DEPDIR)/x11vnc-xdamage.Po"; else rm -f "$(DEPDIR)/x11vnc-xdamage.Tpo"; exit 1; fi
#	source='xdamage.c' object='x11vnc-xdamage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xdamage.obj `if test -f 'xdamage.c'; then $(CYGPATH_W) 'xdamage.c'; else $(CYGPATH_W) '$(srcdir)/xdamage.c'; fi`

x11vnc-xevents.o: xevents.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xevents.o -MD -MP -MF "$(DEPDIR)/x11vnc-xevents.Tpo" -c -o x11vnc-xevents.o `test -f 'xevents.c' || echo '$(srcdir)/'`xevents.c; \
	then mv -f "$(DEPDIR)/x11vnc-xevents.Tpo" "$(DEPDIR)/x11vnc-xevents.Po"; else rm -f "$(DEPDIR)/x11vnc-xevents.Tpo"; exit 1; fi
#	source='xevents.c' object='x11vnc-xevents.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xevents.o `test -f 'xevents.c' || echo '$(srcdir)/'`xevents.c

x11vnc-xevents.obj: xevents.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xevents.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xevents.Tpo" -c -o x11vnc-xevents.obj `if test -f 'xevents.c'; then $(CYGPATH_W) 'xevents.c'; else $(CYGPATH_W) '$(srcdir)/xevents.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xevents.Tpo" "$(DEPDIR)/x11vnc-xevents.Po"; else rm -f "$(DEPDIR)/x11vnc-xevents.Tpo"; exit 1; fi
#	source='xevents.c' object='x11vnc-xevents.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xevents.obj `if test -f 'xevents.c'; then $(CYGPATH_W) 'xevents.c'; else $(CYGPATH_W) '$(srcdir)/xevents.c'; fi`

x11vnc-xinerama.o: xinerama.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xinerama.o -MD -MP -MF "$(DEPDIR)/x11vnc-xinerama.Tpo" -c -o x11vnc-xinerama.o `test -f 'xinerama.c' || echo '$(srcdir)/'`xinerama.c; \
	then mv -f "$(DEPDIR)/x11vnc-xinerama.Tpo" "$(DEPDIR)/x11vnc-xinerama.Po"; else rm -f "$(DEPDIR)/x11vnc-xinerama.Tpo"; exit 1; fi
#	source='xinerama.c' object='x11vnc-xinerama.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xinerama.o `test -f 'xinerama.c' || echo '$(srcdir)/'`xinerama.c

x11vnc-xinerama.obj: xinerama.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xinerama.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xinerama.Tpo" -c -o x11vnc-xinerama.obj `if test -f 'xinerama.c'; then $(CYGPATH_W) 'xinerama.c'; else $(CYGPATH_W) '$(srcdir)/xinerama.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xinerama.Tpo" "$(DEPDIR)/x11vnc-xinerama.Po"; else rm -f "$(DEPDIR)/x11vnc-xinerama.Tpo"; exit 1; fi
#	source='xinerama.c' object='x11vnc-xinerama.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xinerama.obj `if test -f 'xinerama.c'; then $(CYGPATH_W) 'xinerama.c'; else $(CYGPATH_W) '$(srcdir)/xinerama.c'; fi`

x11vnc-xkb_bell.o: xkb_bell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xkb_bell.o -MD -MP -MF "$(DEPDIR)/x11vnc-xkb_bell.Tpo" -c -o x11vnc-xkb_bell.o `test -f 'xkb_bell.c' || echo '$(srcdir)/'`xkb_bell.c; \
	then mv -f "$(DEPDIR)/x11vnc-xkb_bell.Tpo" "$(DEPDIR)/x11vnc-xkb_bell.Po"; else rm -f "$(DEPDIR)/x11vnc-xkb_bell.Tpo"; exit 1; fi
#	source='xkb_bell.c' object='x11vnc-xkb_bell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xkb_bell.o `test -f 'xkb_bell.c' || echo '$(srcdir)/'`xkb_bell.c

x11vnc-xkb_bell.obj: xkb_bell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xkb_bell.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xkb_bell.Tpo" -c -o x11vnc-xkb_bell.obj `if test -f 'xkb_bell.c'; then $(CYGPATH_W) 'xkb_bell.c'; else $(CYGPATH_W) '$(srcdir)/xkb_bell.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xkb_bell.Tpo" "$(DEPDIR)/x11vnc-xkb_bell.Po"; else rm -f "$(DEPDIR)/x11vnc-xkb_bell.Tpo"; exit 1; fi
#	source='xkb_bell.c' object='x11vnc-xkb_bell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xkb_bell.obj `if test -f 'xkb_bell.c'; then $(CYGPATH_W) 'xkb_bell.c'; else $(CYGPATH_W) '$(srcdir)/xkb_bell.c'; fi`

x11vnc-xrandr.o: xrandr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xrandr.o -MD -MP -MF "$(DEPDIR)/x11vnc-xrandr.Tpo" -c -o x11vnc-xrandr.o `test -f 'xrandr.c' || echo '$(srcdir)/'`xrandr.c; \
	then mv -f "$(DEPDIR)/x11vnc-xrandr.Tpo" "$(DEPDIR)/x11vnc-xrandr.Po"; else rm -f "$(DEPDIR)/x11vnc-xrandr.Tpo"; exit 1; fi
#	source='xrandr.c' object='x11vnc-xrandr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xrandr.o `test -f 'xrandr.c' || echo '$(srcdir)/'`xrandr.c

x11vnc-xrandr.obj: xrandr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xrandr.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xrandr.Tpo" -c -o x11vnc-xrandr.obj `if test -f 'xrandr.c'; then $(CYGPATH_W) 'xrandr.c'; else $(CYGPATH_W) '$(srcdir)/xrandr.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xrandr.Tpo" "$(DEPDIR)/x11vnc-xrandr.Po"; else rm -f "$(DEPDIR)/x11vnc-xrandr.Tpo"; exit 1; fi
#	source='xrandr.c' object='x11vnc-xrandr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xrandr.obj `if test -f 'xrandr.c'; then $(CYGPATH_W) 'xrandr.c'; else $(CYGPATH_W) '$(srcdir)/xrandr.c'; fi`

x11vnc-xrecord.o: xrecord.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xrecord.o -MD -MP -MF "$(DEPDIR)/x11vnc-xrecord.Tpo" -c -o x11vnc-xrecord.o `test -f 'xrecord.c' || echo '$(srcdir)/'`xrecord.c; \
	then mv -f "$(DEPDIR)/x11vnc-xrecord.Tpo" "$(DEPDIR)/x11vnc-xrecord.Po"; else rm -f "$(DEPDIR)/x11vnc-xrecord.Tpo"; exit 1; fi
#	source='xrecord.c' object='x11vnc-xrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xrecord.o `test -f 'xrecord.c' || echo '$(srcdir)/'`xrecord.c

x11vnc-xrecord.obj: xrecord.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xrecord.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xrecord.Tpo" -c -o x11vnc-xrecord.obj `if test -f 'xrecord.c'; then $(CYGPATH_W) 'xrecord.c'; else $(CYGPATH_W) '$(srcdir)/xrecord.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xrecord.Tpo" "$(DEPDIR)/x11vnc-xrecord.Po"; else rm -f "$(DEPDIR)/x11vnc-xrecord.Tpo"; exit 1; fi
#	source='xrecord.c' object='x11vnc-xrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xrecord.obj `if test -f 'xrecord.c'; then $(CYGPATH_W) 'xrecord.c'; else $(CYGPATH_W) '$(srcdir)/xrecord.c'; fi`

x11vnc-xwrappers.o: xwrappers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xwrappers.o -MD -MP -MF "$(DEPDIR)/x11vnc-xwrappers.Tpo" -c -o x11vnc-xwrappers.o `test -f 'xwrappers.c' || echo '$(srcdir)/'`xwrappers.c; \
	then mv -f "$(DEPDIR)/x11vnc-xwrappers.Tpo" "$(DEPDIR)/x11vnc-xwrappers.Po"; else rm -f "$(DEPDIR)/x11vnc-xwrappers.Tpo"; exit 1; fi
#	source='xwrappers.c' object='x11vnc-xwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xwrappers.o `test -f 'xwrappers.c' || echo '$(srcdir)/'`xwrappers.c

x11vnc-xwrappers.obj: xwrappers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -MT x11vnc-xwrappers.obj -MD -MP -MF "$(DEPDIR)/x11vnc-xwrappers.Tpo" -c -o x11vnc-xwrappers.obj `if test -f 'xwrappers.c'; then $(CYGPATH_W) 'xwrappers.c'; else $(CYGPATH_W) '$(srcdir)/xwrappers.c'; fi`; \
	then mv -f "$(DEPDIR)/x11vnc-xwrappers.Tpo" "$(DEPDIR)/x11vnc-xwrappers.Po"; else rm -f "$(DEPDIR)/x11vnc-xwrappers.Tpo"; exit 1; fi
#	source='xwrappers.c' object='x11vnc-xwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(x11vnc_CFLAGS) $(CFLAGS) -c -o x11vnc-xwrappers.obj `if test -f 'xwrappers.c'; then $(CYGPATH_W) 'xwrappers.c'; else $(CYGPATH_W) '$(srcdir)/xwrappers.c'; fi`
uninstall-info-am:
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(mkdir_p) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(desktopdir)" || $(mkdir_p) "$(DESTDIR)$(desktopdir)"
	@list='$(desktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(desktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(desktopdir)/$$f'"; \
	  $(desktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(desktopdir)/$$f"; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(desktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(desktopdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(MANS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(desktopdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-desktopDATA install-man

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-desktopDATA \
	uninstall-info-am uninstall-man

uninstall-info: uninstall-info-recursive

uninstall-man: uninstall-man1

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-desktopDATA install-exec \
	install-exec-am install-info install-info-am install-man \
	install-man1 install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-desktopDATA uninstall-info-am uninstall-man \
	uninstall-man1

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
