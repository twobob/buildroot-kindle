# Makefile.in generated by automake 1.11.3 from Makefile.am.
# glib/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GLIB - Library of useful C routines


pkgdatadir = $(datadir)/glib
pkgincludedir = $(includedir)/glib
pkglibdir = $(libdir)/glib
pkglibexecdir = $(libexecdir)/glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabi
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl
noinst_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_3)
am__append_1 = unix unix-nothreads bitlock
am__append_2 = atomic
am__append_3 = -Wstrict-aliasing=2
subdir = glib/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4macros/gtk-doc.m4 \
	$(top_srcdir)/m4macros/libtool.m4 \
	$(top_srcdir)/m4macros/ltoptions.m4 \
	$(top_srcdir)/m4macros/ltsugar.m4 \
	$(top_srcdir)/m4macros/ltversion.m4 \
	$(top_srcdir)/m4macros/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/acglib.m4 \
	$(top_srcdir)/glib/libcharset/codeset.m4 \
	$(top_srcdir)/glib/libcharset/glibc21.m4 \
	$(top_srcdir)/m4macros/glib-gettext.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = unix$(EXEEXT) unix-nothreads$(EXEEXT) \
	bitlock$(EXEEXT)
am__EXEEXT_2 = testing$(EXEEXT) option-context$(EXEEXT) \
	option-argv0$(EXEEXT) keyfile$(EXEEXT) fileutils$(EXEEXT) \
	test-printf$(EXEEXT) protocol$(EXEEXT) rand$(EXEEXT) \
	strfuncs$(EXEEXT) string$(EXEEXT) markup-parse$(EXEEXT) \
	markup-collect$(EXEEXT) markup-escape$(EXEEXT) \
	markup-subparser$(EXEEXT) array-test$(EXEEXT) \
	hostutils$(EXEEXT) gvariant$(EXEEXT) mem-overflow$(EXEEXT) \
	utf8-performance$(EXEEXT) utils$(EXEEXT) regex$(EXEEXT) \
	base64$(EXEEXT) sequence$(EXEEXT) scannerapi$(EXEEXT) \
	shell$(EXEEXT) collate$(EXEEXT) utf8-pointer$(EXEEXT) \
	utf8-validate$(EXEEXT) utf8-misc$(EXEEXT) unicode$(EXEEXT) \
	checksum$(EXEEXT) hmac$(EXEEXT) hash$(EXEEXT) cache$(EXEEXT) \
	date$(EXEEXT) node$(EXEEXT) convert$(EXEEXT) list$(EXEEXT) \
	slist$(EXEEXT) queue$(EXEEXT) tree$(EXEEXT) uri$(EXEEXT) \
	dir$(EXEEXT) pattern$(EXEEXT) logging$(EXEEXT) error$(EXEEXT) \
	bookmarkfile$(EXEEXT) gdatetime$(EXEEXT) timeout$(EXEEXT) \
	environment$(EXEEXT) mappedfile$(EXEEXT) dataset$(EXEEXT) \
	sort$(EXEEXT) $(am__EXEEXT_1)
am__EXEEXT_3 = atomic$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
array_test_SOURCES = array-test.c
array_test_OBJECTS = array-test.$(OBJEXT)
array_test_DEPENDENCIES = $(progs_ldadd)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
atomic_SOURCES = atomic.c
atomic_OBJECTS = atomic-atomic.$(OBJEXT)
atomic_DEPENDENCIES = $(progs_ldadd)
atomic_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(atomic_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
base64_SOURCES = base64.c
base64_OBJECTS = base64.$(OBJEXT)
base64_DEPENDENCIES = $(progs_ldadd)
bitlock_SOURCES = bitlock.c
bitlock_OBJECTS = bitlock.$(OBJEXT)
bitlock_DEPENDENCIES = $(progs_ldadd)
bookmarkfile_SOURCES = bookmarkfile.c
bookmarkfile_OBJECTS = bookmarkfile.$(OBJEXT)
bookmarkfile_DEPENDENCIES = $(progs_ldadd)
cache_SOURCES = cache.c
cache_OBJECTS = cache.$(OBJEXT)
cache_DEPENDENCIES = $(progs_ldadd)
checksum_SOURCES = checksum.c
checksum_OBJECTS = checksum.$(OBJEXT)
checksum_DEPENDENCIES = $(progs_ldadd)
collate_SOURCES = collate.c
collate_OBJECTS = collate.$(OBJEXT)
collate_DEPENDENCIES = $(progs_ldadd)
convert_SOURCES = convert.c
convert_OBJECTS = convert.$(OBJEXT)
convert_DEPENDENCIES = $(progs_ldadd)
dataset_SOURCES = dataset.c
dataset_OBJECTS = dataset.$(OBJEXT)
dataset_DEPENDENCIES = $(progs_ldadd)
date_SOURCES = date.c
date_OBJECTS = date.$(OBJEXT)
date_DEPENDENCIES = $(progs_ldadd)
dir_SOURCES = dir.c
dir_OBJECTS = dir.$(OBJEXT)
dir_DEPENDENCIES = $(progs_ldadd)
environment_SOURCES = environment.c
environment_OBJECTS = environment.$(OBJEXT)
environment_DEPENDENCIES = $(progs_ldadd)
error_SOURCES = error.c
error_OBJECTS = error.$(OBJEXT)
error_DEPENDENCIES = $(progs_ldadd)
am_fileutils_OBJECTS = fileutils.$(OBJEXT)
fileutils_OBJECTS = $(am_fileutils_OBJECTS)
fileutils_DEPENDENCIES = $(progs_ldadd)
am_gdatetime_OBJECTS = gdatetime.$(OBJEXT)
gdatetime_OBJECTS = $(am_gdatetime_OBJECTS)
gdatetime_DEPENDENCIES = $(progs_ldadd)
gvariant_SOURCES = gvariant.c
gvariant_OBJECTS = gvariant.$(OBJEXT)
gvariant_DEPENDENCIES = $(progs_ldadd)
hash_SOURCES = hash.c
hash_OBJECTS = hash.$(OBJEXT)
hash_DEPENDENCIES = $(progs_ldadd)
hmac_SOURCES = hmac.c
hmac_OBJECTS = hmac.$(OBJEXT)
hmac_DEPENDENCIES = $(progs_ldadd)
hostutils_SOURCES = hostutils.c
hostutils_OBJECTS = hostutils.$(OBJEXT)
hostutils_DEPENDENCIES = $(progs_ldadd)
am_keyfile_OBJECTS = keyfile.$(OBJEXT)
keyfile_OBJECTS = $(am_keyfile_OBJECTS)
keyfile_DEPENDENCIES = $(progs_ldadd)
list_SOURCES = list.c
list_OBJECTS = list.$(OBJEXT)
list_DEPENDENCIES = $(progs_ldadd)
logging_SOURCES = logging.c
logging_OBJECTS = logging.$(OBJEXT)
logging_DEPENDENCIES = $(progs_ldadd)
mappedfile_SOURCES = mappedfile.c
mappedfile_OBJECTS = mappedfile.$(OBJEXT)
mappedfile_DEPENDENCIES = $(progs_ldadd)
markup_collect_SOURCES = markup-collect.c
markup_collect_OBJECTS = markup-collect.$(OBJEXT)
markup_collect_DEPENDENCIES = $(progs_ldadd)
markup_escape_SOURCES = markup-escape.c
markup_escape_OBJECTS = markup-escape.$(OBJEXT)
markup_escape_DEPENDENCIES = $(progs_ldadd)
markup_parse_SOURCES = markup-parse.c
markup_parse_OBJECTS = markup-parse.$(OBJEXT)
markup_parse_DEPENDENCIES = $(progs_ldadd)
markup_subparser_SOURCES = markup-subparser.c
markup_subparser_OBJECTS = markup-subparser.$(OBJEXT)
markup_subparser_DEPENDENCIES = $(progs_ldadd)
mem_overflow_SOURCES = mem-overflow.c
mem_overflow_OBJECTS = mem-overflow.$(OBJEXT)
mem_overflow_DEPENDENCIES = $(progs_ldadd)
node_SOURCES = node.c
node_OBJECTS = node.$(OBJEXT)
node_DEPENDENCIES = $(progs_ldadd)
am_option_argv0_OBJECTS = option-argv0.$(OBJEXT)
option_argv0_OBJECTS = $(am_option_argv0_OBJECTS)
option_argv0_DEPENDENCIES = $(progs_ldadd)
am_option_context_OBJECTS = option-context.$(OBJEXT)
option_context_OBJECTS = $(am_option_context_OBJECTS)
option_context_DEPENDENCIES = $(progs_ldadd)
pattern_SOURCES = pattern.c
pattern_OBJECTS = pattern.$(OBJEXT)
pattern_DEPENDENCIES = $(progs_ldadd)
am_protocol_OBJECTS = protocol.$(OBJEXT)
protocol_OBJECTS = $(am_protocol_OBJECTS)
protocol_DEPENDENCIES = $(progs_ldadd)
queue_SOURCES = queue.c
queue_OBJECTS = queue.$(OBJEXT)
queue_DEPENDENCIES = $(progs_ldadd)
am_rand_OBJECTS = rand.$(OBJEXT)
rand_OBJECTS = $(am_rand_OBJECTS)
rand_DEPENDENCIES = $(progs_ldadd)
regex_SOURCES = regex.c
regex_OBJECTS = regex.$(OBJEXT)
regex_DEPENDENCIES = $(progs_ldadd)
scannerapi_SOURCES = scannerapi.c
scannerapi_OBJECTS = scannerapi.$(OBJEXT)
scannerapi_DEPENDENCIES = $(progs_ldadd)
sequence_SOURCES = sequence.c
sequence_OBJECTS = sequence.$(OBJEXT)
sequence_DEPENDENCIES = $(progs_ldadd)
shell_SOURCES = shell.c
shell_OBJECTS = shell.$(OBJEXT)
shell_DEPENDENCIES = $(progs_ldadd)
slist_SOURCES = slist.c
slist_OBJECTS = slist.$(OBJEXT)
slist_DEPENDENCIES = $(progs_ldadd)
sort_SOURCES = sort.c
sort_OBJECTS = sort.$(OBJEXT)
sort_DEPENDENCIES = $(progs_ldadd)
am_strfuncs_OBJECTS = strfuncs.$(OBJEXT)
strfuncs_OBJECTS = $(am_strfuncs_OBJECTS)
strfuncs_DEPENDENCIES = $(progs_ldadd)
am_string_OBJECTS = string.$(OBJEXT)
string_OBJECTS = $(am_string_OBJECTS)
string_DEPENDENCIES = $(progs_ldadd)
am_test_printf_OBJECTS = test-printf.$(OBJEXT)
test_printf_OBJECTS = $(am_test_printf_OBJECTS)
test_printf_DEPENDENCIES = $(progs_ldadd)
am_testing_OBJECTS = testing.$(OBJEXT)
testing_OBJECTS = $(am_testing_OBJECTS)
testing_DEPENDENCIES = $(progs_ldadd)
am_timeout_OBJECTS = timeout.$(OBJEXT)
timeout_OBJECTS = $(am_timeout_OBJECTS)
timeout_DEPENDENCIES = $(progs_ldadd)
tree_SOURCES = tree.c
tree_OBJECTS = tree.$(OBJEXT)
tree_DEPENDENCIES = $(progs_ldadd)
unicode_SOURCES = unicode.c
unicode_OBJECTS = unicode.$(OBJEXT)
unicode_DEPENDENCIES = $(progs_ldadd)
unix_SOURCES = unix.c
unix_OBJECTS = unix.$(OBJEXT)
unix_DEPENDENCIES = $(progs_ldadd)
am__unix_nothreads_SOURCES_DIST = unix.c
am_unix_nothreads_OBJECTS = unix.$(OBJEXT)
unix_nothreads_OBJECTS = $(am_unix_nothreads_OBJECTS)
unix_nothreads_DEPENDENCIES = $(progs_ldadd)
uri_SOURCES = uri.c
uri_OBJECTS = uri.$(OBJEXT)
uri_DEPENDENCIES = $(progs_ldadd)
utf8_misc_SOURCES = utf8-misc.c
utf8_misc_OBJECTS = utf8-misc.$(OBJEXT)
utf8_misc_DEPENDENCIES = $(progs_ldadd)
am_utf8_performance_OBJECTS = utf8-performance.$(OBJEXT)
utf8_performance_OBJECTS = $(am_utf8_performance_OBJECTS)
utf8_performance_DEPENDENCIES = $(progs_ldadd)
utf8_pointer_SOURCES = utf8-pointer.c
utf8_pointer_OBJECTS = utf8-pointer.$(OBJEXT)
utf8_pointer_DEPENDENCIES = $(progs_ldadd)
utf8_validate_SOURCES = utf8-validate.c
utf8_validate_OBJECTS = utf8-validate.$(OBJEXT)
utf8_validate_DEPENDENCIES = $(progs_ldadd)
utils_SOURCES = utils.c
utils_OBJECTS = utils.$(OBJEXT)
utils_DEPENDENCIES = $(progs_ldadd)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = array-test.c atomic.c base64.c bitlock.c bookmarkfile.c \
	cache.c checksum.c collate.c convert.c dataset.c date.c dir.c \
	environment.c error.c $(fileutils_SOURCES) \
	$(gdatetime_SOURCES) gvariant.c hash.c hmac.c hostutils.c \
	$(keyfile_SOURCES) list.c logging.c mappedfile.c \
	markup-collect.c markup-escape.c markup-parse.c \
	markup-subparser.c mem-overflow.c node.c \
	$(option_argv0_SOURCES) $(option_context_SOURCES) pattern.c \
	$(protocol_SOURCES) queue.c $(rand_SOURCES) regex.c \
	scannerapi.c sequence.c shell.c slist.c sort.c \
	$(strfuncs_SOURCES) $(string_SOURCES) $(test_printf_SOURCES) \
	$(testing_SOURCES) $(timeout_SOURCES) tree.c unicode.c unix.c \
	$(unix_nothreads_SOURCES) uri.c utf8-misc.c \
	$(utf8_performance_SOURCES) utf8-pointer.c utf8-validate.c \
	utils.c
DIST_SOURCES = array-test.c atomic.c base64.c bitlock.c bookmarkfile.c \
	cache.c checksum.c collate.c convert.c dataset.c date.c dir.c \
	environment.c error.c $(fileutils_SOURCES) \
	$(gdatetime_SOURCES) gvariant.c hash.c hmac.c hostutils.c \
	$(keyfile_SOURCES) list.c logging.c mappedfile.c \
	markup-collect.c markup-escape.c markup-parse.c \
	markup-subparser.c mem-overflow.c node.c \
	$(option_argv0_SOURCES) $(option_context_SOURCES) pattern.c \
	$(protocol_SOURCES) queue.c $(rand_SOURCES) regex.c \
	scannerapi.c sequence.c shell.c slist.c sort.c \
	$(strfuncs_SOURCES) $(string_SOURCES) $(test_printf_SOURCES) \
	$(testing_SOURCES) $(timeout_SOURCES) tree.c unicode.c unix.c \
	$(am__unix_nothreads_SOURCES_DIST) uri.c utf8-misc.c \
	$(utf8_performance_SOURCES) utf8-pointer.c utf8-validate.c \
	utils.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_GLIB_RUNTIME_LIBDIR = 
ABS_TAPSET_DIR = $(datadir)/systemtap/tapset
ACLOCAL = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/missing --run aclocal-1.11
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ar
AS = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-as
AUTOCONF = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/missing --run automake-1.11
AWK = gawk
CATALOGS =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2  -Wall
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/po/LINGUAS
CPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -DG_DISABLE_SINGLE_INCLUDES -pthread
CXX = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++
CXXCPP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -pipe -U_FORTIFY_SOURCE -fno-stack-protector -fomit-frame-pointer -fPIC -O2 
CYGPATH_W = echo
DATADIRNAME = share
DBUS1_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/dbus-1.0 -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/dbus-1.0/include  
DBUS1_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -ldbus-1 -lpthread -lrt  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_MEM_POOLS = 
DLLTOOL = false
DSYMUTIL = 
DTRACE = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FAM_LIBS = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = glib20
GIO = giounix.lo
GIO_MODULE_DIR = ${libdir}/gio/modules
GLIBC21 = yes
GLIB_BINARY_AGE = 3003
GLIB_COMPILE_SCHEMAS = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/glib-compile-schemas
GLIB_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GLIB_EXTRA_CFLAGS = 
GLIB_GENMARSHAL = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/glib-genmarshal
GLIB_INTERFACE_AGE = 3
GLIB_LINK_FLAGS = -Wl,-Bsymbolic-functions
GLIB_MAJOR_VERSION = 2
GLIB_MICRO_VERSION = 3
GLIB_MINOR_VERSION = 30
GLIB_RT_LIBS = -lrt
GLIB_RUNTIME_LIBDIR = 
GLIB_VERSION = 2.30.3
GLIB_WIN32_STATIC_COMPILATION_DEFINE = 
GMOFILES =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GSPAWN = gspawn.lo
GTHREAD_COMPILE_IMPL_DEFINES = -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
G_LIBS_EXTRA = 
G_MODULE_BROKEN_RTLD_GLOBAL = 0
G_MODULE_HAVE_DLERROR = 1
G_MODULE_IMPL = G_MODULE_IMPL_DL
G_MODULE_LDFLAGS = -Wl,--export-dynamic
G_MODULE_LIBS = -ldl
G_MODULE_LIBS_EXTRA = 
G_MODULE_NEED_USCORE = 0
G_MODULE_PLUGIN_LIBS = 
G_MODULE_SUPPORTED = true
G_THREAD_CFLAGS = -pthread
G_THREAD_LIBS = -pthread  -lrt
G_THREAD_LIBS_EXTRA = 
G_THREAD_LIBS_FOR_GTHREAD = -lpthread -lrt
HTML_DIR = ${datadir}/gtk-doc/html
ICONV_LIBS = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LD = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ld
LDFLAGS = 
LIBFFI_CFLAGS =  
LIBFFI_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lffi  
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^g.*"
LIB_EXE_MACHINE_FLAG = X86
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_AGE = 3000
LT_CURRENT = 3000
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 2.30
LT_REVISION = 3
MAINT = 
MAKEINFO = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NETWORK_LIBS = -lresolv 
NM = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-nm
NMEDIT = 
OBJDUMP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = glib
PACKAGE_STRING = glib 2.30.3
PACKAGE_TARNAME = glib
PACKAGE_URL = 
PACKAGE_VERSION = 2.30.3
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PCRE_REQUIRES = 
PCRE_WARN_CFLAGS =  -Wno-pointer-sign
PERL = perl
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLATFORMDEP = 
POFILES =  af.po am.po ar.po as.po ast.po az.po be.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po ca@valencia.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po en@shaw.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po id.po is.po it.po ja.po ka.po kk.po kn.po ko.po ku.po lt.po lv.po mai.po mg.po mk.po ml.po mn.po mr.po ms.po nb.po nds.po ne.po nl.po nn.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@latin.po sr@ije.po sv.po ta.po te.po th.po tl.po tr.po ug.po tt.po uk.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-ranlib
REBUILD = 
SED = /bin/sed
SELINUX_LIBS = 
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = /home/simon/GIT/buildroot-k3-current/output/host/usr/bin/arm-none-linux-gnueabi-strip
USE_NLS = yes
VERSION = 2.30.3
WINDRES = 
XATTR_LIBS = 
XGETTEXT = /usr/bin/xgettext
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
ZLIB_CFLAGS = -I/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include  
ZLIB_LIBS = -L/home/simon/GIT/buildroot-k3-current/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lz  
abs_builddir = /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/glib/tests
abs_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/glib/tests
abs_top_builddir = /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3
abs_top_srcdir = /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
config_h_INCLUDES = -I$(top_builddir)
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
gio_INCLUDES = $(gmodule_INCLUDES)
glib_INCLUDES = $(config_h_INCLUDES) -I$(top_builddir)/glib -I$(top_srcdir)/glib -I$(top_srcdir)
gmodule_INCLUDES = $(glib_INCLUDES) -I$(top_srcdir)/gmodule
gobject_INCLUDES = $(gthread_INCLUDES)
gthread_INCLUDES = $(glib_INCLUDES)
host = arm-buildroot-linux-gnueabi
host_alias = arm-buildroot-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/simon/GIT/buildroot-k3-current/output/build/libglib2-2.30.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /usr/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/glib
pkgpythondir = ${pythondir}/glib
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabi
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#GTESTER = gtester 			# for non-GLIB packages
GTESTER = $(top_builddir)/glib/gtester			# for the GLIB package
GTESTER_REPORT = $(top_builddir)/glib/gtester-report	# for the GLIB package

# initialize variables for unconditional += appending
EXTRA_DIST = 4096-random-bytes keyfiletest.ini pages.ini \
	bookmarks.xbel empty
TEST_PROGS = testing option-context option-argv0 keyfile fileutils \
	test-printf protocol rand strfuncs string markup-parse \
	markup-collect markup-escape markup-subparser array-test \
	hostutils gvariant mem-overflow utf8-performance utils regex \
	base64 sequence scannerapi shell collate utf8-pointer \
	utf8-validate utf8-misc unicode checksum hmac hash cache date \
	node convert list slist queue tree uri dir pattern logging \
	error bookmarkfile gdatetime timeout environment mappedfile \
	dataset sort $(am__append_1)
INCLUDES = \
	-g 				\
	$(glib_INCLUDES) 		\
	-DSRCDIR=\""$(srcdir)"\"	\
	$(GLIB_DEBUG_FLAGS)

progs_ldadd = $(top_builddir)/glib/libglib-2.0.la 
testing_SOURCES = testing.c
testing_LDADD = $(progs_ldadd)
option_context_SOURCES = option-context.c
option_context_LDADD = $(progs_ldadd)
option_argv0_SOURCES = option-argv0.c
option_argv0_LDADD = $(progs_ldadd)
keyfile_SOURCES = keyfile.c
keyfile_LDADD = $(progs_ldadd)
fileutils_SOURCES = fileutils.c
fileutils_LDADD = $(progs_ldadd)
test_printf_SOURCES = test-printf.c
test_printf_LDADD = $(progs_ldadd) -lm
protocol_SOURCES = protocol.c
protocol_LDADD = $(progs_ldadd)
rand_SOURCES = rand.c
rand_LDADD = $(progs_ldadd) -lm
strfuncs_SOURCES = strfuncs.c
strfuncs_LDADD = $(progs_ldadd) -lm
string_SOURCES = string.c
string_LDADD = $(progs_ldadd) -lm
markup_parse_LDADD = $(progs_ldadd)
markup_collect_LDADD = $(progs_ldadd)
markup_escape_LDADD = $(progs_ldadd)
markup_subparser_LDADD = $(progs_ldadd)
array_test_LDADD = $(progs_ldadd)
hostutils_LDADD = $(progs_ldadd)
gvariant_LDADD = $(progs_ldadd)
mem_overflow_LDADD = $(progs_ldadd)
utf8_performance_SOURCES = utf8-performance.c
utf8_performance_LDADD = $(progs_ldadd)
utils_LDADD = $(progs_ldadd)
regex_LDADD = $(progs_ldadd)
base64_LDADD = $(progs_ldadd)
sequence_LDADD = $(progs_ldadd)
scannerapi_LDADD = $(progs_ldadd)
shell_LDADD = $(progs_ldadd)
collate_LDADD = $(progs_ldadd)
utf8_pointer_LDADD = $(progs_ldadd)
utf8_validate_LDADD = $(progs_ldadd)
utf8_misc_LDADD = $(progs_ldadd)
unicode_LDADD = $(progs_ldadd)
checksum_LDADD = $(progs_ldadd)
hmac_LDADD = $(progs_ldadd)
hash_LDADD = $(progs_ldadd)
cache_LDADD = $(progs_ldadd)
date_LDADD = $(progs_ldadd)
node_LDADD = $(progs_ldadd)
convert_LDADD = $(progs_ldadd)
list_LDADD = $(progs_ldadd)
slist_LDADD = $(progs_ldadd)
queue_LDADD = $(progs_ldadd)
tree_LDADD = $(progs_ldadd)
uri_LDADD = $(progs_ldadd)
dir_LDADD = $(progs_ldadd)
pattern_LDADD = $(progs_ldadd)
logging_LDADD = $(progs_ldadd)
error_LDADD = $(progs_ldadd)
bookmarkfile_LDADD = $(progs_ldadd)
gdatetime_SOURCES = gdatetime.c
gdatetime_LDADD = $(progs_ldadd)
timeout_SOURCES = timeout.c
timeout_LDADD = $(progs_ldadd)
environment_LDADD = $(progs_ldadd)
mappedfile_LDADD = $(progs_ldadd)
dataset_LDADD = $(progs_ldadd)
sort_LDADD = $(progs_ldadd)
unix_LDADD = $(progs_ldadd)
unix_nothreads_SOURCES = unix.c
unix_nothreads_LDADD = $(progs_ldadd)
atomic_CFLAGS = $(INCLUDES) $(am__append_3)
atomic_LDADD = $(progs_ldadd)
bitlock_LDADD = $(progs_ldadd)

# some testing of gtester funcitonality
XMLLINT = xmllint
CLEANFILES = \
	tmpsample.xml

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu glib/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu glib/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.decl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
array-test$(EXEEXT): $(array_test_OBJECTS) $(array_test_DEPENDENCIES) $(EXTRA_array_test_DEPENDENCIES) 
	@rm -f array-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(array_test_OBJECTS) $(array_test_LDADD) $(LIBS)
atomic$(EXEEXT): $(atomic_OBJECTS) $(atomic_DEPENDENCIES) $(EXTRA_atomic_DEPENDENCIES) 
	@rm -f atomic$(EXEEXT)
	$(AM_V_CCLD)$(atomic_LINK) $(atomic_OBJECTS) $(atomic_LDADD) $(LIBS)
base64$(EXEEXT): $(base64_OBJECTS) $(base64_DEPENDENCIES) $(EXTRA_base64_DEPENDENCIES) 
	@rm -f base64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(base64_OBJECTS) $(base64_LDADD) $(LIBS)
bitlock$(EXEEXT): $(bitlock_OBJECTS) $(bitlock_DEPENDENCIES) $(EXTRA_bitlock_DEPENDENCIES) 
	@rm -f bitlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bitlock_OBJECTS) $(bitlock_LDADD) $(LIBS)
bookmarkfile$(EXEEXT): $(bookmarkfile_OBJECTS) $(bookmarkfile_DEPENDENCIES) $(EXTRA_bookmarkfile_DEPENDENCIES) 
	@rm -f bookmarkfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bookmarkfile_OBJECTS) $(bookmarkfile_LDADD) $(LIBS)
cache$(EXEEXT): $(cache_OBJECTS) $(cache_DEPENDENCIES) $(EXTRA_cache_DEPENDENCIES) 
	@rm -f cache$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cache_OBJECTS) $(cache_LDADD) $(LIBS)
checksum$(EXEEXT): $(checksum_OBJECTS) $(checksum_DEPENDENCIES) $(EXTRA_checksum_DEPENDENCIES) 
	@rm -f checksum$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(checksum_OBJECTS) $(checksum_LDADD) $(LIBS)
collate$(EXEEXT): $(collate_OBJECTS) $(collate_DEPENDENCIES) $(EXTRA_collate_DEPENDENCIES) 
	@rm -f collate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collate_OBJECTS) $(collate_LDADD) $(LIBS)
convert$(EXEEXT): $(convert_OBJECTS) $(convert_DEPENDENCIES) $(EXTRA_convert_DEPENDENCIES) 
	@rm -f convert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(convert_OBJECTS) $(convert_LDADD) $(LIBS)
dataset$(EXEEXT): $(dataset_OBJECTS) $(dataset_DEPENDENCIES) $(EXTRA_dataset_DEPENDENCIES) 
	@rm -f dataset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dataset_OBJECTS) $(dataset_LDADD) $(LIBS)
date$(EXEEXT): $(date_OBJECTS) $(date_DEPENDENCIES) $(EXTRA_date_DEPENDENCIES) 
	@rm -f date$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(date_OBJECTS) $(date_LDADD) $(LIBS)
dir$(EXEEXT): $(dir_OBJECTS) $(dir_DEPENDENCIES) $(EXTRA_dir_DEPENDENCIES) 
	@rm -f dir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dir_OBJECTS) $(dir_LDADD) $(LIBS)
environment$(EXEEXT): $(environment_OBJECTS) $(environment_DEPENDENCIES) $(EXTRA_environment_DEPENDENCIES) 
	@rm -f environment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(environment_OBJECTS) $(environment_LDADD) $(LIBS)
error$(EXEEXT): $(error_OBJECTS) $(error_DEPENDENCIES) $(EXTRA_error_DEPENDENCIES) 
	@rm -f error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(error_OBJECTS) $(error_LDADD) $(LIBS)
fileutils$(EXEEXT): $(fileutils_OBJECTS) $(fileutils_DEPENDENCIES) $(EXTRA_fileutils_DEPENDENCIES) 
	@rm -f fileutils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fileutils_OBJECTS) $(fileutils_LDADD) $(LIBS)
gdatetime$(EXEEXT): $(gdatetime_OBJECTS) $(gdatetime_DEPENDENCIES) $(EXTRA_gdatetime_DEPENDENCIES) 
	@rm -f gdatetime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gdatetime_OBJECTS) $(gdatetime_LDADD) $(LIBS)
gvariant$(EXEEXT): $(gvariant_OBJECTS) $(gvariant_DEPENDENCIES) $(EXTRA_gvariant_DEPENDENCIES) 
	@rm -f gvariant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gvariant_OBJECTS) $(gvariant_LDADD) $(LIBS)
hash$(EXEEXT): $(hash_OBJECTS) $(hash_DEPENDENCIES) $(EXTRA_hash_DEPENDENCIES) 
	@rm -f hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash_OBJECTS) $(hash_LDADD) $(LIBS)
hmac$(EXEEXT): $(hmac_OBJECTS) $(hmac_DEPENDENCIES) $(EXTRA_hmac_DEPENDENCIES) 
	@rm -f hmac$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hmac_OBJECTS) $(hmac_LDADD) $(LIBS)
hostutils$(EXEEXT): $(hostutils_OBJECTS) $(hostutils_DEPENDENCIES) $(EXTRA_hostutils_DEPENDENCIES) 
	@rm -f hostutils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hostutils_OBJECTS) $(hostutils_LDADD) $(LIBS)
keyfile$(EXEEXT): $(keyfile_OBJECTS) $(keyfile_DEPENDENCIES) $(EXTRA_keyfile_DEPENDENCIES) 
	@rm -f keyfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(keyfile_OBJECTS) $(keyfile_LDADD) $(LIBS)
list$(EXEEXT): $(list_OBJECTS) $(list_DEPENDENCIES) $(EXTRA_list_DEPENDENCIES) 
	@rm -f list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(list_OBJECTS) $(list_LDADD) $(LIBS)
logging$(EXEEXT): $(logging_OBJECTS) $(logging_DEPENDENCIES) $(EXTRA_logging_DEPENDENCIES) 
	@rm -f logging$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(logging_OBJECTS) $(logging_LDADD) $(LIBS)
mappedfile$(EXEEXT): $(mappedfile_OBJECTS) $(mappedfile_DEPENDENCIES) $(EXTRA_mappedfile_DEPENDENCIES) 
	@rm -f mappedfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mappedfile_OBJECTS) $(mappedfile_LDADD) $(LIBS)
markup-collect$(EXEEXT): $(markup_collect_OBJECTS) $(markup_collect_DEPENDENCIES) $(EXTRA_markup_collect_DEPENDENCIES) 
	@rm -f markup-collect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_collect_OBJECTS) $(markup_collect_LDADD) $(LIBS)
markup-escape$(EXEEXT): $(markup_escape_OBJECTS) $(markup_escape_DEPENDENCIES) $(EXTRA_markup_escape_DEPENDENCIES) 
	@rm -f markup-escape$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_escape_OBJECTS) $(markup_escape_LDADD) $(LIBS)
markup-parse$(EXEEXT): $(markup_parse_OBJECTS) $(markup_parse_DEPENDENCIES) $(EXTRA_markup_parse_DEPENDENCIES) 
	@rm -f markup-parse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_parse_OBJECTS) $(markup_parse_LDADD) $(LIBS)
markup-subparser$(EXEEXT): $(markup_subparser_OBJECTS) $(markup_subparser_DEPENDENCIES) $(EXTRA_markup_subparser_DEPENDENCIES) 
	@rm -f markup-subparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_subparser_OBJECTS) $(markup_subparser_LDADD) $(LIBS)
mem-overflow$(EXEEXT): $(mem_overflow_OBJECTS) $(mem_overflow_DEPENDENCIES) $(EXTRA_mem_overflow_DEPENDENCIES) 
	@rm -f mem-overflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mem_overflow_OBJECTS) $(mem_overflow_LDADD) $(LIBS)
node$(EXEEXT): $(node_OBJECTS) $(node_DEPENDENCIES) $(EXTRA_node_DEPENDENCIES) 
	@rm -f node$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(node_OBJECTS) $(node_LDADD) $(LIBS)
option-argv0$(EXEEXT): $(option_argv0_OBJECTS) $(option_argv0_DEPENDENCIES) $(EXTRA_option_argv0_DEPENDENCIES) 
	@rm -f option-argv0$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(option_argv0_OBJECTS) $(option_argv0_LDADD) $(LIBS)
option-context$(EXEEXT): $(option_context_OBJECTS) $(option_context_DEPENDENCIES) $(EXTRA_option_context_DEPENDENCIES) 
	@rm -f option-context$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(option_context_OBJECTS) $(option_context_LDADD) $(LIBS)
pattern$(EXEEXT): $(pattern_OBJECTS) $(pattern_DEPENDENCIES) $(EXTRA_pattern_DEPENDENCIES) 
	@rm -f pattern$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pattern_OBJECTS) $(pattern_LDADD) $(LIBS)
protocol$(EXEEXT): $(protocol_OBJECTS) $(protocol_DEPENDENCIES) $(EXTRA_protocol_DEPENDENCIES) 
	@rm -f protocol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(protocol_OBJECTS) $(protocol_LDADD) $(LIBS)
queue$(EXEEXT): $(queue_OBJECTS) $(queue_DEPENDENCIES) $(EXTRA_queue_DEPENDENCIES) 
	@rm -f queue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(queue_OBJECTS) $(queue_LDADD) $(LIBS)
rand$(EXEEXT): $(rand_OBJECTS) $(rand_DEPENDENCIES) $(EXTRA_rand_DEPENDENCIES) 
	@rm -f rand$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rand_OBJECTS) $(rand_LDADD) $(LIBS)
regex$(EXEEXT): $(regex_OBJECTS) $(regex_DEPENDENCIES) $(EXTRA_regex_DEPENDENCIES) 
	@rm -f regex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(regex_OBJECTS) $(regex_LDADD) $(LIBS)
scannerapi$(EXEEXT): $(scannerapi_OBJECTS) $(scannerapi_DEPENDENCIES) $(EXTRA_scannerapi_DEPENDENCIES) 
	@rm -f scannerapi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scannerapi_OBJECTS) $(scannerapi_LDADD) $(LIBS)
sequence$(EXEEXT): $(sequence_OBJECTS) $(sequence_DEPENDENCIES) $(EXTRA_sequence_DEPENDENCIES) 
	@rm -f sequence$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sequence_OBJECTS) $(sequence_LDADD) $(LIBS)
shell$(EXEEXT): $(shell_OBJECTS) $(shell_DEPENDENCIES) $(EXTRA_shell_DEPENDENCIES) 
	@rm -f shell$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shell_OBJECTS) $(shell_LDADD) $(LIBS)
slist$(EXEEXT): $(slist_OBJECTS) $(slist_DEPENDENCIES) $(EXTRA_slist_DEPENDENCIES) 
	@rm -f slist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slist_OBJECTS) $(slist_LDADD) $(LIBS)
sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES) $(EXTRA_sort_DEPENDENCIES) 
	@rm -f sort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)
strfuncs$(EXEEXT): $(strfuncs_OBJECTS) $(strfuncs_DEPENDENCIES) $(EXTRA_strfuncs_DEPENDENCIES) 
	@rm -f strfuncs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strfuncs_OBJECTS) $(strfuncs_LDADD) $(LIBS)
string$(EXEEXT): $(string_OBJECTS) $(string_DEPENDENCIES) $(EXTRA_string_DEPENDENCIES) 
	@rm -f string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(string_OBJECTS) $(string_LDADD) $(LIBS)
test-printf$(EXEEXT): $(test_printf_OBJECTS) $(test_printf_DEPENDENCIES) $(EXTRA_test_printf_DEPENDENCIES) 
	@rm -f test-printf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_printf_OBJECTS) $(test_printf_LDADD) $(LIBS)
testing$(EXEEXT): $(testing_OBJECTS) $(testing_DEPENDENCIES) $(EXTRA_testing_DEPENDENCIES) 
	@rm -f testing$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testing_OBJECTS) $(testing_LDADD) $(LIBS)
timeout$(EXEEXT): $(timeout_OBJECTS) $(timeout_DEPENDENCIES) $(EXTRA_timeout_DEPENDENCIES) 
	@rm -f timeout$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timeout_OBJECTS) $(timeout_LDADD) $(LIBS)
tree$(EXEEXT): $(tree_OBJECTS) $(tree_DEPENDENCIES) $(EXTRA_tree_DEPENDENCIES) 
	@rm -f tree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tree_OBJECTS) $(tree_LDADD) $(LIBS)
unicode$(EXEEXT): $(unicode_OBJECTS) $(unicode_DEPENDENCIES) $(EXTRA_unicode_DEPENDENCIES) 
	@rm -f unicode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_OBJECTS) $(unicode_LDADD) $(LIBS)
unix$(EXEEXT): $(unix_OBJECTS) $(unix_DEPENDENCIES) $(EXTRA_unix_DEPENDENCIES) 
	@rm -f unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unix_OBJECTS) $(unix_LDADD) $(LIBS)
unix-nothreads$(EXEEXT): $(unix_nothreads_OBJECTS) $(unix_nothreads_DEPENDENCIES) $(EXTRA_unix_nothreads_DEPENDENCIES) 
	@rm -f unix-nothreads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unix_nothreads_OBJECTS) $(unix_nothreads_LDADD) $(LIBS)
uri$(EXEEXT): $(uri_OBJECTS) $(uri_DEPENDENCIES) $(EXTRA_uri_DEPENDENCIES) 
	@rm -f uri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(uri_OBJECTS) $(uri_LDADD) $(LIBS)
utf8-misc$(EXEEXT): $(utf8_misc_OBJECTS) $(utf8_misc_DEPENDENCIES) $(EXTRA_utf8_misc_DEPENDENCIES) 
	@rm -f utf8-misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_misc_OBJECTS) $(utf8_misc_LDADD) $(LIBS)
utf8-performance$(EXEEXT): $(utf8_performance_OBJECTS) $(utf8_performance_DEPENDENCIES) $(EXTRA_utf8_performance_DEPENDENCIES) 
	@rm -f utf8-performance$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_performance_OBJECTS) $(utf8_performance_LDADD) $(LIBS)
utf8-pointer$(EXEEXT): $(utf8_pointer_OBJECTS) $(utf8_pointer_DEPENDENCIES) $(EXTRA_utf8_pointer_DEPENDENCIES) 
	@rm -f utf8-pointer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_pointer_OBJECTS) $(utf8_pointer_LDADD) $(LIBS)
utf8-validate$(EXEEXT): $(utf8_validate_OBJECTS) $(utf8_validate_DEPENDENCIES) $(EXTRA_utf8_validate_DEPENDENCIES) 
	@rm -f utf8-validate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_validate_OBJECTS) $(utf8_validate_LDADD) $(LIBS)
utils$(EXEEXT): $(utils_OBJECTS) $(utils_DEPENDENCIES) $(EXTRA_utils_DEPENDENCIES) 
	@rm -f utils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utils_OBJECTS) $(utils_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/array-test.Po
include ./$(DEPDIR)/atomic-atomic.Po
include ./$(DEPDIR)/base64.Po
include ./$(DEPDIR)/bitlock.Po
include ./$(DEPDIR)/bookmarkfile.Po
include ./$(DEPDIR)/cache.Po
include ./$(DEPDIR)/checksum.Po
include ./$(DEPDIR)/collate.Po
include ./$(DEPDIR)/convert.Po
include ./$(DEPDIR)/dataset.Po
include ./$(DEPDIR)/date.Po
include ./$(DEPDIR)/dir.Po
include ./$(DEPDIR)/environment.Po
include ./$(DEPDIR)/error.Po
include ./$(DEPDIR)/fileutils.Po
include ./$(DEPDIR)/gdatetime.Po
include ./$(DEPDIR)/gvariant.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/hmac.Po
include ./$(DEPDIR)/hostutils.Po
include ./$(DEPDIR)/keyfile.Po
include ./$(DEPDIR)/list.Po
include ./$(DEPDIR)/logging.Po
include ./$(DEPDIR)/mappedfile.Po
include ./$(DEPDIR)/markup-collect.Po
include ./$(DEPDIR)/markup-escape.Po
include ./$(DEPDIR)/markup-parse.Po
include ./$(DEPDIR)/markup-subparser.Po
include ./$(DEPDIR)/mem-overflow.Po
include ./$(DEPDIR)/node.Po
include ./$(DEPDIR)/option-argv0.Po
include ./$(DEPDIR)/option-context.Po
include ./$(DEPDIR)/pattern.Po
include ./$(DEPDIR)/protocol.Po
include ./$(DEPDIR)/queue.Po
include ./$(DEPDIR)/rand.Po
include ./$(DEPDIR)/regex.Po
include ./$(DEPDIR)/scannerapi.Po
include ./$(DEPDIR)/sequence.Po
include ./$(DEPDIR)/shell.Po
include ./$(DEPDIR)/slist.Po
include ./$(DEPDIR)/sort.Po
include ./$(DEPDIR)/strfuncs.Po
include ./$(DEPDIR)/string.Po
include ./$(DEPDIR)/test-printf.Po
include ./$(DEPDIR)/testing.Po
include ./$(DEPDIR)/timeout.Po
include ./$(DEPDIR)/tree.Po
include ./$(DEPDIR)/unicode.Po
include ./$(DEPDIR)/unix.Po
include ./$(DEPDIR)/uri.Po
include ./$(DEPDIR)/utf8-misc.Po
include ./$(DEPDIR)/utf8-performance.Po
include ./$(DEPDIR)/utf8-pointer.Po
include ./$(DEPDIR)/utf8-validate.Po
include ./$(DEPDIR)/utils.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

atomic-atomic.o: atomic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -MT atomic-atomic.o -MD -MP -MF $(DEPDIR)/atomic-atomic.Tpo -c -o atomic-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic-atomic.Tpo $(DEPDIR)/atomic-atomic.Po
#	$(AM_V_CC)source='atomic.c' object='atomic-atomic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -c -o atomic-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c

atomic-atomic.obj: atomic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -MT atomic-atomic.obj -MD -MP -MF $(DEPDIR)/atomic-atomic.Tpo -c -o atomic-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic-atomic.Tpo $(DEPDIR)/atomic-atomic.Po
#	$(AM_V_CC)source='atomic.c' object='atomic-atomic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -c -o atomic-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


### testing rules

# test: run all tests in cwd and subdirs
test: test-nonrecursive
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done

# test-nonrecursive: run tests only in cwd
test-nonrecursive: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || MALLOC_CHECK_=2 MALLOC_PERTURB_=$$(($${RANDOM:-256} % 256)) ${GTESTER} --verbose ${TEST_PROGS}
#test-nonrecursive:

# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  if test -d "$(top_srcdir)/.git" ; then \
	    REVISION=`git describe` ; \
	  else \
	    REVISION=$(VERSION) ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>'              > $@.xml ; \
	    echo '<report-collection>'               >> $@.xml ; \
	    echo '<info>'                            >> $@.xml ; \
	    echo '  <package>$(PACKAGE)</package>'   >> $@.xml ; \
	    echo '  <version>$(VERSION)</version>'   >> $@.xml ; \
	    echo "  <revision>$$REVISION</revision>" >> $@.xml ; \
	    echo '</info>'                           >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report test-nonrecursive

.PHONY: lcov genlcov lcov-clean
# use recursive makes in order to ignore errors during check
lcov:
	-$(MAKE) $(AM_MAKEFLAGS) -k check
	$(MAKE) $(AM_MAKEFLAGS) genlcov

# we have to massage the lcov.info file slightly to hide the effect of libtool
# placing the objects files in the .libs/ directory separate from the *.c
# we also have to delete tests/.libs/libmoduletestplugin_*.gcda
genlcov:
	rm -f $(top_builddir)/tests/.libs/libmoduletestplugin_*.gcda
	$(LTP) --directory $(top_builddir) --capture --output-file glib-lcov.info --test-name GLIB_PERF --no-checksum --compat-libtool
	LANG=C $(LTP_GENHTML) --prefix $(top_builddir) --output-directory glib-lcov --title "GLib Code Coverage" --legend --show-details glib-lcov.info
	@echo "file://$(abs_top_builddir)/glib-lcov/index.html"

lcov-clean:
	-$(LTP) --directory $(top_builddir) -z
	-rm -rf glib-lcov.info glib-lcov
	-find -name '*.gcda' -print | xargs rm

# run tests in cwd as part of make check
check-local: test-nonrecursive
gtester-xmllint-check: # check testreport xml with xmllint if present
	${GTESTER} -k --quiet -o tmpsample.xml --test-arg=--gtester-selftest ${GTESTER}
	${XMLLINT} --version 2>/dev/null; test "$$?" != 0 || ${XMLLINT} --noout tmpsample.xml
check-am: gtester-xmllint-check

dist-hook:
	mkdir $(distdir)/markups;		\
	for f in $(srcdir)/markups/*; do 	\
	  cp $$f $(distdir)/markups; done
	mkdir $(distdir)/bookmarks;		\
	for f in $(srcdir)/bookmarks/* ; do 	\
	  cp $$f $(distdir)/bookmarks; done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
